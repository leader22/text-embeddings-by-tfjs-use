import{E as Ct,i as fs,a as op,b as Ie,f as Ur,c as Ys,e as ws,o as as,d as Et,g as M,h as Gr,j as te,t as xe,m as Zt,k as O,T as gt,D as zf,l as m0,F as ol,n as g0,s as B,p as ie,q as vs,S as y0,M as x0,R as b0,A as w0,r as C0,u as I0,v as N0,w as ll,x as la,y as v0,z as Fe,B as lt,C as S0,G as Fs,H as nr,I as T0,J as vt,K as _s,L as $0,N as sr,O as nt,P as ln,Q as zn,U as rs,V as vn,W as ot,X as Be,Y as Zs,Z as k0,_ as R0,$ as Ue,a0 as et,a1 as is,a2 as E0,a3 as A0,a4 as D0,a5 as fi,a6 as Ht,a7 as O0,a8 as F0,a9 as ua,aa as Xl,ab as ql,ac as Kl,ad as Yl,ae as Ql,af as A,ag as mi,ah as gi,ai as ht,aj as os,ak as Te,al as ke,am as xt,an as ge,ao as yi,ap as xi,aq as fe,ar as G,as as Zl,at as Jl,au as We,av as eu,aw as bi,ax as wi,ay as re,az as Ci,aA as Ii,aB as Ni,aC as tu,aD as nu,aE as su,aF as au,aG as ru,aH as iu,aI as Vf,aJ as _0,aK as ou,aL as vi,aM as Si,aN as In,aO as Ls,aP as ca,aQ as Ti,aR as lu,aS as uu,aT as me,aU as Dn,aV as cu,aW as L0,aX as Bf,aY as hu,aZ as Hr,a_ as du,a$ as pu,b0 as P0,b1 as $i,b2 as Mf,b3 as ki,b4 as Wf,b5 as fu,b6 as Uf,b7 as mu,b8 as z0,b9 as V0,ba as gu,bb as ul,bc as cl,bd as Ri,be as yu,bf as Ei,bg as ha,bh as Ai,bi as xu,bj as Di,bk as Oi,bl as Fi,bm as bu,bn as Gf,bo as xs,bp as wu,bq as Hf,br as _i,bs as Cu,bt as Li,bu as Pi,bv as zi,bw as Iu,bx as un,by as Vi,bz as Bi,bA as B0,bB as Nu,bC as vu,bD as sn,bE as Su,bF as Mi,bG as jf,bH as Tu,bI as $u,bJ as ku,bK as Ru,bL as Eu,bM as da,bN as Au,bO as Wi,bP as Du,bQ as en,bR as Ui,bS as Ou,bT as Gi,bU as Fu,bV as _u,bW as kt,bX as Lu,bY as Pu,bZ as On,b_ as zu,b$ as Hi,c0 as Vu,c1 as Zn,c2 as Bu,c3 as Mu,c4 as hl,c5 as ji,c6 as Xi,c7 as qi,c8 as Ki,c9 as Wu,ca as Uu,cb as Gu,cc as Hu,cd as ju,ce as Xu,cf as Ga,cg as Yi,ch as Qi,ci as qu,cj as Xf,ck as Zi,cl as Ji,cm as eo,cn as to,co as Ku,cp as no,cq as qf,cr as Yu,cs as Qu,ct as Zu,cu as so,cv as ao,cw as Ju,cx as Kf,cy as ec,cz as Ps,cA as ro,cB as tc,cC as io,cD as oo,cE as lo,cF as nc,cG as uo,cH as co,cI as sc,cJ as ac,cK as rc,cL as Fn,cM as ic,cN as zs,cO as oc,cP as _n,cQ as lc,cR as M0,cS as D,cT as Ss,cU as W0,cV as U0,cW as Yf,cX as dl,cY as Ha,cZ as G0,c_ as H0,c$ as j0,d0 as X0,d1 as q0,d2 as K0,d3 as Qf,d4 as Y0,d5 as Zf,d6 as Q0,d7 as zt,d8 as Jf,d9 as em,da as Z0,db as tm,dc as J0,dd as eC,de as tC,df as uc,dg as nC,dh as sC,di as aC,dj as rC,dk as iC,dl as oC,dm as lC,dn as uC,dp as cC,dq as hC,dr as nm,ds as dC,dt as pC,du as sm,dv as fC,dw as am,dx as mC,dy as gC,dz as rm,dA as Js,dB as Ze,dC as im,dD as cc,dE as yC,dF as xC,dG as bC,dH as jr,dI as jt,dJ as wC,dK as om,dL as CC,dM as IC,dN as pa,dO as NC,dP as vC,dQ as SC,dR as TC,dS as $C,dT as lm,dU as um,dV as kC,dW as hc,dX as ho,dY as RC,dZ as po,d_ as EC,d$ as AC,e0 as dc,e1 as DC,e2 as OC,e3 as _t,e4 as FC,e5 as R,e6 as Xr,e7 as pc,e8 as cm,e9 as fc,ea as _C,eb as lp,ec as ja,ed as LC,ee as PC,ef as zC,eg as VC,eh as BC,ei as H,ej as fo,ek as hm,el as MC,em as WC,en as ar,eo as rr,ep as UC,eq as Ce,er as pl,es as up,et as it,eu as GC,ev as dm,ew as HC,ex as jC,ey as XC,ez as cp,eA as qC,eB as KC,eC as YC,eD as QC,eE as ZC,eF as JC,eG as mn,eH as e1,eI as t1,eJ as mc,eK as n1,eL as s1,eM as a1,eN as r1,eO as i1,eP as Ts,eQ as o1,eR as hp,eS as Cs,eT as ut,eU as Xa,eV as pm,eW as l1,eX as u1,eY as dp,eZ as ea,e_ as gc,e$ as yc,f0 as pp,f1 as c1,f2 as fm,f3 as mm,f4 as hn,f5 as h1,f6 as we,f7 as pt,f8 as fa,f9 as xn,fa as gm,fb as At,fc as ym,fd as mo,fe as xm,ff as xc,fg as je,fh as bc,fi as wc,fj as Cc,fk as Ic,fl as ls,fm as Nc,fn as dt,fo as vc,fp as d1,fq as Aa,fr as bm,fs as wm,ft as Cm,fu as Im,fv as Nm,fw as vm,fx as Sm,fy as Tm,fz as $m,fA as km,fB as Rm,fC as Em,fD as p1,fE as Am,fF as Dm,fG as Om,fH as Fm,fI as _m,fJ as Lm,fK as Pm,fL as zm,fM as Vm,fN as Bm,fO as Mm,fP as Wm,fQ as Um,fR as Gm,fS as Hm,fT as jm,fU as Sc,fV as Tc,fW as $c,fX as Xm,fY as qm,fZ as Km,f_ as Ym,f$ as Qm,g0 as Zm,g1 as Jm,g2 as eg,g3 as tg,g4 as ng,g5 as sg,g6 as ag,g7 as rg,g8 as ig,g9 as og,ga as lg,gb as ug,gc as cg,gd as hg,ge as dg,gf as pg,gg as fg,gh as mg,gi as gg,gj as yg,gk as xg,gl as bg,gm as fl,gn as fp,go as kc,gp as Vs,gq as wg,gr as mp,gs as f1,gt as m1,gu as g1,gv as y1,gw as Rc}from"./ops_for_converter-9f0568ae.js";import{gN as IH,gM as NH,h_ as vH,h$ as SH,i0 as TH,hx as $H,i1 as kH,gE as RH,gF as EH,i2 as AH,gD as DH,gU as OH,gV as FH,gW as _H,gX as LH,hy as PH,gY as zH,gz as VH,gZ as BH,hZ as MH,hF as WH,gG as UH,hK as GH,gC as HH,g_ as jH,hJ as XH,hL as qH,g$ as KH,hI as YH,hH as QH,hE as ZH,h0 as JH,hS as ej,hT as tj,gQ as nj,hD as sj,hQ as aj,hV as rj,hW as ij,gH as oj,gI as lj,h1 as uj,hG as cj,h2 as hj,gO as dj,h3 as pj,h4 as fj,h5 as mj,hz as gj,h6 as yj,h7 as xj,h8 as bj,h9 as wj,ha as Cj,hb as Ij,hc as Nj,hd as vj,hM as Sj,he as Tj,hf as $j,hg as kj,hh as Rj,hi as Ej,hj as Aj,hk as Dj,hP as Oj,hl as Fj,hR as _j,hm as Lj,hn as Pj,ho as zj,hp as Vj,hA as Bj,gB as Mj,hB as Wj,gx as Uj,hO as Gj,hU as Hj,hq as jj,gR as Xj,gS as qj,hC as Kj,gP as Yj,gT as Qj,hr as Zj,hs as Jj,ht as eX,hu as tX,gA as nX,hN as sX,hY as aX,hX as rX,hv as iX,gy as oX,gJ as lX,gK as uX,gL as cX,hw as hX}from"./ops_for_converter-9f0568ae.js";/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x1=.001,Cg=.1;function b1(n,e,t){return t==null&&(t=Ec()),ml(n,e,(s,a)=>Ac(s,a,t))}function Ec(){return Ct.backend.floatPrecision()===32?x1:Cg}function ml(n,e,t){let s=!0;if((fs(n)||fs(e))&&(s=!1),fs(n)&&fs(e)&&(s=!0),s){const i=n.constructor.name,o=e.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(n)&&Array.isArray(e)){const i=op(n),o=op(e);if(!Ie(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}const a=fs(n)?n:Ur(n),r=fs(e)?e:Ur(e);if(a.length!==r.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${r.length}.
Actual:   ${a}.
Expected: ${r}.`);for(let i=0;i<r.length;++i){const o=a[i],l=r[i];if(!t(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${a}.
Expected: ${r}.`)}typeof expect<"u"&&expect().nothing()}function w1(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function C1(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return Ys(n)||Ys(n[0])||Ys(e)||Ys(e[0])?ml(n,t,(s,a)=>s==a):ml(n,e,(s,a)=>Ac(s,a,0))}function I1(n,e,t){if(t==null&&(t=Ec()),!Ac(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function Ac(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function N1(n,e,t){for(let s=0;s<n.length;s++)if(n[s]<e||n[s]>t)throw new Error(`Value out of range:${n[s]} low: ${e}, high: ${t}`)}function v1(n,e){const t=new Float32Array(n),s=new Float32Array(e);if(t.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${t.length}`);for(let a=0;a<s.length;a++)if(t[a]!==s[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${s[a]} but got ${t[a]} instead`)}function Ig(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?Ig(t):n[e]=ws(t)}return n}function S1(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",s=>t(e)),e.load()})}async function T1(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const G4=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:Cg,createVideoElement:S1,encodeStrings:Ig,expectArrayBuffersEqual:v1,expectArraysClose:b1,expectArraysEqual:C1,expectNumbersClose:I1,expectPromiseToFail:w1,expectValuesInRange:N1,play:T1,testEpsilon:Ec},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $1(n,e,t){const s=Et(n,"labels","confusionMatrix"),a=Et(e,"predictions","confusionMatrix");M(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),M(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),M(a.rank===1,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),M(s.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),M(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const r=Gr(te(s,"int32"),t),i=Gr(te(a,"int32"),t),o=xe(r),l=Zt(o,i);return te(l,"int32")}const k1=as({confusionMatrix_:$1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H4=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:k1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ds,gp=!1;function Ng(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,a=!1,r=!1,i=!1,o=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)r=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(m0(ol,Ct.backendName)!=null){const f={pixels:n},g={numChannels:e};return Ct.runKernel(ol,f,g)}const[u,c]=a?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;if(i)h=n.getContext("2d").getImageData(0,0,u,c).data;else if(s||t)h=n.data;else if(r||a||o){if(ds==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")ds=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ds=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ds.canvas.width=u,ds.canvas.height=c,ds.drawImage(n,0,0,u,c),h=ds.getImageData(0,0,u,c).data}let d;if(e===4)d=new Int32Array(h);else{const f=u*c;d=new Int32Array(f*e);for(let g=0;g<f;g++)for(let m=0;m<e;++m)d[g*e+m]=h[g*4+m]}return g0(d,[c,u,e],"int32")}function R1(n){return n!=null&&n.data instanceof Uint8Array}function E1(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function A1(n){return n!=null&&n.width!==0&&n.height!==0}function D1(n){return E1()&&!(n instanceof ImageBitmap)&&A1(n)&&!R1(n)}async function O1(n,e=3){let t=null;if(O().getBool("WRAP_TO_IMAGEBITMAP")&&D1(n)){let s;try{s=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===n.width&&s.height===n.height?t=s:t=n}else t=n;return Ng(t,e)}function vg(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function F1(n){const e=(n==null?void 0:n.alpha)||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function _1(n,e){let t=Et(n,"img","toPixels");if(!(n instanceof gt)){const u=t;t=te(u,"int32"),u.dispose()}vg(t);const[s,a]=t.shape.slice(0,2),r=t.rank===2?1:t.shape[2],i=await t.data(),o=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(a*s*4);for(let u=0;u<s*a;++u){const c=[0,0,0,255];for(let d=0;d<r;d++){const p=i[u*r+d];if(t.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(t.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);r===1?(c[0]=p*o,c[1]=p*o,c[2]=p*o):c[d]=p*o}const h=u*4;l[h+0]=Math.round(c[0]),l[h+1]=Math.round(c[1]),l[h+2]=Math.round(c[2]),l[h+3]=Math.round(c[3])}if(e!=null){gp||(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),gp=!0),e.width=a,e.height=s;const u=e.getContext("2d"),c=new ImageData(l,a,s);u.putImageData(c,0,0)}return t!==n&&t.dispose(),l}function L1(n,e,t){let s=Et(n,"img","draw");if(!(n instanceof gt)){const i=s;s=te(i,"int32"),i.dispose()}vg(s),F1(t==null?void 0:t.imageOptions);const a={image:s},r={canvas:e,options:t};Ct.runKernel(zf,a,r)}const Sg=as({fromPixels_:Ng}),j4=Object.freeze(Object.defineProperty({__proto__:null,draw:L1,fromPixels:Sg,fromPixelsAsync:O1,toPixels:_1},Symbol.toStringTag,{value:"Module"}));function go(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(B(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const a=e.shape,r=a[a.length-1];let i=1;for(let h=0;h<a.length-1;++h)i*=a[h];const o=n.shape,l=a.slice();l.pop();let u=1;for(let h=r;h<t;++h)u*=o[h],l.push(o[h]);const c=[...ie(n.shape).map(h=>h/u),1].slice(0,r);return[l,i,u,c]}const X4=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:go},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gl=-2,P1=-1;function Dc(n,e,t){const s=n.shape.length;M(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),M(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let a=0;a<s;++a)M(e[a]+t[a]<=n.shape[a],()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${e[a]+t[a]}) would overflow input.shape[${a}] (${n.shape[a]})`)}function z1(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Oc(n,e,t){const s=[];for(let a=0;a<n.length;a++)s[a]=Math.ceil((e[a]-n[a])/t[a]);return s}function Tg(n,e,t,s){const a=[...n];for(let r=a.length;r<s.length;r++)a.push(1);for(let r=0;r<t;r++)r===0?a[e]=1:(a.splice(e,0,1),a.pop());return a}function $g(n,e,t){return t<=n?t:t-(e-1)}function kg(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function V1(n,e,t,s,a,r,i,o,l){const u=n.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&t>0){const p=e[0],f=t+1;c=Rg(i,p,f,s,n),h=Eg(o,p,f,a,n),d=Tg(r,p,f,n)}else for(let p=0;p<u;p++)c[p]=Dg(i,s,r,n,p,l),h[p]=Og(o,a,r,n,p,l),d[p]=Ag(r,p,l);return{begin:c,end:h,strides:d}}function Rg(n,e,t,s,a){const r=[...a],i=kg(t,e);for(let o=0;o<r.length;o++)if(i.indexOf(o)>-1)r[o]=0;else{const l=$g(e,t,o);let u=s[l];n&1<<l&&(u=0),r[o]=u}return r}function Eg(n,e,t,s,a){const r=[...a],i=kg(t,e);for(let o=0;o<r.length;o++)if(i.indexOf(o)>-1)r[o]=Number.MAX_SAFE_INTEGER;else{const l=$g(e,t,o);let u=s[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),r[o]=u}for(let o=0;o<r.length;o++){const l=a[o];r[o]<0&&(r[o]+=l),r[o]=vs(0,r[o],a[o])}return r}function Ag(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function Dg(n,e,t,s,a,r){let i=e[a];const o=t[a]||1;(n&1<<a||r&1<<a||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const l=s[a];return i<0&&(i+=l),i=vs(0,i,l-1),i}function Og(n,e,t,s,a,r){let i=e[a];const o=t[a]||1;(n&1<<a||r&1<<a||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const l=s[a];return i<0&&(i+=l),o>0?i=vs(0,i,l):i=vs(-1,i,l-1),i}function Fc(n,e,t){let s=t.length;for(let a=0;a<t.length;a++)if(t[a]>1){s=a;break}for(let a=s+1;a<t.length;a++)if(e[a]>0||t[a]!==n[a])return!1;return!0}function _c(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function yo(n,e,t){let s;const a=n.shape.length;typeof e=="number"?s=[e,...new Array(a-1).fill(0)]:e.length<a?s=e.concat(new Array(a-e.length).fill(0)):s=e.slice(),s.forEach(i=>{M(i!==-1,()=>"slice() does not support negative begin indexing.")});let r;return t==null?r=new Array(a).fill(-1):typeof t=="number"?r=[t,...new Array(a-1).fill(-1)]:t.length<a?r=t.concat(new Array(a-t.length).fill(-1)):r=t,r=r.map((i,o)=>i>=0?i:(M(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),n.shape[o]-s[o])),[s,r]}function Lc(n,e,t,s,a,r,i,o,l){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let C=0;C<h.dims;C++)c&&1<<C&o&&h.numAddAxisAfterEllipsis++,1<<C&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};B1(h,d);let p=!0,f=!0,g=!0;const m=[],y=[];for(let C=0;C<n.length;++C){if(d.strides[C]===0)throw Error(`strides[${C}] must be non-zero`);const w=!!(d.shrinkAxisMask&1<<C),I=n[C];if(I===-1){m.push(w?1:-1);continue}const N=[d.beginMask&1<<C,d.endMask&1<<C],v=[d.strides[C]>0?0:-1,d.strides[C]>0?I:I-1];if(w&&d.strides[C]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[C]===1;const S=!!(d.beginMask&1<<C&&d.endMask&1<<C);if(d.beginValid&&d.endValid){if(w){const P=d.begin[C]<0?I+d.begin[C]:d.begin[C];if(d.begin[C]=P,d.end[C]=d.begin[C]+1,P<0||P>=I)throw Error(`slice index ${d.begin[C]} of dimension ${C} out of bounds.`)}else d.begin[C]=yp(d.begin[C],0,d.strides[C],I,N,v),d.end[C]=yp(d.end[C],1,d.strides[C],I,N,v);const E=d.strides[C]===1&&d.begin[C]===0&&d.end[C]===I;p=p&&E,f=f&&(C===0&&d.strides[C]===1||E)}else p=p&&d.strides[C]===1&&S,f=f&&(C===0&&d.strides[C]===1||S);let $,k=!1;if(d.beginValid&&d.endValid?($=d.end[C]-d.begin[C],k=!0):w?($=1,k=!0):S&&I>=0&&(d.strides[C]<0?$=-I:$=I,k=!0),k){let E;$===0||$<0!=d.strides[C]<0?E=0:E=Math.trunc($/d.strides[C])+($%d.strides[C]!==0?1:0),m.push(E)}else m.push(-1)}for(let C=0;C<d.finalShapeGatherIndices.length;++C){const w=d.finalShapeGatherIndices[C];w>=0?y.push(m[w]):w===gl&&y.push(1)}return{finalShapeSparse:y.filter((C,w)=>d.finalShapeGatherIndices[w]!==gl),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function B1(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const a=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<a;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(gl),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(P1),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function yp(n,e,t,s,a,r){if(a[e])return t>0?r[e]:r[e+1&1];{const i=n<0?s+n:n;return i<r[0]?r[0]:i>r[1]?r[1]:i}}const M1=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Dc,computeFlatOffset:_c,computeOutShape:Oc,getNormalizedAxes:V1,isSliceContinous:Fc,maskToAxes:z1,parseSliceParams:yo,sliceInfo:Lc,startForAxis:Dg,startIndicesWithElidedDims:Rg,stopForAxis:Og,stopIndicesWithElidedDims:Eg,stridesForAxis:Ag,stridesWithElidedDims:Tg},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const W1="4.6.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U1{static sgd(e){return new y0(e)}static momentum(e,t,s=!1){return new x0(e,t,s)}static rmsprop(e,t=.9,s=0,a=null,r=!1){return new b0(e,t,s,a,r)}static adam(e=.001,t=.9,s=.999,a=null){return new w0(e,t,s,a)}static adadelta(e=.001,t=.95,s=null){return new C0(e,t,s)}static adamax(e=.002,t=.9,s=.999,a=null,r=0){return new I0(e,t,s,a,r)}static adagrad(e,t=.1){return new N0(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xs=U1;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G1=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n())();function Fg(){return new Promise(n=>G1(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pc(n,e){const t=n[0].length;n.forEach((a,r)=>{M(a.length===t,()=>`Error in concat${t}D: rank of tensors[${r}] must be the same as the rank of the rest (${t})`)}),M(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((a,r)=>{for(let i=0;i<t;i++)M(i===e||a[i]===s[i],()=>`Error in concat${t}D: Shape of tensors[${r}] (${a}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function bn(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jt;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Jt||(Jt={}));function _g(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let a=1;a<t.length;++a){const r=t[a],i=s[s.length-t.length+a],o=s[i];if(r>=0)if(o>=0){if(o!==r)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${a+n}] = ${r} but shape[${a+n}] = ${o}`)}else s[i]=r}return s}function Lg(n){const e={FIRST_DIM_SIZE:Jt.FIRST_DIM_SIZE,VALUE_ROWIDS:Jt.VALUE_ROWIDS,ROW_LENGTHS:Jt.ROW_LENGTHS,ROW_SPLITS:Jt.ROW_SPLITS,ROW_LIMITS:Jt.ROW_LIMITS,ROW_STARTS:Jt.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function Pg(n){return n.length===0?0:n[0]===Jt.FIRST_DIM_SIZE?n.length-1:n.length}function zg(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let a=0;a<Math.min(t,s-1);++a){const r=n[a],i=e[a+1];if(r>=0&&i>=0&&r!==1&&r!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${a-n.length}] = ${r} but ragged tensor input.flatValues.shape[${a-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zc=30;function xo(n){return n<=zc?n:ll(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vc(n,e,t){const s=t*(typeof n=="number"?n:n[0]),a=e*(typeof n=="number"?n:n[1]);return[s,a]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ir(n,e,t,s=!0){let a=[];if(s)a=a.concat(e.slice(0)),a.push(n[0]/t),a=a.concat(n.slice(1));else{a=a.concat(n[0]);const r=e.length;for(let i=0;i<r;++i)a=a.concat([n[i+1]/e[i],e[i]]);a=a.concat(n.slice(r+1))}return a}function or(n,e,t=!0){const s=[];if(t){s.push(e);for(let a=e+1;a<n;++a)a<=2*e?(s.push(a),s.push(a-(e+1))):s.push(a)}else{const a=[],r=[];for(let i=1;i<n;++i)i>=e*2+1||i%2===1?r.push(i):a.push(i);s.push(...a),s.push(0),s.push(...r)}return s}function lr(n,e,t,s=!0){const a=[];s?a.push(n[0]/t):a.push(n[0]*t);for(let r=1;r<n.length;++r)r<=e.length?s?a.push(e[r-1]*n[r]):a.push(n[r]/e[r-1]):a.push(n[r]);return a}function Bc(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function Mc(n,e,t){const s=n.slice(0,1);for(let a=0;a<t;++a)s.push(n[a+1]-e[a][0]-e[a][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bo=1.7580993408473768,wo=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wc=.3275911,Uc=.254829592,Gc=-.284496736,Hc=1.421413741,jc=-1.453152027,Xc=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ln(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function Vg(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function Bg(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let a=0;a<n.length;a+=4)t[Math.floor(a/4)]=n[a],s[Math.floor(a/4)]=n[a+1];return{real:t,imag:s}}function Mg(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let a=2;a<n.length;a+=4)t[Math.floor(a/4)]=n[a],s[Math.floor(a/4)]=n[a+1];return{real:t,imag:s}}function qc(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function Wg(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function Ug(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let a=0;a<Math.ceil(n/2);a++){const r=(e?2:-2)*Math.PI*(a/n);t[a]=Math.cos(r),s[a]=Math.sin(r)}return{real:t,imag:s}}function Gg(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),a=Math.cos(s),r=Math.sin(s);return{real:a,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yo="->",H1=/->/g,xp=",",bp="...";function Kc(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(H1,"").length)/Yo.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Yo}").`);const[s,a]=n.split(Yo);M(s.indexOf(bp)===-1,()=>`The ellipsis notation ("${bp}") is not supported yet.`);const r=s.split(xp),i=r.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<a.length;++d){const p=a[d];if(!r.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);o.indexOf(p)===-1&&o.push(p)}for(let d=0;d<s.length;++d){const p=s[d];o.indexOf(p)===-1&&p!==xp&&o.push(p)}const l=new Array(r.length);for(let d=0;d<i;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<r[d].length;++p)l[d].push(o.indexOf(r[d][p]))}const u=o.length,c=a.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function Yc(n,e){let t=new Array(n);t.fill(-1);for(let a=0;a<e.length;++a)t[e[a]]=a;const s=[];for(let a=0;a<n;++a)t[a]===-1&&s.push(a);return t=t.filter(a=>a!==-1),{permutationIndices:t,expandDims:s}}function Qc(n,e,t){const s=new Array(n);for(let a=0;a<t.length;++a){const r=t[a].shape;for(let i=0;i<e[a].length;++i)s[e[a][i]]===void 0?s[e[a][i]]=r[i]:M(s[e[a][i]]===r[i],()=>`Expected dimension ${s[e[a][i]]} at axis ${i} of input shaped ${JSON.stringify(r)}, but got dimension ${r[i]}`)}}function Zc(n,e){const t=n,s=[];let a=0;n.length===0&&t.push(-1),a=n.length+1;for(let i=0;i<a;++i)s.push([]);const r=[];for(let i=0;i<t.length;++i){const o=t[i],l=j1(e,o);for(const u of l)r.indexOf(u)===-1&&(s[i].push(u),r.push(u))}return{path:t,steps:s}}function Jc(n){return n.every((e,t)=>e===t)}function j1(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function eh(n,e,t=0){let s=[];if(typeof e=="number")M(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const a=e.reduce((i,o)=>(o===-1&&(i+=1),i),0);M(a<=1,()=>"There should be only one negative value in split array.");const r=e.indexOf(-1);if(r!==-1){const i=e.reduce((o,l)=>l>0?o+l:o);e[r]=n.shape[t]-i}M(n.shape[t]===e.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hg(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function jg(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function Xg(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qg(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function Kg(n,e){return`size ${n} must be non-negative, not ${e}`}function Yg(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Qg(n,e){const t=B(n),s=B(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function Zg(n,e){const t=B(n),s=B(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yl(){return"segment ids must be >= 0"}function Jg(){return"segment ids are not increasing"}function ey(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function ty(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ny(n,e){let t=!1,s;for(n<=zc?(s=n,t=!0):s=ll(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=ll(n,s+1);return s}function sy(n,e,t){const s=[],a=n.length;for(let r=0;r<a;r++)r!==e?s.push(n[r]):s.push(t);return s}function th(n,e,t,s){const a=e.shape.length,r=n.shape.length;if(s!==0&&(s<-a||s>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${s}`);if(s<0&&(s+=a),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const i=n.shape[t],o=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)o.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<t;h++)o.push(n.shape[h]),u*=n.shape[h];for(let h=s;h<a;h++)o.push(e.shape[h]);for(let h=t+1;h<r;h++)o.push(n.shape[h]),c*=n.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}const X1=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:th,computeOutShape:sy,segOpComputeOptimalWindowSize:ny},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pn(n){try{return n.map(e=>la(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function ay(n){return n.map(e=>ws(e))}const q1=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Uc,ERF_A2:Gc,ERF_A3:Hc,ERF_A4:jc,ERF_A5:Xc,ERF_P:Wc,PARALLELIZE_THRESHOLD:zc,get RowPartitionType(){return Jt},SELU_SCALE:wo,SELU_SCALEALPHA:bo,applyActivation:v0,assertAndGetBroadcastShape:Fe,assertAxesAreInnerMostDims:lt,assertParamsConsistent:Pc,assignToTypedArray:Wg,axesAreInnerMostDims:S0,calculateShapes:Fs,checkEinsumDimSizes:Qc,checkPadOnDimRoundingMode:nr,combineLocations:T0,combineRaggedTensorToTensorShapes:_g,complexWithEvenIndex:Bg,complexWithOddIndex:Mg,computeConv2DInfo:vt,computeConv3DInfo:_s,computeDefaultPad:$0,computeDilation2DInfo:sr,computeOptimalWindowSize:xo,computeOutAndReduceShapes:nt,computeOutShape:bn,computePool2DInfo:ln,computePool3DInfo:zn,convertConv2DDataFormat:rs,decodeEinsumEquation:Kc,eitherStridesOrDilationsAreOne:vn,expandShapeToKeepDim:ot,exponent:Gg,exponents:Ug,fromStringArrayToUint8:ay,fromUint8ToStringArray:Pn,getAxesPermutation:Be,getBroadcastDims:Zs,getComplexWithIndex:qc,getEinsumComputePath:Zc,getEinsumPermutation:Yc,getFusedBiasGradient:k0,getFusedDyActivation:R0,getImageCenter:Vc,getInnerMostAxes:Ue,getPermuted:or,getRaggedRank:Pg,getReductionAxes:et,getReshaped:ir,getReshapedPermuted:lr,getRowPartitionTypesHelper:Lg,getSliceBeginCoords:Bc,getSliceSize:Mc,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Hg,getSparseFillEmptyRowsNegativeIndexErrorMessage:jg,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:Xg,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:Yg,getSparseReshapeInputOutputMismatchErrorMessage:Zg,getSparseReshapeInputOutputMultipleErrorMessage:Qg,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:qg,getSparseReshapeNegativeOutputDimErrorMessage:Kg,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:ty,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:yl,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:Jg,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:ey,getUndoAxesPermutation:is,isIdentityPermutation:Jc,log:E0,mergeRealAndImagArrays:Ln,prepareAndValidate:go,prepareSplitSize:eh,segment_util:X1,shouldFuse:A0,slice_util:M1,splitRealAndImagArrays:Vg,stridesOrDilationsArePositive:D0,tupleValuesAreOne:fi,upcastType:Ht,validateDefaultValueShape:zg,validateInput:O0,validateUpdateShape:F0,warn:ua},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q4=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Xl,nonMaxSuppressionV4Impl:ql,nonMaxSuppressionV5Impl:Kl,whereImpl:Yl},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ry={kernelName:Ql,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,mi(te(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K1={kernelName:gi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=ht(te(t,"float32")),a=os(Te(ke(1),s));return xt(ge(n,a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y1={kernelName:yi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=os(Te(ht(te(t,"float32")),1));return ge(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q1={kernelName:xi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,a=Fe(t.shape,s.shape);return{a:()=>{let o=n;const l=et(t.shape,a);return l.length>0&&(o=fe(o,l)),G(o,t.shape)},b:()=>{let o=n;const l=et(s.shape,a);return l.length>0&&(o=fe(o,l)),G(o,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z1={kernelName:Zl,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,a)=>{t[a]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J1={kernelName:Jl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>We(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eI={kernelName:eu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>We(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tI={kernelName:bi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,os(Te(ke(1),ht(te(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nI={kernelName:wi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=os(re(ke(1),ht(te(t,"float32"))));return ge(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sI={kernelName:Ci,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,a=Fe(t.shape,s.shape);return{a:()=>{const o=re(ht(t),ht(s));let l=A(n,ge(s,o));const u=et(t.shape,a);return u.length>0&&(l=fe(l,u)),G(l,t.shape)},b:()=>{const o=re(ht(t),ht(s));let l=xt(A(n,ge(t,o)));const u=et(s.shape,a);return u.length>0&&(l=fe(l,u)),G(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aI={kernelName:Ii,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,re(ht(te(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rI={kernelName:Ni,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,Te(ke(1),ht(te(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iI(n,e,t,s,a,r){const i=Et(n,"dy","avgPool3dGrad"),o=Et(e,"input","avgPool3dGrad");let l=i,u=o,c=!1;o.rank===4&&(c=!0,l=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),M(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),nr("avgPool3dGrad",a,r);const h={dy:l,input:u},d={filterSize:t,strides:s,pad:a,dimRoundingMode:r},p=Ct.runKernel(tu,h,d);return c?G(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const oI=as({avgPool3dGrad_:iI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lI={kernelName:nu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:a,strides:r,pad:i,dimRoundingMode:o}=t;return{x:()=>oI(n,s,a,r,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uI(n,e,t,s,a){const r=Et(n,"dy","avgPoolGrad"),i=Et(e,"input","avgPoolGrad");M(i.rank===r.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`);let o=i,l=r,u=!1;i.rank===3&&(u=!0,o=G(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=G(r,[1,r.shape[0],r.shape[1],r.shape[2]])),M(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),M(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:l,input:o},h={filterSize:t,strides:s,pad:a},d=Ct.runKernel(su,c,h);return u?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const cI=as({avgPoolGrad_:uI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hI={kernelName:au,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:a,strides:r,pad:i}=t;return{x:()=>cI(n,s,a,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dI={kernelName:ru,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,a]=e,{transposeA:r,transposeB:i}=t;return!r&&!i?{a:()=>Zt(n,a,!1,!0),b:()=>Zt(s,n,!0,!1)}:!r&&i?{a:()=>Zt(n,a,!1,!1),b:()=>Zt(n,s,!0,!1)}:r&&!i?{a:()=>Zt(a,n,!1,!0),b:()=>Zt(s,n,!1,!1)}:{a:()=>Zt(a,n,!0,!0),b:()=>Zt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pI={kernelName:iu,gradFunc:(n,e,t)=>{const{blockShape:s,crops:a}=t;return{x:()=>Vf(n,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fI={kernelName:_0,gradFunc:(n,e,t)=>{const s=t,a=s.inputShape,r=s.shape,i=Array.from(r);for(let l=a.length-1;l>=0;l--)if(a[l]===r[l])i[l]=1;else if(a[l]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${r}].`);const o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>fe(n,o,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mI={kernelName:ou,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gI={kernelName:vi,gradFunc:n=>({x:()=>We(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yI={kernelName:Si,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:a,clipValueMax:r}=t;return{x:()=>In(Ls(ca(s,a),Ti(s,r)),n,We(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xI={kernelName:lu,inputsToSave:["x"],gradFunc:ry.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bI={kernelName:uu,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:a}=t,r=me(a,e[0].shape)[0],i=s.map(l=>l[r]);return Dn(n,i,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wI={kernelName:cu,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,a]=e,{dilations:r,strides:i,pad:o,dataFormat:l}=t;return M(fi(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>L0(s.shape,n,a,i,o,l),filter:()=>Bf(s,n,a.shape,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CI={kernelName:hu,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,a]=e,{strides:r,pad:i,dataFormat:o,dimRoundingMode:l}=t;return{dy:()=>Hr(n,a,r,i,o,1,l),filter:()=>Bf(n,s,a.shape,r,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function II(n,e,t,s,a){let r=n;n.rank===4&&(r=G(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=e;i.rank===4&&(i=G(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),M(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),M(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),M(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),M(r.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${t[3]}.`),M(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);const o={x:r,dy:i},l={strides:s,pad:a,filterShape:t};return Ct.runKernel(du,o,l)}const NI=as({conv3DBackpropFilter_:II});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vI={kernelName:pu,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:a,pad:r}=t;M(fi(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,o]=e;return{x:()=>P0(i.shape,n,o,a,r),filter:()=>NI(i,n,o.shape,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SI={kernelName:$i,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(xt(Mf(te(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TI={kernelName:ki,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(Wf(te(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $I={kernelName:fu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:a,exclusive:r,reverse:i}=t;return{x:()=>{const o=Be([a],s.rank);let l=Uf(n,a,r,!i);return o!=null&&(l=xe(l,o)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kI={kernelName:mu,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:a,pad:r,dimRoundingMode:i}=t,o=s??[1,1];M(fi(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=e;return M(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),M(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),M(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),M(vn(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),nr("depthwiseConv2d",r,i),{x:()=>z0(l.shape,n,u,a,r,o,i),filter:()=>V0(l,n,u.shape,a,r,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI={kernelName:gu,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,a]=e,r={x:s,filter:a,dy:n},i={x:s,filter:a,dy:n};return{x:()=>Ct.runKernel(ul,r,t),filter:()=>Ct.runKernel(cl,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI={kernelName:Ri,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>Ct.runKernel(yu,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI={kernelName:Ei,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=A(ha(xt(ht(t))),2/Math.sqrt(Math.PI));return{x:()=>A(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DI={kernelName:Ai,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OI={kernelName:xu,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>G(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FI={kernelName:Di,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,ha(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _I={kernelName:Oi,gradFunc:n=>({x:()=>We(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LI={kernelName:Fi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,a=Fe(t.shape,s.shape);return{a:()=>{const o=ge(n,te(s,"float32")),l=et(t.shape,a);return l.length>0?G(fe(o,l),t.shape):o},b:()=>{let o=A(n,te(t,"float32"));const l=et(s.shape,a);l.length>0&&(o=G(fe(o,l),s.shape));const u=ht(s);return xt(ge(o,te(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PI={kernelName:bu,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[a,r,i,o]=e,l=o??ke(1),u=et(r.shape,a.shape),c=[];if(r.rank===1){for(let w=0;w<a.shape.length-1;++w)c.push(a.shape[w]);c.push(1)}const h=Te(a,r),d=A(n,l),p=Gf(re(i,ke(s))),f=A(A(A(p,p),p),ke(-.5));return{x:()=>r.rank===1?G(A(A(n,xs(G(p,[1,1,1,r.shape[0]]),c)),l),a.shape):G(A(A(n,p),l),a.shape),mean:()=>{let w=A(A(p,ke(-1)),d);return r.rank===1&&(w=fe(w,u)),G(w,r.shape)},variance:()=>{let w=A(A(f,h),d);return r.rank===1&&(w=fe(w,u)),G(w,r.shape)},scale:()=>{const w=A(h,p);let I=A(n,w);return r.rank===1&&(I=fe(I,u)),G(I,r.shape)},offset:()=>{let w=n;return r.rank===1&&(w=fe(w,u)),G(w,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zI={kernelName:wu,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,a]=e,{axis:r}=t,i=me(r,s.shape)[0];return{x:()=>{const l=s.shape,u=a.size,c=l.slice(0,i),h=c.length,d=l.slice(r,l.length).slice(1),p=d.length,f=wp(0,h),g=wp(h+1,h+1+p),m=Cp([c,[u],d]),y=G(n,m),x=G(a,[u]),C=Cp([[h],f,g]),w=xe(y,C);let I=Hf(w,x,s.shape[i]);const N=is(C);return I=xe(I,N),I},indices:()=>a}}};function wp(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function Cp(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VI={kernelName:_i,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>We(t),b:()=>We(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BI={kernelName:Cu,gradFunc:n=>({x:()=>te(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MI={kernelName:Li,gradFunc:n=>({x:()=>We(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WI={kernelName:Pi,gradFunc:n=>({x:()=>We(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UI={kernelName:zi,gradFunc:n=>({x:()=>We(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GI={kernelName:Iu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:a}=t,r=un(s,0);return{x:()=>In(r,n,A(n,a))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI={kernelName:Vi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,re(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI={kernelName:Bi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,te(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XI={kernelName:B0,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:a}=t;return{logits:()=>{const i=ha(s);return Te(n,A(fe(n,a,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qI(n,e,t,s=5,a=1,r=1,i=.5){const o={x:n,y:e,dy:t},l={depthRadius:s,bias:a,alpha:r,beta:i};return Ct.runKernel(Nu,o,l)}const KI=as({localResponseNormalizationBackprop_:qI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YI={kernelName:vu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,a]=e,{depthRadius:r,bias:i,alpha:o,beta:l}=t;return{x:()=>KI(s,a,n,r,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iy(n,e,t,s){return e.rank<t.rank&&(e=G(e,ot(e.shape,s))),n.rank<t.rank&&(n=G(n,ot(n.shape,s))),{x:()=>A(n,te(sn(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ip={kernelName:Su,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:a}=s,r=e[0],i=e[1],o=me(a,r.shape),l=iy(n,i,r,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QI={kernelName:Mi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>A(n,te(ca(t,s),"float32")),b:()=>A(n,te(jf(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZI(n,e,t,s,a,r,i){const o=Et(n,"dy","maxPool3dGrad"),l=Et(e,"input","maxPool3dGrad"),u=Et(t,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;l.rank===4&&(p=!0,c=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=G(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=G(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),M(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),M(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),M(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),nr("maxPool3dGrad",r,i);const f={dy:c,input:h,output:d},g={filterSize:s,strides:a,pad:r,dimRoundingMode:i},m=Ct.runKernel(Tu,f,g);return p?G(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const JI=as({maxPool3dGrad_:ZI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eN={kernelName:$u,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,a]=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=t;return{x:()=>JI(n,s,a,r,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tN(n,e,t,s,a,r,i){const o=Et(n,"dy","maxPoolGrad"),l=Et(e,"input","maxPoolGrad"),u=Et(t,"output","maxPoolGrad");M(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),M(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),M(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),nr("maxPoolGrad",r,i);const c={dy:o,input:l,output:u},h={filterSize:s,strides:a,pad:r,dimRoundingMode:i};return Ct.runKernel(ku,c,h)}const nN=as({maxPoolGrad_:tN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sN={kernelName:Ru,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,a]=e,{filterSize:r,strides:i,pad:o}=t;return{x:()=>nN(n,s,a,r,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aN={kernelName:Eu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:a}=t,r=me(a,s.shape),o=nt(s.shape,r)[1],l=B(o);return{x:()=>{const c=s.shape.slice();r.forEach(p=>{c[p]=1});const h=G(n,c);return ge(A(h,da(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rN={kernelName:Au,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:a}=s,[r,i]=e,o=me(a,r.shape),l=iy(n,i,r,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iN={kernelName:Wi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>A(n,te(Ti(t,s),"float32")),b:()=>A(n,te(un(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oN={kernelName:Du,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:a}=t,r=a.map(i=>i[0]);return{x:()=>en(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lN={kernelName:Ui,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,a=Fe(t.shape,s.shape);return{a:()=>{const o=et(t.shape,a);return o.length>0?G(fe(n,o),t.shape):n},b:()=>{const o=A(n,xt(Ou(ge(t,s)))),l=et(s.shape,a);return l.length>0?G(fe(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uN={kernelName:Gi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,a=Fe(t.shape,s.shape);return{a:()=>{const o=A(n,te(s,"float32")),l=et(t.shape,a);return l.length>0?G(fe(o,l),t.shape):o},b:()=>{const o=A(n,te(t,"float32")),l=et(s.shape,a);return l.length>0?G(fe(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cN={kernelName:Fu,gradFunc:n=>({x:()=>xt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hN={kernelName:_u,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>kt(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dN={kernelName:Lu,gradFunc:n=>({x:()=>We(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pN={kernelName:Pu,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return On(n,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Np={kernelName:zu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:a}=t,r=a.map(i=>i[0]);return{x:()=>en(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fN={kernelName:Hi,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,a]=e,r=t,i=s,o=Fe(r.shape,i.shape);return{a:()=>{const c=te(i,"float32");let h=A(n,A(c,Vu(r,Te(c,ke(1)))));const d=et(r.shape,o);return d.length>0&&(h=fe(h,d)),G(h,r.shape)},b:()=>{const c=un(r,0),h=In(c,Zn(r),We(r));let d=A(n,A(a,h));const p=et(i.shape,o);return p.length>0&&(d=fe(d,p)),G(d,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mN={kernelName:Bu,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,a=un(t,0);return{x:()=>In(a,n,A(n,s)),alpha:()=>{let r=In(a,We(n),A(n,t));const i=et(s.shape,n.shape);return i.length>0&&(r=fe(r,i)),G(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(n,e,t){const s=n.shape.slice();s[t]=1;const a=G(e,s),r=hl(n,t,!0,!1),i=hl(n,t,!0,!0),o=A(r,i);return A(a,o)}function yN(n,e,t){const s=n.shape.length,a=s-t.length,r=Be(t,s);let i=n;r!=null&&(i=xe(n,r));const o=i.shape.slice(),u=o.splice(s-t.length,t.length).reduce((d,p)=>d*p,1);o.push(u);const c=i.reshape(o);let h=gN(c,e,a);if(h=h.reshape(i.shape),r!=null){const d=is(r);h=xe(h,d)}return h}const xN={kernelName:Mu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:a}=t;let r=[];return a==null?r=s.shape.map((i,o)=>o):typeof a=="number"?r=[a]:r=a,{x:()=>yN(s,n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bN={kernelName:ji,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,a=Fe(t.shape,s.shape);return{a:()=>{const o=ge(n,te(s,"float32")),l=et(t.shape,a);return l.length>0?G(fe(o,l),t.shape):o},b:()=>{let o=A(n,te(t,"float32"));const l=et(s.shape,a);l.length>0&&(o=G(fe(o,l),s.shape));const u=ht(s);return xt(ge(o,te(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wN={kernelName:Xi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,xt(ht(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CN={kernelName:qi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=A(Ti(t,6),mi(t));return{x:()=>A(n,te(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IN={kernelName:Ki,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,te(mi(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NN={kernelName:Wu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vN={kernelName:Uu,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,a={dy:n,images:s};return{images:()=>Ct.runKernel(Gu,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SN={kernelName:Hu,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,a={dy:n,images:s};return{images:()=>Ct.runKernel(ju,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TN={kernelName:Xu,gradFunc:(n,e,t)=>{const{dims:s}=t,a=me(s,n.shape);return{x:()=>Ga(n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $N={kernelName:Yi,gradFunc:n=>({x:()=>We(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kN={kernelName:Qi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>xt(ge(n,A(Vu(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RN={kernelName:qu,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>te(We(t),"float32"),t:()=>A(n,te(t,n.dtype)),e:()=>A(n,te(Xf(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EN={kernelName:Zi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=un(t,ke(0)),a=ke(bo),r=ke(wo),i=A(n,r),o=A(A(n,a),ha(te(t,"float32")));return In(s,i,o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AN={kernelName:Ji,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,A(t,Te(ke(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DN={kernelName:eo,gradFunc:n=>({x:()=>We(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ON={kernelName:to,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(Ku(te(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FN={kernelName:no,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(qf(te(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _N={kernelName:Yu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:a,size:r}=t,i=s.shape,[o,l]=yo(s,a,r),u=[];for(let c=0;c<n.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>Qu(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LN={kernelName:Zu,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:a}=t,r=!0,i=A(n,s);return{logits:()=>Te(i,A(fe(i,[a],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PN={kernelName:so,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,ao(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vp={kernelName:Ju,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:a}=t;return{x:()=>Kf(n,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sp={kernelName:ec,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>Ps(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zN={kernelName:ro,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,A(os(te(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VN={kernelName:tc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,A(te(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BN={kernelName:io,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,a=ke(2);return{a:()=>A(n,A(a,Te(t,s))),b:()=>A(n,A(a,Te(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MN={kernelName:oo,gradFunc:n=>({x:()=>We(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WN={kernelName:lo,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,a=Fe(t.shape,s.shape);return{a:()=>{let o=n;const l=et(t.shape,a);return l.length>0&&(o=fe(o,l)),G(o,t.shape)},b:()=>{let o=n;const l=et(s.shape,a);return l.length>0&&(o=fe(o,l)),G(xt(o),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UN={kernelName:nc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,a=s.shape.slice(),{axis:r}=t;me(r,s.shape).forEach(u=>{a[u]=1});const o=G(n,a),l=A(o,da(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GN={kernelName:uo,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,ht(Ku(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HN={kernelName:co,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(Te(ke(1),ht(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jN={kernelName:sc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:a}=t;return{x:()=>{let i=We(s);if(s.rank===1)for(let o=0;o<a[0];++o)i=re(i,en(n,[o*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let o=0;o<a[0];++o)for(let l=0;l<a[1];++l)i=re(i,en(n,[o*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let o=0;o<a[0];++o)for(let l=0;l<a[1];++l)for(let u=0;u<a[2];++u)i=re(i,en(n,[o*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let o=0;o<a[0];++o)for(let l=0;l<a[1];++l)for(let u=0;u<a[2];++u)for(let c=0;c<a[3];++c)i=re(i,en(n,[o*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XN={kernelName:ac,gradFunc:(n,e,t)=>{const s=t,{perm:a}=s,r=is(a);return{x:()=>xe(n,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qN={kernelName:rc,gradFunc:(n,e,t)=>{const s=t,{axis:a}=s;return{value:()=>Fn(n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KN={kernelName:ic,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>YN(n,t)}}};function YN(n,e){const t=zs(e,We(e)),s=oc(n,t);let a=ca(e,ke(0,"int32"));const r=s.rank-a.rank;for(let o=0;o<r;++o)a=_n(a,o+1);a=Ls(a,da(s.shape,"bool"));const i=We(s);return In(a,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QN={kernelName:lc,gradFunc:n=>({x:()=>We(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZN=[ry,K1,Y1,Q1,Z1,J1,eI,tI,nI,sI,aI,rI,lI,hI,dI,pI,fI,mI,gI,yI,xI,bI,CI,wI,vI,SI,TI,$I,kI,RI,bN,EI,AI,DI,OI,FI,LI,_I,PI,zI,VI,BI,MI,WI,UI,GI,HI,jI,XI,YI,Ip,Ip,QI,eN,sN,aN,rN,iN,oN,lN,uN,cN,hN,dN,pN,Np,Np,fN,mN,xN,wN,CN,IN,NN,vN,SN,TN,$N,kN,RN,EN,AN,DN,ON,FN,_N,LN,PN,vp,vp,Sp,Sp,zN,BN,VN,MN,WN,UN,GN,HN,jN,XN,qN,KN,QN];for(const n of ZN)M0(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.abs=function(){return this.throwIfDisposed(),Ss(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.acos=function(){return this.throwIfDisposed(),W0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.acosh=function(){return this.throwIfDisposed(),U0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.add=function(n){return this.throwIfDisposed(),re(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.all=function(n,e){return this.throwIfDisposed(),Yf(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.any=function(n,e){return this.throwIfDisposed(),dl(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.argMax=function(n){return this.throwIfDisposed(),Ha(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.argMin=function(n){return this.throwIfDisposed(),G0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.asScalar=function(){return this.throwIfDisposed(),M(this.size===1,()=>"The array must have only 1 element."),G(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.asType=function(n){return this.throwIfDisposed(),te(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.as1D=function(){return this.throwIfDisposed(),G(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.as2D=function(n,e){return this.throwIfDisposed(),G(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),G(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),G(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.as5D=function(n,e,t,s,a){return this.throwIfDisposed(),G(this,[n,e,t,s,a])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.asin=function(){return this.throwIfDisposed(),H0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.asinh=function(){return this.throwIfDisposed(),j0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.atan=function(){return this.throwIfDisposed(),X0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.atan2=function(n){return this.throwIfDisposed(),q0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.atanh=function(){return this.throwIfDisposed(),K0(this)};D().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),Qf(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),Kf(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.batchNorm=function(n,e,t,s,a){return this.throwIfDisposed(),Y0(this,n,e,t,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Zf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.cast=function(n){return this.throwIfDisposed(),te(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.ceil=function(){return this.throwIfDisposed(),Q0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),zt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof gt&&(n=[n]),Ps([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.conv1d=function(n,e,t,s,a,r){return this.throwIfDisposed(),Jf(this,n,e,t,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.conv2dTranspose=function(n,e,t,s,a){return this.throwIfDisposed(),em(this,n,e,t,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.conv2d=function(n,e,t,s,a,r){return this.throwIfDisposed(),Hr(this,n,e,t,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.cos=function(){return this.throwIfDisposed(),Ku(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.cosh=function(){return this.throwIfDisposed(),qf(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),hl(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),Uf(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),Z0(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.depthwiseConv2d=function(n,e,t,s,a,r){return this.throwIfDisposed(),tm(this,n,e,t,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.dilation2d=function(n,e,t,s,a){return this.throwIfDisposed(),J0(this,n,e,t,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.divNoNan=function(n){return this.throwIfDisposed(),eC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.div=function(n){return this.throwIfDisposed(),ge(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.dot=function(n){return this.throwIfDisposed(),tC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.elu=function(){return this.throwIfDisposed(),uc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.equal=function(n){return this.throwIfDisposed(),sn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.erf=function(){return this.throwIfDisposed(),nC(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),sC(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.exp=function(){return this.throwIfDisposed(),ha(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.expandDims=function(n){return this.throwIfDisposed(),_n(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.expm1=function(){return this.throwIfDisposed(),aC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.fft=function(){return this.throwIfDisposed(),rC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.flatten=function(){return this.throwIfDisposed(),G(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.floor=function(){return this.throwIfDisposed(),Ou(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.floorDiv=function(n){return this.throwIfDisposed(),iC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.gather=function(n,e,t){return this.throwIfDisposed(),oc(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.greaterEqual=function(n){return this.throwIfDisposed(),ca(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.greater=function(n){return this.throwIfDisposed(),un(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.ifft=function(){return this.throwIfDisposed(),oC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.irfft=function(){return this.throwIfDisposed(),lC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.isFinite=function(){return this.throwIfDisposed(),uC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.isInf=function(){return this.throwIfDisposed(),cC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.isNaN=function(){return this.throwIfDisposed(),hC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.leakyRelu=function(n){return this.throwIfDisposed(),nm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.lessEqual=function(n){return this.throwIfDisposed(),Ti(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.less=function(n){return this.throwIfDisposed(),jf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),dC(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.logSigmoid=function(){return this.throwIfDisposed(),pC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.logSoftmax=function(n){return this.throwIfDisposed(),sm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),fC(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.log=function(){return this.throwIfDisposed(),Zn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.log1p=function(){return this.throwIfDisposed(),am(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Ls(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.logicalNot=function(){return this.throwIfDisposed(),Xf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.logicalOr=function(n){return this.throwIfDisposed(),mC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.logicalXor=function(n){return this.throwIfDisposed(),gC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Zt(this,n,e,t)};D().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),rm(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.max=function(n,e){return this.throwIfDisposed(),Js(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.maximum=function(n){return this.throwIfDisposed(),zs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.mean=function(n,e){return this.throwIfDisposed(),Ze(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.min=function(n,e){return this.throwIfDisposed(),im(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.minimum=function(n){return this.throwIfDisposed(),cc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),yC(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.mod=function(n){return this.throwIfDisposed(),xC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.mul=function(n){return this.throwIfDisposed(),A(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.neg=function(){return this.throwIfDisposed(),xt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.norm=function(n,e,t){return this.throwIfDisposed(),bC(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.notEqual=function(n){return this.throwIfDisposed(),jr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),Gr(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.onesLike=function(){return this.throwIfDisposed(),jt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.pad=function(n,e){return this.throwIfDisposed(),Qu(this,n,e)};D().prototype.pool=function(n,e,t,s,a,r){return this.throwIfDisposed(),wC(this,n,e,t,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.pow=function(n){return this.throwIfDisposed(),Vu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.prelu=function(n){return this.throwIfDisposed(),om(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.prod=function(n,e){return this.throwIfDisposed(),CC(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.reciprocal=function(){return this.throwIfDisposed(),IC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.relu=function(){return this.throwIfDisposed(),pa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.relu6=function(){return this.throwIfDisposed(),NC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.reshapeAs=function(n){return this.throwIfDisposed(),G(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.reshape=function(n){return this.throwIfDisposed(),G(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),vC(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),SC(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.reverse=function(n){return this.throwIfDisposed(),Ga(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.rfft=function(){return this.throwIfDisposed(),TC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.round=function(){return this.throwIfDisposed(),$C(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.rsqrt=function(){return this.throwIfDisposed(),Gf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.selu=function(){return this.throwIfDisposed(),lm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.separableConv2d=function(n,e,t,s,a,r){return this.throwIfDisposed(),um(this,n,e,t,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.sigmoid=function(){return this.throwIfDisposed(),ao(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.sign=function(){return this.throwIfDisposed(),kC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.sin=function(){return this.throwIfDisposed(),Mf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.sinh=function(){return this.throwIfDisposed(),Wf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.slice=function(n,e){return this.throwIfDisposed(),en(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.softmax=function(n){return this.throwIfDisposed(),hc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.softplus=function(){return this.throwIfDisposed(),ho(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Vf(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.split=function(n,e){return this.throwIfDisposed(),Dn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.sqrt=function(){return this.throwIfDisposed(),os(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.square=function(){return this.throwIfDisposed(),ht(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.squaredDifference=function(n){return this.throwIfDisposed(),RC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.squeeze=function(n){return this.throwIfDisposed(),po(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof gt?[this,n]:[this,...n];return Fn(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.step=function(n){return this.throwIfDisposed(),mi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.stridedSlice=function(n,e,t,s,a,r,i,o){return this.throwIfDisposed(),EC(this,n,e,t,s,a,r,i,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.sub=function(n){return this.throwIfDisposed(),Te(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.sum=function(n,e){return this.throwIfDisposed(),fe(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.tan=function(){return this.throwIfDisposed(),AC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.tanh=function(){return this.throwIfDisposed(),dc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.tile=function(n){return this.throwIfDisposed(),xs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.toBool=function(){return this.throwIfDisposed(),te(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.toFloat=function(){return this.throwIfDisposed(),te(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.toInt=function(){return this.throwIfDisposed(),te(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.topk=function(n,e){return this.throwIfDisposed(),DC(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.transpose=function(n){return this.throwIfDisposed(),xe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.unique=function(n){return this.throwIfDisposed(),OC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),Hf(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.unstack=function(n){return this.throwIfDisposed(),On(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.where=function(n,e){return this.throwIfDisposed(),In(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D().prototype.zerosLike=function(){return this.throwIfDisposed(),We(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class dn extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dn.prototype)}}class Gt extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Gt.prototype)}}class T extends Error{constructor(e){super(e),Object.setPrototypeOf(this,T.prototype)}}class ce extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ce.prototype)}}class nh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nh.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class oy{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $s(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function pn(n,e){if(!n)throw new nh(e)}function Tp(n,e){let t=0;for(const s of n)s===e&&t++;return t}function wt(n){return n.length===1?n[0]:n}function Oe(n){return Array.isArray(n)?n:[n]}function Rn(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function ms(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let Bt={};function sh(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function xl(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>xl(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:xl(s))}}}function ur(n,e={},t={},s="object",a=!1){if(typeof n=="string"){const r=n;let i;if(r in t)i=t[r];else if(r in Bt)i=Bt[r];else if(i=e[r],i==null)throw new T(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const r=n;if(r.className==null||r.config==null)throw new T(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const i=r.className;let o,l;if(i in t?[o,l]=t[i]:i in Bt?[o,l]=Bt.className:i in e&&([o,l]=e[i]),o==null)throw new T(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const p of Object.keys(Bt))u[p]=Bt[p];for(const p of Object.keys(t))u[p]=t[p];const c=r.config;c.customObjects=u;const h=Object.assign({},Bt);for(const p of Object.keys(t))Bt[p]=t[p];xl(r.config);const d=l(o,r.config,t,a);return Bt=Object.assign({},h),d}else{const u=Object.assign({},Bt);for(const h of Object.keys(t))Bt[h]=t[h];const c=new o(r.config);return Bt=Object.assign({},u),c}}}function JN(n,e){return n<e?-1:n>e?1:0}function vr(n,e){return-1*JN(n,e)}function Kn(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function ev(n){if(n==null)throw new T(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Bs(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new T(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function ah(n,e,t=0,s=1/0){return pn(t>=0),pn(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(a=>typeof a===e)}function Je(n,e){Array.isArray(n)?(M(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>Je(t,`element ${s+1} of ${e}`))):M(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${ly(n)}.`)}function ly(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>ly(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function tv(n,e,t){let s=t!=null?t():_t(),a;return(...i)=>{const o=t!=null?t():_t();return o-s<e||(s=o,a=n(...i)),a}}function uy(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let nv=0;function cy(){return nv++}const Sr={};function Co(n=""){return n in Sr||(Sr[n]=0),Sr[n]+=1,n+Sr[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sv=["channelsFirst","channelsLast"],av=["nearest","bilinear"],rv=["valid","same","causal"],iv=["max","avg"],ov=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const qs=new Map;function Ge(n){Bs(sv,"DataFormat",n)}function lv(n){Bs(av,"InterpolationFormat",n)}function Vt(n){Bs(rv,"PaddingMode",n)}function hy(n){Bs(iv,"PoolMode",n)}const Ua=[],$p="/";function Is(n,e){Ua.push(n);try{const t=e();return Ua.pop(),t}catch(t){throw Ua.pop(),t}}function uv(){return Ua.length===0?"":Ua.join($p)+$p}function dy(n){if(!fy(n))throw new Error("Not a valid tensor name: '"+n+"'");return uv()+n}function py(n){if(!fy(n))throw new Error("Not a valid tensor name: '"+n+"'");qs.has(n)||qs.set(n,0);const e=qs.get(n);if(qs.set(n,qs.get(n)+1),e>0){const t=`${n}_${e}`;return qs.set(t,1),t}else return n}const cv=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function fy(n){return!!n.match(cv)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hv(n){return n===parseInt(n.toString(),10)}function Yn(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let a=e;a<t;++a)s*=n[a];return s}function ta(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function Jn(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function an(n,e){if(e<n)throw new T(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Qo;function Xe(){return Qo==null&&(Qo=FC().epsilon()),Qo}function rn(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wn(n,e){return te(n,e)}function cr(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),G(n,t)}function dv(n,e){return R(()=>{if(n.shape.length!==2)throw new T(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=cr(n,1);return bl(t,[1,e,1])})}function pv(n){const e=[Yn(n.shape)];return G(n,e)}function fv(n){if(n.rank<=1)throw new T(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Yn(n.shape,1)];return G(n,e)}function Ns(n,e,t){return R(()=>{switch(n.rank){case 1:return fc(n,e,t);case 2:return cm(n,[e,0],[t,n.shape[1]]);case 3:return pc(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return Xr(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return en(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return en(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new T(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Zo(n,e,t){return R(()=>{switch(n.rank){case 1:return fc(n,e,t);case 2:return cm(n,[0,e],[n.shape[0],t]);case 3:return pc(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return Xr(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new T(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Tr(n,e,t,s){return R(()=>{switch(n.rank){case 1:return fc(n,e,t);case 2:switch(s){case 1:return Ns(n,e,t);case 2:return Zo(n,e,t);default:throw new T(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Ns(n,e,t);case 2:return pc(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Zo(n,e,t);default:throw new T(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Ns(n,e,t);case 2:return Xr(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return Xr(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Zo(n,e,t);default:throw new T(`The axis is not within the rank of the tensor ${s}`)}default:throw new T(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function rh(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),Ps(n,e)}function kp(n,e){switch(n.rank){case 1:return VC([n,e]);case 2:return zC([n,e],0);case 3:return PC([n,e],0);case 4:return LC([n,e],0);default:throw new T(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function bl(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new T(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return xs(n,e)}function Io(n,e=0,t=1,s,a){return _C(n,e,t,s,a)}function Cn(n,e,t,s){if(n.rank<2||e.rank<2)throw new ce(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const a=n.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(a!==r)throw new ce(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return lp({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?wl(n.rank,s,rn()):null,activation:t});{const a=n.shape.slice(),r=a.pop();n=G(n,[-1,r]);const i=e.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:e.rank},(f,g)=>g===0?e.rank-2:g<=e.rank-2?g-1:g);e=G(xe(e,c),[l,-1]);const h=[...a,...u];return G(lp({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?wl(n.rank,s,rn()):null,activation:t}),h)}}function my(n,e,t){return R(()=>(Array.isArray(e)?e=ja(e,"int32"):e=te(e,"int32"),oc(n,e,t)))}function hr(n){return A(n,n)}function wl(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new T(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?G(e,[1,s[0],1,1,1]):G(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?G(e,[1,1,1,1,s[0]]):G(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?G(e,[1,s[0],1,1]):G(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?G(e,[1,1,1,s[0]]):G(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?G(e,[1,s[0],1]):G(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?G(e,[1,1,s[0]]):G(e,[1].concat(s))}else if(n<3)return e;throw new T(`Unsupported input rank by biasAdd: ${e.rank}`)}function cn(n,e,t){return R(()=>(t==null&&(t=rn()),Ge(t),re(n,wl(n.rank,e,t))))}function mv(n,e=1){if(e!==1)throw new ce(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return uc(n)}function gv(n){return R(()=>ge(n,re(Ss(n),1)))}function gy(n,e,t,s){return R(()=>BC(n,e,t,s))}function yv(n){return R(()=>{const e=re(.5,A(.2,n));return zt(e,0,1)})}function dr(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const xv=["fanIn","fanOut","fanAvg"],bv=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wv(n){Bs(xv,"FanMode",n)}function Cv(n){Bs(bv,"Distribution",n)}class Xt extends ar{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ih extends Xt{apply(e,t){return kt(e,t)}}ih.className="Zeros";H(ih);class No extends Xt{apply(e,t){return da(e,t)}}No.className="Ones";H(No);class oh extends Xt{constructor(e){if(super(),typeof e!="object")throw new T(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new T(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return R(()=>A(ke(this.value),da(e,t)))}getConfig(){return{value:this.value}}}oh.className="Constant";H(oh);class lh extends Xt{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return fo(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}lh.className="RandomUniform";H(lh);class uh extends Xt{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ce(`randomNormal does not support dType ${t}.`);return Io(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}uh.className="RandomNormal";H(uh);class ch extends Xt{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ce(`truncatedNormal does not support dType ${t}.`);return hm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ch.className="TruncatedNormal";H(ch);class hh extends Xt{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return R(()=>{if(e.length!==2||e[0]!==e[1])throw new T("Identity matrix initializer can only be used for 2D square matrices.");return A(this.gain,MC(e[0]))})}getConfig(){return{gain:this.gain}}}hh.className="Identity";H(hh);function Iv(n,e="channelsLast"){let t,s;if(Ge(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const a=Yn(n,2);t=n[1]*a,s=n[0]*a}else if(e==="channelsLast"){const a=Yn(n,0,n.length-2);t=n[n.length-2]*a,s=n[n.length-1]*a}}else{const a=Yn(n);t=Math.sqrt(a),s=Math.sqrt(a)}return[t,s]}class It extends Xt{constructor(e){if(super(),e.scale<0)throw new T(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,wv(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,Cv(this.distribution),this.seed=e.seed}apply(e,t){const s=Iv(e),a=s[0],r=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,a):this.mode==="fanOut"?i/=Math.max(1,r):i/=Math.max(1,(a+r)/2),this.distribution==="normal"){const o=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ce(`${this.getClassName()} does not support dType ${t}.`);return hm(e,0,o,t,this.seed)}else{const o=Math.sqrt(3*i);return fo(e,-o,o,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}It.className="VarianceScaling";H(It);class vo extends It{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return It.className}}vo.className="GlorotUniform";H(vo);class So extends It{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return It.className}}So.className="GlorotNormal";H(So);class To extends It{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return It.className}}To.className="HeNormal";H(To);class $o extends It{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return It.className}}$o.className="HeUniform";H($o);class ko extends It{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return It.className}}ko.className="LeCunNormal";H(ko);class Ro extends It{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return It.className}}Ro.className="LeCunUniform";H(Ro);class dh extends Xt{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return R(()=>{if(e.length<2)throw new ce("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=B(e.slice(0,-1)),a=e[e.length-1],r=s*a;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const i=[Math.max(a,s),Math.min(a,s)],o=Io(i,0,1,t,this.seed),l=WC.qr(o,!1);let u=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(a,s)*Math.min(a,s)],[Math.min(a,s)+1]);return u=A(u,h.sign()),s<a&&(u=u.transpose()),A(ke(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}dh.className="Orthogonal";H(dh);const Rp={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ep(n,e={}){return ur(n,rr.getMap().classNameMap,e,"initializer")}function Ve(n){return sh(n)}function Le(n){if(typeof n=="string"){const e=n in Rp?Rp[n]:n;if(e==="GlorotNormal")return new So;if(e==="GlorotUniform")return new vo;if(e==="HeNormal")return new To;if(e==="HeUniform")return new $o;if(e==="LeCunNormal")return new ko;if(e==="LeCunUniform")return new Ro;{const t={};return t.className=e,t.config={},Ep(t)}}else return n instanceof Xt?n:Ep(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cl(n){return Array.isArray(n)&&Array.isArray(n[0])}function qr(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function ue(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new T(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function be(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new T(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Kr(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,a)=>s*a);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ap="Variable";class Nv{constructor(e,t="float32",s=Ap,a=!0,r=null){this.dtype=t??"float32",this.shape=e.shape,this.id=cy(),s=s??Ap,this.originalName=dy(s),this.name=py(this.originalName),this.trainable_=a,this.constraint=r,this.val=UC(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),vv(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function vv(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Il(n){return n.map(e=>e.read())}function ph(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qe{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class gn{constructor(e,t,s,a,r,i,o){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=cy(),i!=null&&(this.originalName=dy(i),this.name=py(this.originalName)),this.rank=t.length}}let Sv=0;class Eo{constructor(e,t){this.callArgs=t,this.id=Sv++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Tv=0;class pe extends ar{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Tv++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=Rn(s)+"_"+Co(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),s=[r].concat(e.inputShape)}this.batchInputShape=s;let a=e.dtype;a==null&&(a=e.inputDType),a==null&&(a="float32"),this.dtype=a}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Gt(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new T(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return wt(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return wt(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new dn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new dn(`Layer ${this.name} is not connected, no input to return.`);return wt(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new dn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new dn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return wt(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Oe(e),this.inputSpec==null||this.inputSpec.length===0)return;const t=Oe(this.inputSpec);if(e.length!==t.length)throw new T(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const a=e[s],r=t[s];if(r==null)continue;const i=a.rank;if(r.ndim!=null&&i!==r.ndim)throw new T(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(r.maxNDim!=null&&i>r.maxNDim)throw new T(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(r.minNDim!=null&&i<r.minNDim)throw new T(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(r.dtype!=null&&a.dtype!==r.dtype)throw new T(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${a.dtype}.`);if(r.axes){const o=a.shape;for(const l in r.axes){const u=Number(l),c=r.axes[l],h=u>=0?o[u]:o[o.length+u];if(c!=null&&[c,null].indexOf(h)===-1)throw new T(`Input ${s} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){const l=r.shape[o],u=a.shape[o];if(l!=null&&u!=null&&l!==u)throw new T(`Input ${s} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=Oe(e);let a=!0;for(const i of s)if(!(i instanceof gn)){a=!1;break}let r=!0;for(const i of s)if(i instanceof gn){r=!1;break}if(a===r)throw new T("Arguments to apply() must be all SymbolicTensors or all Tensors");return Is(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const o of Oe(e))i.push(o.shape);this.build(wt(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let i=this.call(e,t);const o=Oe(i),l=[];for(let u of o)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(i=wt(l),this.activityRegularizer!=null)throw new ce("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=$v(e),o=this.computeOutputShape(i);let l;const u=kv(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),o!=null&&o.length>0&&Array.isArray(o[0])?l=o.map((c,h)=>new gn(u,c,this,Oe(e),t,this.name,h)):l=new gn(u,o,this,Oe(e),t,this.name),this.addInboundNode(e,l,null,null,i,o,t),this._refCount++,this.activityRegularizer!=null)throw new ce("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,a)=>{s!=null&&e[a]!=null&&e[a]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new dn(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new dn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Gt(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Kr(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Il(e?this.trainableWeights:this.weights)}setWeights(e){R(()=>{const t=this.weights;if(t.length!==e.length)throw new T(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],a=Il(t);for(let r=0;r<a.length;++r){const i=a[r],o=t[r],l=e[r];if(!Ie(i.shape,l.shape))throw new T(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([o,l])}ph(s)})}addWeight(e,t,s,a,r,i,o,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new T(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(a=l!=null?l():Le("zeros"));const u=a.apply(t,s),c=new Nv(u,s,e,i,o);return u.dispose(),r!=null&&this.addLoss(()=>r.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Oe(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,s,a,r,i,o=null){const l=Oe(e);t=Oe(t),s=Oe(s),a=Oe(a),r=qr(r),i=qr(i);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new Eo({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:a,inputShapes:r,outputShapes:i},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function $v(n){n=Oe(n);const e=[];for(const t of n)e.push(t.shape);return wt(e)}function kv(n){return"float32"}function yy(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const a=[];for(let r=0;r<s.inboundLayers.length;r++){const i=s.inputTensors[r],o=s.inboundLayers[r],l=s.nodeIndices[r],u=yy(i,o,l);for(const c of u)a.indexOf(c)===-1&&a.push(c)}return a}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ma extends pe{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Co("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new T("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new T("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new T("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const a=new gn(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Eo({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new T(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ma.className="InputLayer";H(ma);function xy(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new T("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new ma({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rv(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return te(e,n.dtype)}catch{throw new T(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class jn{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof jn)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=Rv(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new T(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof gn){if(this.id2Value[e.id]==null)throw new T(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new T(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof gn){if(this.id2Value[e.id]==null)throw new T(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new T(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ce(this.id2Mask)}}const Yr=new oy,Qr=new oy;function Ev(n){Yr!=null&&Yr.setMaxEntries(n),Qr!=null&&Qr.setMaxEntries(n)}function La(n,e,t,s){const a=t==null?!1:t.training,r=Array.isArray(n),i=r?n:[n],o=i.map(f=>f.name),l=[],u=e.names();for(const f of o)u.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().sort().join(",");let h=Yr.get(c),d;if(h==null){const f=Av(i,e);h=f.sorted,d=f.recipientCounts,Yr.put(c,h),Qr.put(c,d)}d={},a||Object.assign(d,Qr.get(c));const p=new jn(e);for(let f=0;f<h.length;++f){if(s!=null){const $=pl().numTensors;$>s.maxNumTensors&&(s.maxNumTensors=$),$<s.minNumTensors&&(s.minNumTensors=$)}const g=h[f],m=g.sourceLayer;if(m instanceof ma)continue;const y=[],x=[],C=[];let w=!1;for(const $ of g.inputs){const k=p.getValue($),E=p.getMask($);y.push(k),x.push(E),E!=null&&(w=!0),a||(d[$.name]--,d[$.name]===0&&!e.hasKey($)&&o.indexOf($.name)===-1&&!k.isDisposed&&$.sourceLayer.stateful!==!0&&C.push(k))}w&&(t=t||{},t.mask=x[0]);const I=Oe(m.apply(y,t));let N=null;m.supportsMasking&&(N=m.computeMask(y,x));const v=Ov(g),S=Array.isArray(v)?v:[v];for(let $=0;$<S.length;++$){p.hasKey(S[$])||p.add(S[$],I[$],Array.isArray(N)?N[0]:N);const k=o.indexOf(S[$].name);k!==-1&&(l[k]=I[$])}a||Ce(C)}return p.disposeMasks(),r?l:l[0]}function Av(n,e){M(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const a=Dp(n[0],e);t=a.sorted,s=a.recipientMap}else{const a=new Set;for(const r of n){const{sorted:i,recipientMap:o}=Dp(r,e);for(const l of i)a.has(l.name)||(t.push(l),a.add(l.name));for(const l in o)s[l]==null&&(s[l]=new Set),o[l].forEach(u=>s[l].add(u))}}return{sorted:t,recipientCounts:Dv(s)}}function Dv(n){const e={};for(const t in n)e[t]=n[t].size;return e}function Dp(n,e){const t=new Set,s=[],a={};for(const o of e.names())t.add(o);const r=[],i=[];for(r.push(n);r.length>0;){const o=r[r.length-1];if(t.has(o.name)){r.pop();continue}const l=i[i.length-1]===r.length-1;if(o.inputs.length===0||l)r.pop(),s.push(o),t.add(o.name),l&&i.pop();else{i.push(r.length-1);for(const u of o.inputs)a[u.name]==null&&(a[u.name]=new Set),a[u.name].add(o.name),!t.has(u.name)&&r.push(u)}}return{sorted:s,recipientMap:a}}function Ov(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const a of n.sourceLayer.inboundNodes[s].outputTensors)if(a.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fv=O();Fv.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,Ev);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fh(n,e){return R(()=>os(fe(A(n,n),e,!0)))}class pr extends ar{getConfig(){return{}}}class mh extends pr{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return R(()=>{const t=fh(e,this.axis),s=zt(t,0,this.maxValue);return A(e,ge(s,re(Xe(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}mh.className="MaxNorm";H(mh);class gh extends pr{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return R(()=>ge(e,re(Xe(),fh(e,this.axis))))}getConfig(){return{axis:this.axis}}}gh.className="UnitNorm";H(gh);class yh extends pr{apply(e){return pa(e)}}yh.className="NonNeg";H(yh);class xh extends pr{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return R(()=>{const t=fh(e,this.axis),s=re(A(this.rate,zt(t,this.minValue,this.maxValue)),A(1-this.rate,t));return A(e,ge(s,re(Xe(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}xh.className="MinMaxNorm";H(xh);const Op={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ke(n){return sh(n)}function Fp(n,e={}){return ur(n,rr.getMap().classNameMap,e,"constraint")}function Ye(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in Op?Op[n]:n,config:{}};return Fp(t)}else return n instanceof pr?n:Fp(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _v(n){return new mh(n)}function Lv(n){return new gh(n)}function Pv(){return new yh}function zv(n){return new xh(n)}const K4=Object.freeze(Object.defineProperty({__proto__:null,maxNorm:_v,minMaxNorm:zv,nonNeg:Pv,unitNorm:Lv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Vv(){return new ih}function Bv(){return new No}function Mv(n){return new oh(n)}function Wv(n){return new lh(n)}function Uv(n){return new uh(n)}function Gv(n){return new ch(n)}function Hv(n){return new hh(n)}function jv(n){return new It(n)}function Xv(n){return new vo(n)}function qv(n){return new So(n)}function Kv(n){return new To(n)}function Yv(n){return new $o(n)}function Qv(n){return new ko(n)}function Zv(n){return new Ro(n)}function Jv(n){return new dh(n)}const Y4=Object.freeze(Object.defineProperty({__proto__:null,constant:Mv,glorotNormal:qv,glorotUniform:Xv,heNormal:Kv,heUniform:Yv,identity:Hv,leCunNormal:Qv,leCunUniform:Zv,ones:Bv,orthogonal:Jv,randomNormal:Uv,randomUniform:Wv,truncatedNormal:Gv,varianceScaling:jv,zeros:Vv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Gn(n){if(n==null)return;const e=[],t=[],s=[];for(const a in n){const r=n[a];if(typeof r!="number"){const i=r;e.push(i.data()),t.push(a),s.push(i)}}if(e.length>0){const a=await Promise.all(e);for(let r=0;r<a.length;++r)n[t[r]]=a[r][0];Ce(s)}}function by(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var _p;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(_p||(_p={}));const eS=125;class na{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class tS{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class nS extends na{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const a in t){const r=t[a];if(typeof r=="number")this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+r*s;else{let i;a in this.totals?i=this.totals[a]:this.totals[a]=0;const o=R(()=>re(this.totals[a],A(r,s)));this.totals[a]=o,i!=null&&i.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:R(()=>{const a=A(ge(1,this.seen),this.totals[s]);t[s]=a,this.totals[s].dispose(),it(t[s])}))}}class sS extends na{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const r in this.history){const i=this.history[r];for(let o=0;o<i.length;++o)if(typeof i[o]!="number"){const l=i[o];e.push(l.data()),t.push(r),s.push(o)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r)this.history[t[r]][s[r]].dispose(),this.history[t[r]][s[r]]=a[r][0]}}class aS extends na{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Fg,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=eS),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");up(this.yieldEvery)&&(this.maybeWait=tv(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const a=[];this.yield!=null&&(await Gn(s),a.push(this.yield(e,t,s))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Gn(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Gn(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Gn(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Gn(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):up(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Gn(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Gn(e),await this.trainEnd(e))}}function wy(n,e){return n==null&&(n={}),n instanceof na?[n]:Array.isArray(n)&&n[0]instanceof na?n:Oe(n).map(s=>new aS(s,e))}class Ft{constructor(){}static registerCallbackConstructor(e,t){M(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Ft.checkForDuplicate(t),Ft.constructors[e]==null&&(Ft.constructors[e]=[]),Ft.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Ft.constructors)Ft.constructors[+t].forEach(a=>{if(a===e)throw new T("Duplicate callback constructor.")})}static clear(){Ft.constructors={}}static createCallbacks(e){const t=[];for(const s in Ft.constructors){const a=+s;e>=a&&t.push(...Ft.constructors[a])}return t.map(s=>new s)}}Ft.constructors={};function Cy(n,e,t,s,a,r,i,o,l){const u=new sS,c=[new nS,...Ft.createCallbacks(e)];n!=null&&c.push(...n),c.push(u);const h=new tS(c);return h.setParams({epochs:t,initialEpoch:s,samples:a,steps:r,batchSize:i,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tn(n,e={},t=!1){return ur(n,rr.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zr(n,e){return R(()=>{n.dtype!=="float32"&&(n=te(n,"float32"));const t=fe(hr(n),e,!0),s=GC(t.shape,Xe()),a=os(zs(t,s));return ge(n,a)})}function Ms(n,e){return R(()=>Ze(hr(Te(e,n)),-1))}function Ao(n,e){return R(()=>Ze(Ss(Te(e,n)),-1))}function ga(n,e){return R(()=>{const t=Te(n,e),s=zt(Ss(n),Xe(),Number.MAX_VALUE),a=Ss(ge(t,s));return A(100,Ze(a,-1))})}function rS(n,e){return R(()=>{const t=zt(e,Xe(),Number.MAX_VALUE),s=Zn(re(1,t)),a=zt(n,Xe(),Number.MAX_VALUE),r=Zn(re(1,a));return Ze(hr(Te(s,r)),-1)})}function iS(n,e){return R(()=>{const t=zs(0,Te(1,A(n,e)));return Ze(hr(t),-1)})}function oS(n,e){return R(()=>{const t=zs(0,Te(1,A(n,e)));return Ze(t,-1)})}function lS(n,e){return R(()=>{const t=fe(A(n,e),-1),s=Js(A(Te(1,n),e),-1);return zs(0,re(1,Te(s,t)))})}function uS(n,e){return R(()=>{const t=Math.log(2),s=Te(e,n),a=Te(re(s,ho(A(-2,s))),t);return Ze(a,-1)})}function qa(n,e,t=!1){return R(()=>{if(t)e=hc(e);else{const s=fe(e,e.shape.length-1,!0);e=ge(e,s)}return e=zt(e,Xe(),1-Xe()),xt(fe(A(te(n,"float32"),Zn(e)),e.shape.length-1))})}function Jr(n,e,t=!1){return R(()=>{const s=te(Ou(pv(n)),"int32");e=zt(e,Xe(),1-Xe());const a=e.shape,r=G(Gr(s,a[a.length-1]),a);return qa(r,e,t)})}function cS(n,e){if(!Ie(n.shape,e.shape))throw new T(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return R(()=>{const t=pa(e),s=xt(Ss(e));return re(Te(t,A(e,n)),am(ha(s)))})}function Do(n,e){return R(()=>{let t;return t=zt(e,Xe(),1-Xe()),t=Zn(ge(t,Te(1,t))),Ze(cS(n,t),-1)})}function hS(n,e){return R(()=>{const t=zt(n,Xe(),1),s=zt(e,Xe(),1);return fe(A(n,Zn(ge(t,s))),-1)})}function dS(n,e){return R(()=>{const t=Zn(re(Xe(),e));return Ze(Te(e,A(n,t)),-1)})}function bh(n,e){return R(()=>{const t=Zr(n,-1),s=Zr(e,-1),a=A(t,s);return xt(fe(a,-1))})}const ei={meanSquaredError:Ms,meanAbsoluteError:Ao,meanAbsolutePercentageError:ga,meanSquaredLogarithmicError:rS,squaredHinge:iS,hinge:oS,categoricalHinge:lS,logcosh:uS,categoricalCrossentropy:qa,sparseCategoricalCrossentropy:Jr,binaryCrossentropy:Do,kullbackLeiblerDivergence:hS,poisson:dS,cosineProximity:bh};function Jo(n){if(typeof n=="string"){if(n in ei)return ei[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new T(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wh(n,e){return R(()=>{const t=A(.5,jt(e)),s=wn(un(e,t),n.dtype);return Ze(sn(n,s),-1)})}function Ch(n,e){return R(()=>wn(sn(Ha(n,-1),Ha(e,-1)),"float32"))}function Iy(n,e){return R(()=>te(fe(Ls(sn(n,1),sn(e,1))),"float32"))}function pS(n,e){return R(()=>te(fe(Ls(sn(n,1),sn(e,0))),"float32"))}function fS(n,e){return R(()=>te(fe(Ls(sn(n,0),sn(e,1))),"float32"))}function Ny(n,e){return R(()=>{const t=Iy(n,e),s=fS(n,e),a=re(t,s);return te(In(un(a,0),ge(t,a),0),"float32")})}function mS(n,e){return R(()=>{const t=Iy(n,e),s=pS(n,e),a=re(t,s);return te(In(un(a,0),ge(t,a),0),"float32")})}function vy(n,e){return Do(n,e)}function Sy(n,e){return n.rank===e.rank&&(n=po(n,[n.rank-1])),e=Ha(e,-1),e.dtype!==n.dtype&&(e=te(e,n.dtype)),te(sn(n,e),"float32")}const gS=Ms,yS=Ms,xS=Ao,bS=Ao,wS=ga,CS=ga,Ih=qa,IS=bh,Ty=Jr,ti={binaryAccuracy:wh,categoricalAccuracy:Ch,precision:Ny,categoricalCrossentropy:Ih,sparseCategoricalCrossentropy:Ty,mse:gS,MSE:yS,mae:xS,MAE:bS,mape:wS,MAPE:CS,cosine:IS};function NS(n){if(typeof n=="string"&&n in ti)return ti[n];if(typeof n!="string"&&n!=null)return n;throw new T(`Unknown metric ${n}`)}function $r(n){if(pn(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(ei))if(ei[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(ti))if(ti[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vS(n){const e={Adagrad:()=>Xs.adagrad(.01),Adadelta:()=>Xs.adadelta(1,.95,Xe()),Adam:()=>Xs.adam(.001,.9,.999,Xe()),Adamax:()=>Xs.adamax(.002,.9,.999,Xe(),0),RMSProp:()=>Xs.rmsprop(.001,.9,0,Xe()),SGD:()=>Xs.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new T(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Lp=1*1024*1024;function Pp(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!Nl(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>Lp&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Lp}.`)}}function Nl(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!Nl(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!Nl(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function SS(n,e,t,s=console.log){const a=$S(n),r=["Layer (type)","Input Shape","Output shape","Param #"];a?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let i;if(!a){r.push("Receives inputs"),i=[];for(const c in n.nodesByDepth)i.push(...n.nodesByDepth[c])}s("_".repeat(e)),ni(r,t,s),s("=".repeat(e));const o=n.layers;for(let c=0;c<o.length;++c)a?kS(o[c],t,s):RS(o[c],t,i,s),s((c===o.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=TS(n),u=Kr(n.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function TS(n){let e;return n.collectedTrainableWeights!=null?e=Kr(n.collectedTrainableWeights):e=Kr(n.trainableWeights),e}function $S(n){let e=!0;const t=[],s=[];for(const a in n.nodesByDepth)t.push(n.nodesByDepth[a]);for(const a of t){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){e=!1;break}s.push(...a)}if(e)for(const a of n.layers){let r=!1;for(const i of a.inboundNodes)if(s.indexOf(i)!==-1)if(r){e=!1;break}else r=!0;if(!e)break}return e}function ni(n,e,t=console.log){let s="";for(let a=0;a<n.length;++a)a>0&&(s=s.slice(0,s.length-1)+" "),s+=n[a],s=s.slice(0,e[a]),s+=" ".repeat(e[a]-s.length);t(s)}function kS(n,e,t){let s,a;try{a=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{a="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,i=n.getClassName(),o=[`${r} (${i})`,a,s,n.countParams().toString()];ni(o,e,t)}function RS(n,e,t,s){let a,r;try{r=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{a=JSON.stringify(n.outputShape)}catch{a="multiple"}const i=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],g=h.tensorIndices[d];i.push(`${p}[${f}][${g}]`)}const o=n.name,l=n.getClassName(),u=i.length===0?"":i[0],c=[`${o} (${l})`,r,a,n.countParams().toString(),u];ni(c,e,s);for(let h=1;h<i.length;++h)ni(["","","","",i[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $y(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Ka(n,e){if(n===null)return null;if(typeof n=="string")return ms(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let a=0;a<s;++a){const r=n[a];$y(e,a,r)?t.push(r):t.push(Ka(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const a=n[s];if(s==="name"&&typeof a=="string")t[s]=a;else{const r=ms(s);t[r]=Ka(a,r)}}return t}}function vl(n,e){if(n==null)return null;if(typeof n=="string")return Rn(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let a=0;a<s;++a){const r=n[a];$y(e,a,r)?t.push(r):t.push(vl(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const a=n[s],r=Rn(s);(s==="name"||s==="className")&&typeof a=="string"?t[r]=a:t[r]=vl(a,s)}return t}}/** @license See the LICENSE file. */const Nh="4.6.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Qt extends pe{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=Co(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Kn(this.inputs).length!==this.inputs.length)throw new T(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Kn(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const C=x.sourceLayer,w=x.nodeIndex,I=x.tensorIndex;this.outputLayers.push(C),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(I)}for(const x of this.inputs){const C=x.sourceLayer,w=x.nodeIndex,I=x.tensorIndex;pn(w===0,"input layer has >1 nodes"),pn(I===0,"input layer has >1 tensors"),this.inputLayers.push(C),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const C=this.inputLayers[x];if(!(C instanceof ma))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${C.getClassName()}.`);this.inputNames.push(C.name),this.feedInputShapes.push(C.batchInputShape),this.feedInputNames.push(C.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const t={},s={},a={},r={},i={},o=[],l=(x,C,w,I,N,v)=>{(I==null||N==null||v==null)&&(I=x.sourceLayer,N=x.nodeIndex,v=x.tensorIndex);const S=I.inboundNodes[N];if(w.indexOf(S)!==-1)throw new Gt(`The tensor ${x.name} at layer "${I.name}" is part of a cycle.`);if(C.indexOf(S)!==-1)return;this.containerNodes.add(Qt.nodeKey(I,N)),I.id in i||(i[I.id]=Object.keys(i).length),w.indexOf(S)===-1&&w.push(S);const $=S.inboundLayers.length;for(let k=0;k<$;k++){const E=S.inputTensors[k],P=S.inboundLayers[k],z=S.nodeIndices[k],V=S.tensorIndices[k];l(E,C,w,P,z,V)}for(C.push(S);w.indexOf(S)>=0;)w.splice(w.indexOf(S),1);o.push(S)},u=[],c=[];for(const x of this.outputs)l(x,u,c);const h=o.slice().reverse();for(const x of h){s[x.id]=x,x.id in t||(t[x.id]=0);let C=t[x.id];const w=a[x.outboundLayer.id]==null?0:a[x.outboundLayer.id];C=Math.max(C,w),a[x.outboundLayer.id]=C,r[x.outboundLayer.id]=x.outboundLayer,t[x.id]=C;for(let I=0;I<x.inboundLayers.length;I++){const N=x.inboundLayers[I],v=x.nodeIndices[I],S=N.inboundNodes[v],$=t[S.id]==null?0:t[S.id];t[S.id]=Math.max(C+1,$),s[S.id]=S}}const d={};for(const x in t){const C=t[x];C in d||(d[C]=[]),d[C].push(s[x])}const p={};for(const x in a){const C=a[x];C in p||(p[C]=[]),p[C].push(r[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(vr);this.layers=[];for(const x of f){const C=p[x];C.sort((w,I)=>{const N=i[w.id],v=i[I.id];return N<v?-1:N>v?1:0});for(const w of C)w instanceof Qt&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(d).map(x=>parseInt(x,10)).sort(vr);const g=this.inputs.slice(),m=[];for(const x of f)for(const C of d[x]){const w=C.outboundLayer;if(w!=null){for(const I of C.inputTensors)if(g.indexOf(I)===-1)throw new Gt(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${w.name}". The following previous layers were accessed without issue: ${m}`);for(const I of C.outputTensors)g.push(I);m.push(w.name)}}this.nodesByDepth=d;const y=this.layers.map(x=>x.name);for(const x of y){const C=y.filter(w=>w===x).length;if(C!==1)throw new Gt(`The name "${x}" is used ${C} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Eo({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new T("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let a=0;for(const i of this.layers)for(const o of i.weights){if(s[o.originalName]!=null)throw new T(`Duplicate weight name: ${o.originalName}`);s[o.originalName]=o,a++}const r=[];for(const i in e){let o=i;if(s[i]==null){const l=i.split("/");o=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(s[o]!=null)r.push([s[o],e[i]]);else if(t)throw new T(`Provided weight data has no target variable: ${i}`);delete s[o]}if(t){const i=[];for(const o in s)i.push(o);if(i.length>0)throw new T(`${i.length} of ${a} weights are not set: ${i}`)}ph(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Nh}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=vl(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return R(()=>{e=Oe(e);const s=new jn;for(let a=0;a<this.inputs.length;++a)s.add(this.inputs[a],e[a]);return La(this.outputs,s,t)})}computeMask(e,t){return R(()=>{e=Oe(e);let s;return t==null?s=$s(null,e.length):s=Oe(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=qr(e);if(t.length!==this.inputLayers.length)throw new T(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let o=0;o<t.length;o++){const l=this.inputLayers[o],u=t[o],c=l.name+"_0_0";s[c]=u}const a=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(vr);if(a.length>1)for(const o of a){const l=this.nodesByDepth[o];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(c.id)!==-1)continue;const h=[];for(let g=0;g<u.inboundLayers.length;g++){const m=u.inboundLayers[g],y=u.nodeIndices[g],x=u.tensorIndices[g],C=`${m.name}_${y}_${x}`,w=s[C];h.push(w)}const d=c.computeOutputShape(wt(h)),p=qr(d),f=c.inboundNodes.indexOf(u);for(let g=0;g<p.length;g++){const m=`${c.name}_${f}_${g}`;s[m]=p[g]}}}const r=[],i=[];for(let o=0;o<this.outputLayers.length;o++){const l=this.outputLayers[o],u=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],h=`${l.name}_${u}_${c}`;i.push(h)}for(let o=0;o<i.length;o++){const l=i[o];pn(l in s),r.push(s[l])}return wt(r)}runInternalGraph(e,t){t==null&&(t=$s(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=e[l],h=t[l];s[u.id]=[c,h]}const a=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(vr);for(const l of a){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const g of d)g.id in s&&f.push(s[g.id]);if(f.length===d.length){let g={},m,y,x,C;if(c.callArgs!=null&&(g=c.callArgs),f.length===1){const[w,I]=f[0];g.mask==null&&(g.mask=I),x=Oe(h.call(w,g)),C=Oe(h.computeMask(w,I)),m=[w],y=[I]}else m=f.map(w=>w[0]),y=f.map(w=>w[1]),g.mask==null&&(g.mask=y),x=Oe(h.call(m,g)),C=Oe(h.computeMask(m,y));if(h.activityRegularizer)throw new ce("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w){const I=p[w],N=x[w],v=C[w];s[I.id]=[N,v]}}}}const r=[],i=[],o=[];for(const l of this.outputs){pn(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];o.push(u.shape),r.push(u),i.push(c)}return[r,i,o]}buildNodeConversionMap(e){const t={};let s;for(const a of this.layers){s=a instanceof Qt?1:0;for(let r=0;r<a.inboundNodes.length;r++){const i=Qt.nodeKey(a,r);this.containerNodes.has(i)&&(t[i]=s,s+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new T(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new T("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===e)return s;throw new T(`No such layer: ${e}`)}calculateLosses(){return R(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const a=Qt.nodeKey(t,s);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const o=i.getClassName(),l=i.getConfig(),u=[];for(let h=0;h<i.inboundNodes.length;h++){const d=i.inboundNodes[h],p=Qt.nodeKey(i,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const g=[];for(let m=0;m<d.inboundLayers.length;m++){const y=d.inboundLayers[m],x=d.nodeIndices[m],C=d.tensorIndices[m],w=Qt.nodeKey(y,x);let I=t[w];I==null&&(I=0),g.push([y.name,I,C,f])}u.push(g)}}}const c={};c.name=i.name,c.className=o,c.config=l,c.inboundNodes=u,s.push(c)}e.layers=s;const a=[];for(let i=0;i<this.inputLayers.length;i++){const o=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=Qt.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const h=this.inputLayersTensorIndices[i];a.push([o.name,c,h])}e.inputLayers=a;const r=[];for(let i=0;i<this.outputLayers.length;i++){const o=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=Qt.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const h=this.outputLayersTensorIndices[i];r.push([o.name,c,h])}return e.outputLayers=r,e}static fromConfig(e,t,s={},a=!1){const r={},i={};function o(m,y){m.name in i?i[m.name].push(y):i[m.name]=[y]}function l(m,y){const x=[];let C;for(const w of y){const I=w[0],N=w[1],v=w[2];if(C=w[3]==null?{}:w[3],!(I in r)){o(m,y);return}const S=r[I];if(S.inboundNodes.length<=N){o(m,y);return}const $=S.inboundNodes[N];x.push($.outputTensors[v])}x.length>0&&m.apply(wt(x),C)}function u(m){const y=m.name,x=tn(m,t.customObjects!=null?t.customObjects:{});x.setFastWeightInitDuringBuild(a),r[y]=x,m.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new T(`Corrupted configuration, expected array for nodeData: ${w}`);o(x,w)})}const c=t.name,h=t.layers;for(const m of h)u(m);for(;!ev(i);)for(const m of h){const y=r[m.name];if(y.name in i){const x=i[y.name];delete i[y.name];for(const C of x)l(y,C)}}const d=[],p=[],f=t.inputLayers;for(const m of f){const y=m[0],x=m[1],C=m[2];pn(y in r);const I=r[y].inboundNodes[x].outputTensors;d.push(I[C])}const g=t.outputLayers;for(const m of g){const y=m[0],x=m[1],C=m[2];pn(y in r);const I=r[y].inboundNodes[x].outputTensors;p.push(I[C])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new T("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){R(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ES(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(a=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const a=[];return e.forEach(r=>{r in n?a.push(n[r]):a.push(null)}),a}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function ky(n,e){return ES(n,e,"classWeight")}async function Ry(n,e,t,s){if(e!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){const a=R(()=>{if(n.shape.length===1)return dm(n);if(n.shape.length===2){if(n.shape[1]>1)return Ha(n,1);if(n.shape[1]===1)return G(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await a.data());Ce(a);const i=[];return r.forEach(o=>{if(t[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(t[o])}),ja(i,"float32")}else return null}function AS(n,e){return A(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DS=32;function Ey(n,e){let t,s;const a=e;t=a.xs,s=a.ys,M(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const r=zp("input",n.inputNames,t),i=zp("output",n.outputNames,s),o=r[0].shape[0];M(r.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),M(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<r.length;l++)M(r[l].shape[0]===o,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${r[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);for(let l=0;l<i.length;l++)M(i[l].shape[0]===o,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);return{xs:r,ys:i}}function zp(n,e,t){if(t instanceof gt)return[t];if(Array.isArray(t))return M(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const a of e){if(t[a]==null)throw new T(`The feature data generated by the dataset lacks the required ${n} key '${a}'.`);s.push(t[a])}return s}}function OS(n){if(n.length===3)throw new ce("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function FS(n,e,t){const s=t.batchesPerEpoch!=null;if(M(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),M(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),M(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),M(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),M(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const a=t.validationData!=null;let r,i;if(a)if(Vp(t.validationData))M(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const m=OS(t.validationData);r=m.xs,i=m.ys}const o=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;a?u=l.slice().concat(l.map(m=>"val_"+m)):u=l.slice();const c=wy(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=Cy(c,h,t.epochs,null,null,_S(e,t),null,a,u);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,g=await e.iterator();for(;f<t.epochs;){const m={};await d.onEpochBegin(f);let y=0,x=0;for(s||(g=await e.iterator());!s||y<t.batchesPerEpoch;){const C=await g.next();if(s&&C.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(C.value!=null){const{xs:w,ys:I}=Ey(n,C.value),N={};N.batch=x,N.size=w[0].shape[0],await d.onBatchBegin(x,N);const v=[];if(t.classWeight!=null){const k=ky(t.classWeight,n.outputNames);for(let E=0;E<k.length;++E)v.push(await Ry(I[E],null,k[E]))}const S=w.concat(I).concat(v),$=o(S);Ce(S);for(let k=0;k<l.length;++k){const E=l[k],P=$[k];N[E]=P,it(P)}await d.onBatchEnd(x,N),by(N),x++,y++}if(s?y>=t.batchesPerEpoch:C.done){if(a){let w;Vp(t.validationData)?w=Oe(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):w=Oe(n.evaluate(r,i,{batchSize:t.validationBatchSize==null?DS:t.validationBatchSize,verbose:0}));for(let I=0;I<n.metricsNames.length;++I)m[`val_${n.metricsNames[I]}`]=w[I]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,m),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function _S(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function Vp(n){return typeof n.iterator=="function"}function LS(n){return typeof n.next=="function"}async function PS(n,e,t){t=t||{};const s=t.batches!=null,a=n.testFunction;let r=[];if(t.verbose>0)throw new ce("Verbose mode is not implemented yet.");M(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const i=LS(e)?e:await e.iterator();let o=0,l=0;for(;!s||l<t.batches;){const u=await i.next();if(r=R(()=>{if(u.value){const{xs:c,ys:h}=Ey(n,u.value),d=c.concat(h),p=R(()=>a(d));if(Ce(d),l===0)for(let g=0;g<p.length;++g)r.push(ke(0));const f=d[0].shape[0];for(let g=0;g<p.length;++g){const m=p[g],y=r[g];r[g]=R(()=>re(r[g],A(f,m))),l>0&&Ce(y)}Ce(p),o+=f,++l}return r}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<r.length;++u){const c=r[u];r[u]=ge(r[u],o),Ce(c)}return wt(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function el(n){M(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Da(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>Ns(s,e,t-e)):Ns(n,e,t-e)}function Sl(n,e){return R(()=>n==null?null:Array.isArray(n)?n.map(t=>Sl(t,e)):my(n,e.dtype==="int32"?e:te(e,"int32")))}function tl(n,e){const t=[];let s=0,a=null;for(;s<n;)a=s+e,a>=n&&(a=n),t.push([s,a]),s=a;return t}function Ay(n){const e=[];n instanceof gt&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(cr(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Yt(n,e){if(n==null)return;const t=[];if(e instanceof gt)t.push(e.id);else if(Array.isArray(e))e.forEach(a=>t.push(a.id));else if(e!=null)for(const a in e){const r=e[a];t.push(r.id)}const s=[];if(n instanceof gt)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(a=>{t.indexOf(a.id)===-1&&s.push(a)});else if(n!=null)for(const a in n){const r=n[a];t.indexOf(r.id)===-1&&s.push(r)}s.forEach(a=>{a.isDisposed||a.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zS(n){return n instanceof gt}function Tl(n){return Array.isArray(n)}function Bp(n){return!zS(n)&&!Tl(n)}function Mp(n,e,t,s=!0,a=""){if(e==null||e.length===0){if(n!=null){let i=!1;if(Tl(n)&&n.length>0)i=!0;else if(Bp(n)){for(const o in n)if(n.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new T(`Error when checking model ${a} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(i=>null);let r;if(Bp(n)){n=n,r=[];for(const i of e){if(n[i]==null)throw new T(`No data provided for "${i}". Need data for each key in: ${e}`);r.push(n[i])}}else if(Tl(n)){if(n=n,n.length!==e.length)throw new T(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);r=n}else{if(n=n,e.length>1)throw new T(`The model ${a} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);r=[n]}if(r=Ay(r),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const o=r[i];if(o.shape.length!==t[i].length)throw new T(`Error when checking ${a}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const u=o.shape[l],c=t[i][l];if(c!=null&&c>=0&&u!==c)throw new T(`${a} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return r}function VS(n,e,t){const s=Kn(n.map(r=>r.shape[0]));s.sort();const a=Kn(e.map(r=>r.shape[0]));if(a.sort(),s.length>1)throw new T(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(r=>r.shape))}`);if(a.length>1)throw new T(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(r=>r.shape))}`);if(s.length>0&&a.length>0&&!Ie(s,a))throw new T(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}function BS(n,e,t){const s=[Ms,Do,qa];for(let a=0;a<n.length;++a){const r=n[a],i=e[a],o=t[a];if(i!=null){if(i===qa&&r.shape[r.shape.length-1]===1)throw new T(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const l=r.shape.slice(1),u=o.slice(1);for(let c=0;c<l.length;++c){const h=l[c],d=u[c];if(d!=null&&h!==d)throw new T(`A target Tensor with shape ${r.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Wp(n,e,t,s=!0,a=""){let r;if(Array.isArray(n)){if(n.length!==e.length)throw new T(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);r=n}else{if(e.length>1)throw new T(`The model expects ${e.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);r=[n]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const o=r[i];if(o.shape.length!==t[i].length)throw new T(`Error when checking ${a}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const u=o.shape[l],c=t[i][l];if(c!=null&&c!==u)throw new T(`Error when checking ${a}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function MS(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const a of e){let r=t.hasOwnProperty(a)?t[a]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const WS="layers-model";class Qn extends Qt{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new T("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");SS(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=vS(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof HC))throw new T("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new T(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),t.push(Jo(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new T(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>Jo(o))}else{const i=Jo(e.loss);this.outputs.forEach(o=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const o=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Is("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const o=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([o,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const a=MS(e.metrics,this.outputNames),r=(i,o,l)=>{this.outputNames.length>1&&(o=this.outputNames[i]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([l,i])};Is("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const o=a[i];(u=>{const c="";let h,d,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const m=this.internalOutputShapes[i];m[m.length-1]===1||this.lossFunctions[i]===Do?["accuracy","acc"].indexOf(f)!==-1?d=wh:["crossentropy","ce"].indexOf(f)!==-1&&(d=vy):this.lossFunctions[i]===Jr?["accuracy","acc"].indexOf(f)!==-1?d=Sy:["crossentropy","ce"].indexOf(f)!==-1&&(d=Ty):["accuracy","acc"].indexOf(f)!==-1?d=Ch:["crossentropy","ce"].indexOf(f)!==-1&&(d=Ih);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),p=d,h=c+y}else p=NS(f),h=c+$r(f);let g;Is(h,()=>{g=p}),r(i,h,g)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const a=s.batchSize==null?32:s.batchSize;el(a);const r=!0,i=this.standardizeUserDataXY(e,t,r,a);try{const o=i[0].concat(i[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,o,a,s.verbose,s.steps);return wt(u)}finally{Yt(i[0],e),Yt(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),PS(this,e,t)}checkNumSamples(e,t,s,a="steps"){let r;if(s!=null){if(r=null,t!=null)throw new T(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new T(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new T("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),a=s?t:[t],r=this.retrieveSymbolicTensors(a),i=new jn;if(e instanceof gt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new T(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new T(`No value is provided for the model's input ${l.name}`);i.add(l,u)}const o=La(r,i);return s?o:o[0]}retrieveSymbolicTensors(e){const t=$s(null,e.length);let s=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],i=r.map(o=>o.name);for(let o=0;o<e.length;++o){const l=i.indexOf(e[o]);if(l!==-1&&(t[o]=r[l],s--),s===0)break}if(s===0)break}if(s>0){const a=[];throw t.forEach((r,i)=>{r==null&&a.push(e[i])}),new T(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return t}predictLoop(e,t=32,s=!1){return R(()=>{const a=this.checkNumSamples(e);if(s)throw new ce("Verbose predictLoop() is not implemented yet.");const r=tl(a,t),i=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)R(()=>{const u=r[o][0],c=r[o][1],h=Da(e,u,c),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new jn(d);return La(this.outputs,p)}).forEach((u,c)=>i[c].push(u));return wt(i.map(o=>Ps(o,0)))})}predict(e,t={}){const s=Ay(e);Wp(s,this.inputNames,this.feedInputShapes,!1);try{const a=t.batchSize==null?32:t.batchSize;return el(a),this.predictLoop(s,a)}finally{Yt(s,e)}}predictOnBatch(e){Wp(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,a){if(this.optimizer_==null)throw new Gt("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const o=this.feedOutputShapes[i];this.feedLossFns[i]===Jr?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=Mp(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Mp(t,this.feedOutputNames,r,!1,"target"),VS(e,t),BS(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&a!=null&&a>0&&e[0].shape[0]%a!==0)throw new T(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,a,r=!0,i){const[o,l]=this.standardizeUserDataXY(e,t,r,i);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(a!=null){const c=ky(a,this.outputNames);u=[];for(let h=0;h<c.length;++h)u.push(await Ry(l[h],null,c[h]))}return[o,l,u]}testLoop(e,t,s,a=0,r){return R(()=>{const i=this.checkNumSamples(t,s,r,"steps"),o=[];if(a>0)throw new ce("Verbose mode is not implemented yet.");if(r!=null)throw new ce("steps mode in testLoop() is not implemented yet");{const l=tl(i,s),u=ja(an(0,i));for(let c=0;c<l.length;++c){const h=l[c][0],d=l[c][1],p=Ns(u,h,d-h),f=Sl(t,p),g=e(f);if(c===0)for(let m=0;m<g.length;++m)o.push(ke(0));for(let m=0;m<g.length;++m){const y=g[m];o[m]=re(o[m],A(d-h,y))}}for(let c=0;c<o.length;++c)o[c]=ge(o[c],i)}return o})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const a=e[s];let r=a;if(Tp(e,a)>1){const i=Tp(e.slice(0,s),a);r+=`_${i}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],o=()=>{const h=[];for(let g=0;g<this.inputs.length;++g)h.push({key:this.inputs[g],value:s[g]});const d=new jn(h),p=La(this.outputs,d,{training:!0});let f;for(let g=0;g<this.lossFunctions.length;++g){const m=this.lossFunctions[g];let y=m(a[g],p[g]);r[g]!=null&&(y=AS(y,r[g]));const x=Ze(y);t.push(x),g===0?f=y:f=re(f,y)}for(let g=0;g<this.metricsTensors.length;++g){let m;if(this.outputs.length>1&&g<this.outputs.length)m=t[g];else{const y=this.metricsTensors[g][0],x=this.metricsTensors[g][1];m=Ze(y(a[x],p[x]))}it(m),i.push(m)}return f=Ze(f),this.calculateLosses().forEach(g=>{f=re(f,g)}),f},l=this.collectedTrainableWeights.map(h=>h.read()),u=!0;return[this.optimizer_.minimize(o,u,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>R(()=>{const t=[];let s;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let u=0;u<this.inputs.length;++u)i.push({key:this.inputs[u],value:a[u]});const o=new jn(i),l=La(this.outputs,o);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],h=Ze(c(r[u],l[u]));u===0?s=h:s=re(s,h),t.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],h=this.metricsTensors[u][1],d=Ze(c(r[h],l[h]));t.push(d)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let a,r,i,o,l,u,c,h,d;try{const p=s.batchSize==null?32:s.batchSize;el(p);const f=!1,g=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,f,p);a=g[0],r=g[1],d=g[2];let m=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(m=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new ce("validationData including sample weights is not supported yet."):new T(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const $=!0,k=await this.standardizeUserData(l,u,null,null,$,p);c=k[0],h=k[1],y=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){m=!0;const $=Math.floor(a[0].shape[0]*(1-s.validationSplit)),k=a[0].shape[0];c=Da(a,$,k),i=a,a=Da(a,0,$),h=Da(r,$,k),o=r,r=Da(r,0,$),y=c.concat(h)}else s.validationSteps!=null&&(m=!0);const x=a.concat(r).concat(d);this.checkTrainableWeightsConsistency();const C=this.makeTrainFunction(),w=this.getDedupedMetricsNames();let I,N;m?(this.makeTestFunction(),I=this.testFunction,N=w.slice().concat(w.map($=>"val_"+$))):(I=null,y=[],N=w.slice());const v=wy(s.callbacks,s.yieldEvery);return await this.fitLoop(C,x,w,p,s.epochs,s.verbose,v,I,y,s.shuffle,N,s.initialEpoch,null,null)}finally{this.isTraining=!1,Yt(a,e),Yt(r,t),Yt(i,e),Yt(o,t),Yt(c,l),Yt(h,u),d!=null&&Ce(d)}}async fitLoop(e,t,s,a,r,i,o,l,u,c,h,d,p,f){a==null&&(a=32),r==null&&(r=1),c==null&&(c=!0),d==null&&(d=0);let g=!1;if(l!=null&&u!=null&&(g=!0),f!=null&&(g=!0,p==null))throw new T("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,a,p,"steps_per_epoch");let y;m!=null&&(y=an(0,m)),i==null&&(i=1);const{callbackList:x,history:C}=Cy(o,i,r,d,m,p,a,g,h);x.setModel(this),this.history=C,await x.onTrainBegin(),this.stopTraining_=!1;for(let w=d;w<r;++w){await x.onEpochBegin(w);const I={};if(p!=null)throw new ce("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new ce("batch shuffling is not implemneted yet");c&&jC(y);const N=ja(y),v=tl(m,a);for(let S=0;S<v.length;++S){const $={};if(await x.onBatchBegin(S,$),R(()=>{const k=v[S][0],E=v[S][1],P=Ns(N,k,E-k);$.batch=S,$.size=E-k;const z=Sl(t,P),V=e(z);for(let F=0;F<s.length;++F){const L=s[F],W=V[F];$[L]=W,it(W)}if(S===v.length-1&&g){const F=this.testLoop(l,u,a);for(let L=0;L<s.length;++L){const W=s[L],_=F[L];it(_),I["val_"+W]=_}}}),await x.onBatchEnd(S,$),by($),this.stopTraining_)break}N.dispose()}if(await x.onEpochEnd(w,I),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return FS(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),a=s[0],r=s[1],o=this.makeTrainFunction()(a.concat(r)),l=[];for(const u of o){const c=await u.data();l.push(c[0])}return Ce(o),Yt(s[0],e),Yt(s[1],t),wt(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,a=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let i=0;i<a.length;++i)s&&!a[i].trainable||t.push({name:a[i].originalName,tensor:r[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=pl().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-pl().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Rn(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Rn(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const a of t)if(typeof s[a]=="string")e[a]=Rn(s[a]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Rn($r(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Rn($r(e)));{const e={};for(const t in this.metrics)e[t]=Rn($r(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ka(e.optimizer_config),s=tn(t);let a;if(typeof e.loss=="string")a=ms(e.loss);else if(Array.isArray(e.loss))a=e.loss.map(i=>ms(i));else if(e.loss!=null){a={};for(const i in e.loss)a[i]=ms(e.loss[i])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(i=>ms(i));else if(e.metrics!=null){r={};for(const i in e.metrics)r[i]=ms(e.metrics[i])}this.compile({loss:a,metrics:r,optimizer:s})}async save(e,t){if(typeof e=="string"){const u=XC(e);if(u.length===0)throw new T(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new T(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new T("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await cp(this.getNamedWeights(t)),a=!1,r=null,o={modelTopology:this.toJSON(r,a),format:WS,generatedBy:`TensorFlow.js tfjs-layers v${Nh}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:h}=await cp(await this.optimizer.getWeights(),u);s.specs.push(...h),s.data=qC([s.data,c])}return this.userDefinedMetadata!=null&&(Pp(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=s.data,o.weightSpecs=s.specs,e.save(o)}setUserDefinedMetadata(e){Pp(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Qn.className="Model";H(Qn);class Dy extends Qn{}Dy.className="Functional";H(Dy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function US(n,e){"modelTopology"in n||(n={modelTopology:n}),n=n;let t=n.modelTopology;t.model_config!=null&&(t=t.model_config);const s=Ka(t),a=tn(s,e);if(n.weightsManifest!=null){const r=await KC(n.weightsManifest,n.pathPrefix,a.weights.map(o=>o.originalName)),i={};for(const o of a.weights)i[o.originalName]=r[o.originalName];a.loadWeights(i),Ce(r)}return a}async function Q4(n,e){if(e==null&&(e={}),typeof n=="string"){const t=YC(n,e);if(t.length===0)t.push(QC(n,e));else if(t.length>1)throw new T(`Found more than one (${t.length}) load handlers for URL '${n}'`);n=t[0]}return GS(n,void 0,e)}async function GS(n,e,t){if(t==null&&(t={}),n.load==null)throw new T("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await n.load();let a=s.modelTopology;a.model_config!=null&&(a=a.model_config);const r=t.strict==null?!0:t.strict,i=s.weightData!=null&&s.weightSpecs!=null&&r,o=tn(Ka(a),e,i),l=s.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),s.userDefinedMetadata!=null&&o.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new T("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:u,optimizerWeights:c}=HS(s.weightData,s.weightSpecs);o.loadWeights(u,r),o.optimizer!=null&&c.length>0&&await o.optimizer.setWeights(c),Ce(u),Ce(c.map(h=>h.tensor))}return o}function HS(n,e){const t=ZC(n,e),s={},a=[];return e.forEach(r=>{r.group==="optimizer"?a.push({name:r.name,tensor:t[r.name]}):s[r.name]=t[r.name]}),{modelWeights:s,optimizerWeights:a}}class sa extends Qn{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Co("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new T(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof sa||e instanceof Qn;let s;if(t){if(s=e,s.outputs.length!==1)throw new T("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new T("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new T("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=xy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(a)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new T(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new T("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=yy(this.outputs[0])}this.inboundNodes=[],new Eo({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:$s(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=e.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(be(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Qn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new Gt("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new Gt("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new Gt("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new Gt("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},a=!1){let r,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new T("Legacy serialization format not supported yet.");r=t}else M(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,i=t;const o=new e(i);if(!(o instanceof sa))throw new ce(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const l of r){const c=tn(l,void 0,a);a&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new T("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new T("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}sa.className="Sequential";H(sa);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Z4(n){return new Qn(n)}function J4(n){return new sa(n)}function jS(n){return xy(n)}function eH(n,e){Ft.registerCallbackConstructor(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let St=class extends ar{getConfig(){return{}}};class Oy extends St{apply(e,t=1){return mv(e,t)}}Oy.className="elu";H(Oy);class Fy extends St{apply(e){return lm(e)}}Fy.className="selu";H(Fy);class _y extends St{apply(e){return pa(e)}}_y.className="relu";H(_y);class Ly extends St{apply(e){return R(()=>cc(6,pa(e)))}}Ly.className="relu6";H(Ly);class Py extends St{apply(e){return e}}Py.className="linear";H(Py);class zy extends St{apply(e){return ao(e)}}zy.className="sigmoid";H(zy);class Vy extends St{apply(e){return yv(e)}}Vy.className="hardSigmoid";H(Vy);class By extends St{apply(e){return ho(e)}}By.className="softplus";H(By);class My extends St{apply(e){return gv(e)}}My.className="softsign";H(My);class Wy extends St{apply(e){return dc(e)}}Wy.className="tanh";H(Wy);let vh=class extends St{apply(e,t=-1){return hc(e,t)}};vh.className="softmax";H(vh);class Uy extends St{apply(e,t=-1){return sm(e,t)}}Uy.className="logSoftmax";H(Uy);class Gy extends St{apply(e,t=1){return R(()=>A(ao(A(e,t)),e))}}Gy.className="swish";H(Gy);class Hy extends St{apply(e){return R(()=>A(e,dc(ho(e))))}}Hy.className="mish";H(Hy);function es(n){return n.getClassName()}function nl(n,e={}){return ur(n,rr.getMap().classNameMap,e,"activation")}function ts(n){if(n==null){const e={};return e.className="linear",e.config={},nl(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},nl(e)}else return n instanceof St?n:nl(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sh(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class jy extends ar{}class fr extends jy{constructor(e){super(),Sh(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return R(()=>{let t=kt([1]);return this.hasL1&&(t=re(t,fe(A(this.l1,Ss(e))))),this.hasL2&&(t=re(t,fe(A(this.l2,hr(e))))),G(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}fr.className="L1L2";H(fr);function XS(n){return Sh(n),new fr({l1:n!=null?n.l1:null,l2:0})}function qS(n){return Sh(n),new fr({l2:n!=null?n.l2:null,l1:0})}const Up={l1l2:"L1L2"};function Re(n){return sh(n)}function Gp(n,e={}){return ur(n,rr.getMap().classNameMap,e,"regularizer")}function Pe(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in Up?Up[n]:n,config:{}};return Gp(t)}else return n instanceof jy?n:Gp(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Th extends pe{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=ue(e);let s=pa(e);return this.maxValue!=null&&(s=zt(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Th.className="ReLU";H(Th);class $h extends pe{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=ue(e);return nm(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}$h.className="LeakyReLU";H($h);class kh extends pe{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Le(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Pe(e.alphaRegularizer),this.alphaConstraint=Ye(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new T(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=be(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let a=1;a<e.length;++a)s[a]=e[a];this.inputSpec=[new qe({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=ue(e),om(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ve(this.alphaInitializer),alphaRegularizer:Re(this.alphaRegularizer),alphaConstraint:Ke(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}kh.className="PReLU";H(kh);let Rh=class extends pe{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new ce(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=ue(e);return uc(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Rh.className="ELU";H(Rh);class Eh extends pe{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=ue(e);return A(s,te(un(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Eh.className="ThresholdedReLU";H(Eh);class Ah extends pe{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new vh().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){const s=ue(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Ah.className="Softmax";H(Ah);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qs(n,e,t){if(typeof n=="number")return $s(n,e);if(n.length!==e)throw new T(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const a=n[s];if(!hv(a))throw new T(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${a}`)}return n}function nn(n,e,t,s,a=1){if(n==null)return n;const r=e+(e-1)*(a-1);let i;return t==="same"?i=n:i=n-r+1,Math.floor((i+s-1)/s)}function fn(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+Jn([t-e,0]);else if(s==="same")n=n*e;else throw new T(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dh(n,e){return R(()=>(Ge(e),e==="channelsFirst"?xe(n,[0,2,3,1]):n))}function Xy(n,e){return R(()=>(Ge(e),e==="channelsFirst"?xe(n,[0,2,3,4,1]):n))}function KS(n,e,t,s=1,a="valid",r,i=1){return R(()=>{if(r==null&&(r=rn()),Ge(r),n.shape.length!==3)throw new T(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new T(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new T(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(r==="channelsFirst"&&(n=xe(n,[0,2,1])),a==="causal")throw new ce("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Jf(n,e,s,a==="same"?"same":"valid","NWC",i);return t!=null&&(o=cn(o,t)),o})}function Hp(n,e,t,s=[1,1],a="valid",r,i,o=null){return R(()=>{if(r==null&&(r=rn()),Ge(r),n.rank!==3&&n.rank!==4)throw new T(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new T(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=Dh(n,r);if(a==="causal")throw new ce("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=e1({x:l,filter:e,strides:s,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:o}),r==="channelsFirst"&&(l=xe(l,[0,3,1,2])),l})}function YS(n,e,t,s=[1,1,1],a="valid",r,i){return R(()=>{if(r==null&&(r=rn()),Ge(r),n.rank!==4&&n.rank!==5)throw new T(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new T(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let o=Xy(n,r);if(a==="causal")throw new ce("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=t1(o,e,s,a==="same"?"same":"valid","NDHWC",i),t!=null&&(o=cn(o,t)),r==="channelsFirst"&&(o=xe(o,[0,4,1,2,3])),o})}class Oo extends pe{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Oo.verifyArgs(t),this.rank=e,Je(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ce(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Qs(t.kernelSize,e,"kernelSize"),this.strides=Qs(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Vt(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ge(this.dataFormat),this.activation=ts(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Le(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ye(t.biasConstraint),this.biasRegularizer=Pe(t.biasRegularizer),this.activityRegularizer=Pe(t.activityRegularizer),this.dilationRate=Qs(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new T(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new T(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new T(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(pn("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!ah(e.kernelSize,"number",1,3))throw new T(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:es(this.activation),useBias:this.useBias,biasInitializer:Ve(this.biasInitializer),biasRegularizer:Re(this.biasRegularizer),activityRegularizer:Re(this.activityRegularizer),biasConstraint:Ke(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class ya extends Oo{constructor(e,t){super(e,t),this.kernel=null,ya.verifyArgs(t),this.filters=t.filters,Je(this.filters,"filters"),this.kernelInitializer=Le(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ye(t.kernelConstraint),this.kernelRegularizer=Pe(t.kernelRegularizer)}build(e){e=be(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new T(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],a=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return R(()=>{e=ue(e);let s;const a=this.bias==null?null:this.bias.read(),r=uy(this.activation.getClassName());if(r!=null&&this.rank===2)s=Hp(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=KS(e,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=Hp(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=YS(e,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ce("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=be(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<s.length;++r){const i=nn(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(i)}let a=[e[0]];return this.dataFormat==="channelsLast"?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:Ve(this.kernelInitializer),kernelRegularizer:Re(this.kernelRegularizer),kernelConstraint:Ke(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new T(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class xa extends ya{constructor(e){super(2,e),xa.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ah(e.kernelSize,"number",1,2))throw new T(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}xa.className="Conv2D";H(xa);class ba extends ya{constructor(e){super(3,e),ba.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new T(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}ba.className="Conv3D";H(ba);class Oh extends xa{constructor(e){if(super(e),this.inputSpec=[new qe({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new T(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=be(e),e.length!==4)throw new T("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new T("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new qe({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return R(()=>{let s=ue(e);if(s.shape.length!==4)throw new T(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,o;this.dataFormat==="channelsFirst"?(i=2,o=3):(i=1,o=2);const l=a[i],u=a[o],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=fn(l,d,c,this.padding),g=fn(u,p,h,this.padding),m=[r,f,g,this.filters];this.dataFormat!=="channelsLast"&&(s=xe(s,[0,2,3,1]));let y=em(s,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=xe(y,[0,3,1,2])),this.bias!=null&&(y=cn(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=be(e);const t=e.slice();let s,a,r;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3):(s=3,a=1,r=2);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[s]=this.filters,t[a]=fn(t[a],l,i,this.padding),t[r]=fn(t[r],u,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Oh.className="Conv2DTranspose";H(Oh);class Fh extends ba{constructor(e){if(super(e),this.inputSpec=[new qe({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new T(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=be(e),e.length!==5)throw new T("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new T("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new qe({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return R(()=>{let s=ue(e);if(s.shape.length!==5)throw new T(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,o,l;this.dataFormat==="channelsFirst"?(l=2,i=3,o=4):(l=1,i=2,o=3);const u=a[l],c=a[i],h=a[o],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],g=this.strides[0],m=this.strides[1],y=this.strides[2],x=fn(u,g,d,this.padding),C=fn(c,m,p,this.padding),w=fn(h,y,f,this.padding),I=[r,x,C,w,this.filters];this.dataFormat!=="channelsLast"&&(s=xe(s,[0,2,3,4,1]));let N=JC(s,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(N=xe(N,[0,4,1,2,3])),this.bias!==null&&(N=cn(N,this.bias.read(),this.dataFormat)),this.activation!==null&&(N=this.activation.apply(N)),N})}computeOutputShape(e){e=be(e);const t=e.slice();let s,a,r,i;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3,i=4):(s=4,a=1,r=2,i=3);const o=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],h=this.strides[1],d=this.strides[2];return t[s]=this.filters,t[a]=fn(t[a],c,o,this.padding),t[r]=fn(t[r],h,l,this.padding),t[i]=fn(t[i],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Fh.className="Conv3DTranspose";H(Fh);class qy extends ya{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new T("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new T("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new T(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Le(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Pe(t.depthwiseRegularizer),this.depthwiseConstraint=Ye(t.depthwiseConstraint),this.pointwiseInitializer=Le(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Pe(t.pointwiseRegularizer),this.pointwiseConstraint=Ye(t.pointwiseConstraint)}build(e){if(e=be(e),e.length<this.rank+2)throw new T(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new T(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],a=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new qe({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return R(()=>{e=ue(e);let s;if(this.rank===1)throw new ce("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=xe(e,[0,2,3,1])),s=um(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=cn(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=xe(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ve(this.depthwiseInitializer),e.pointwiseInitializer=Ve(this.pointwiseInitializer),e.depthwiseRegularizer=Re(this.depthwiseRegularizer),e.pointwiseRegularizer=Re(this.pointwiseRegularizer),e.depthwiseConstraint=Ke(this.depthwiseConstraint),e.pointwiseConstraint=Ke(this.pointwiseConstraint),e}}qy.className="SeparableConv";class _h extends qy{constructor(e){super(2,e)}}_h.className="SeparableConv2D";H(_h);class mr extends ya{constructor(e){super(1,e),mr.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ah(e.kernelSize,"number",1,1))throw new T(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}mr.className="Conv1D";H(mr);class Lh extends pe{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return R(()=>{if(e=ue(e),this.dataFormat==="channelsLast"){const s=Tr(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Tr(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Tr(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Tr(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Lh.className="Cropping2D";H(Lh);class Ph extends pe{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ge(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,lv(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return R(()=>{let s=ue(e);const a=s.shape;if(this.dataFormat==="channelsFirst"){s=xe(s,[0,2,3,1]);const r=this.size[0]*a[2],i=this.size[1]*a[3],o=this.interpolation==="nearest"?mn.resizeNearestNeighbor(s,[r,i]):mn.resizeBilinear(s,[r,i]);return xe(o,[0,3,1,2])}else{const r=this.size[0]*a[1],i=this.size[1]*a[2];return this.interpolation==="nearest"?mn.resizeNearestNeighbor(s,[r,i]):mn.resizeBilinear(s,[r,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Ph.className="UpSampling2D";H(Ph);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function QS(n,e,t=[1,1],s="valid",a,r){return R(()=>{a==null&&(a=rn()),Ge(a);let i=Dh(n,a);if(n.rank!==4)throw new T(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new T(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=tm(i,e,t,s==="same"?"same":"valid","NHWC",r),a==="channelsFirst"&&(i=xe(i,[0,3,1,2])),i})}class zh extends Oo{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Le(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ye(e.depthwiseConstraint),this.depthwiseRegularizer=Pe(e.depthwiseRegularizer)}build(e){if(e=be(e),e.length<4)throw new T(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new T(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],a=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return R(()=>{e=ue(e);let s=QS(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=cn(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=be(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=nn(t,this.kernelSize[0],this.padding,this.strides[0]),i=nn(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],a,r,i]:[e[0],r,i,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ve(this.depthwiseInitializer),e.depthwiseRegularizer=Re(this.depthwiseRegularizer),e.depthwiseConstraint=Ke(this.depthwiseRegularizer),e}}zh.className="DepthwiseConv2D";H(zh);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ky(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new T("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function a(r){return r==null||Array.isArray(r)?r:[r]}return e=a(e),t=a(t),{inputs:n,initialState:e,constants:t}}function Yy(n,e,t,s=!1,a,r,i=!1,o=!1){return R(()=>{const l=e.shape.length;if(l<3)throw new T(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(an(2,l));if(e=xe(e,u),r!=null)throw new ce("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=te(te(a,"bool"),"float32"),a.rank===l-1&&(a=_n(a,-1)),a=xe(a,u)),s&&(e=Ga(e,0),a!=null&&(a=Ga(a,0)));const c=[];let h,d=t;const p=e.shape[0],f=On(e);let g;a!=null&&(g=On(a));for(let y=0;y<p;++y){const x=f[y],C=R(()=>n(x,d));if(a==null)h=C[0],d=C[1];else{const w=R(()=>{const I=g[y],N=Te(jt(I),I),v=re(A(C[0],I),A(d[0],N)),S=d.map(($,k)=>re(A(C[1][k],I),A($,N)));return{output:v,newStates:S}});h=w.output,d=w.newStates}o&&c.push(h)}let m;return o&&(m=Fn(c,1)),[h,m,d]})}class Sn extends pe{constructor(e){super(e);let t;if(e.cell==null)throw new T("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Lo({cells:e.cell}):t=e.cell,t.stateSize==null)throw new T("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new qe({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return an(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Cl(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let a;if(this.returnSequences?a=[e[0],e[1],s]:a=[e[0],s],this.returnState){const r=[];for(const i of t)r.push([e[0],i]);return[a].concat(r)}else return a}computeMask(e,t){return R(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const a=this.states.map(r=>null);return[s].concat(a)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new ce("Constants support is not implemented in RNN yet.");Cl(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new qe({shape:[t,null,...s]});const a=[e[0]].concat(e.slice(2));this.cell.build(a);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Ie(this.stateSpec.map(i=>i.shape[i.shape.length-1]),r))throw new T(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(i=>new qe({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){R(()=>{if(!this.stateful)throw new dn("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new T("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>kt([s,a])):this.states_=[kt([s,this.cell.stateSize])];else if(e==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>kt([s,a])):this.states_[0]=kt([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new T(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let a=0;a<this.states_.length;++a){const r=e[a],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,o=[s,i];if(!Ie(r.shape,o))throw new T(`State ${a} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[a]=r}}this.states_=this.states_.map(a=>it(a.clone()))})}apply(e,t){let s=t==null?null:t.initialState,a=t==null?null:t.constants;t==null&&(t={});const r=Ky(e,s,a,this.numConstants);e=r.inputs,s=r.initialState,a=r.constants;let i=[],o=[];if(s!=null){t.initialState=s,i=i.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new qe({shape:u.shape}));o=o.concat(this.stateSpec)}if(a!=null&&(t.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof gn){const u=[e].concat(i),c=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return R(()=>{const s=t==null?null:t.mask,a=t==null?null:t.training;let r=t==null?null:t.initialState;e=ue(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new T(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},u=Yy((f,g)=>{const m=this.cell.call([f].concat(g),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],h=u[1],d=u[2];this.stateful&&this.resetStates(d,a);const p=this.returnSequences?h:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return R(()=>{let t=kt(e.shape);return t=fe(t,[1,2]),t=cr(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?bl(t,[1,s]):t):this.cell.stateSize>1?[bl(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Sn.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const a=t.cell,r=tn(a,s);return new e(Object.assign(t,{cell:r}))}}Sn.className="RNN";H(Sn);class gr extends pe{}class Fo extends gr{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Je(this.units,"units"),this.activation=ts(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Le(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Le(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Le(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Pe(e.kernelRegularizer),this.recurrentRegularizer=Pe(e.recurrentRegularizer),this.biasRegularizer=Pe(e.biasRegularizer),this.kernelConstraint=Ye(e.kernelConstraint),this.recurrentConstraint=Ye(e.recurrentConstraint),this.biasConstraint=Ye(e.biasConstraint),this.dropout=ta([1,Jn([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ta([1,Jn([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=be(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return R(()=>{if(e=e,e.length!==2)throw new T(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const a=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ns({ones:()=>jt(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ns({ones:()=>jt(s),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));let r;const i=this.dropoutMask,o=this.recurrentDropoutMask;i!=null?r=Cn(A(e,i),this.kernel.read()):r=Cn(e,this.kernel.read()),this.bias!=null&&(r=cn(r,this.bias.read())),o!=null&&(s=A(s,o));let l=re(r,Cn(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:es(this.activation),useBias:this.useBias,kernelInitializer:Ve(this.kernelInitializer),recurrentInitializer:Ve(this.recurrentInitializer),biasInitializer:Ve(this.biasInitializer),kernelRegularizer:Re(this.kernelRegularizer),recurrentRegularizer:Re(this.recurrentRegularizer),biasRegularizer:Re(this.biasRegularizer),activityRegularizer:Re(this.activityRegularizer),kernelConstraint:Ke(this.kernelConstraint),recurrentConstraint:Ke(this.recurrentConstraint),biasConstraint:Ke(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Fo.className="SimpleRNNCell";H(Fo);class Vh extends Sn{constructor(e){e.cell=new Fo(e),super(e)}call(e,t){return R(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}static fromConfig(e,t){return new e(t)}}Vh.className="SimpleRNN";H(Vh);class _o extends gr{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new T("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Je(this.units,"units"),this.activation=ts(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ts(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Le(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Le(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Le(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Pe(e.kernelRegularizer),this.recurrentRegularizer=Pe(e.recurrentRegularizer),this.biasRegularizer=Pe(e.biasRegularizer),this.kernelConstraint=Ye(e.kernelConstraint),this.recurrentConstraint=Ye(e.recurrentConstraint),this.biasConstraint=Ye(e.biasConstraint),this.dropout=ta([1,Jn([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ta([1,Jn([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=be(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return R(()=>{if(e=e,e.length!==2)throw new T(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ns({ones:()=>jt(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ns({ones:()=>jt(a),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(e=A(e,r[0]));let c=Cn(e,this.kernel.read());this.useBias&&(c=cn(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=A(a,i[0]));const h=this.recurrentKernel.read(),[d,p]=Dn(h,[2*this.units,this.units],h.rank-1),f=Cn(a,d),[g,m,y]=Dn(c,3,c.rank-1),[x,C]=Dn(f,2,f.rank-1);o=this.recurrentActivation.apply(re(g,x)),l=this.recurrentActivation.apply(re(m,C));const w=Cn(A(l,a),p);u=this.activation.apply(re(y,w));const I=re(A(o,a),A(re(1,xt(o)),u));return[I,I]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:es(this.activation),recurrentActivation:es(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ve(this.kernelInitializer),recurrentInitializer:Ve(this.recurrentInitializer),biasInitializer:Ve(this.biasInitializer),kernelRegularizer:Re(this.kernelRegularizer),recurrentRegularizer:Re(this.recurrentRegularizer),biasRegularizer:Re(this.biasRegularizer),activityRegularizer:Re(this.activityRegularizer),kernelConstraint:Ke(this.kernelConstraint),recurrentConstraint:Ke(this.recurrentConstraint),biasConstraint:Ke(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}_o.className="GRUCell";H(_o);class Bh extends Sn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new _o(e),super(e)}call(e,t){return R(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}Bh.className="GRU";H(Bh);class yr extends gr{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Je(this.units,"units"),this.activation=ts(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ts(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Le(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Le(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Le(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Pe(e.kernelRegularizer),this.recurrentRegularizer=Pe(e.recurrentRegularizer),this.biasRegularizer=Pe(e.biasRegularizer),this.kernelConstraint=Ye(e.kernelConstraint),this.recurrentConstraint=Ye(e.recurrentConstraint),this.biasConstraint=Ye(e.biasConstraint),this.dropout=ta([1,Jn([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ta([1,Jn([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=be(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,i=this.units;a=new(t=class extends Xt{apply(l,u){const c=r.apply([i]),h=new No().apply([i]),d=r.apply([i*2]);return kp(kp(c,h),d)}},t.className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return R(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new T(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ns({ones:()=>jt(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ns({ones:()=>jt(a),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,c,h;0<this.dropout&&this.dropout<1&&(e=A(e,i[0]));let d=Cn(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=A(a,o[0])),d=re(d,Cn(a,this.recurrentKernel.read())),this.useBias&&(d=cn(d,this.bias.read()));const[p,f,g,m]=Dn(d,4,d.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=re(A(u,r),A(l,this.activation.apply(g))),h=this.recurrentActivation.apply(m);const y=A(h,this.activation.apply(c));return[y,y,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:es(this.activation),recurrentActivation:es(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ve(this.kernelInitializer),recurrentInitializer:Ve(this.recurrentInitializer),biasInitializer:Ve(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Re(this.kernelRegularizer),recurrentRegularizer:Re(this.recurrentRegularizer),biasRegularizer:Re(this.biasRegularizer),activityRegularizer:Re(this.activityRegularizer),kernelConstraint:Ke(this.kernelConstraint),recurrentConstraint:Ke(this.recurrentConstraint),biasConstraint:Ke(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}yr.className="LSTMCell";H(yr);class Mh extends Sn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new yr(e),super(e)}call(e,t){return R(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}Mh.className="LSTM";H(Mh);class Lo extends gr{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return R(()=>{e=e;let s=e.slice(1);const a=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?a.push(s.splice(0,o.stateSize.length)):a.push(s.splice(0,1));a.reverse();const r=[];let i;for(let o=0;o<this.cells.length;++o){const l=this.cells[o];s=a[o],o===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=l.call(i,t),r.push(i.slice(1))}s=[];for(const o of r.slice().reverse())s.push(...o);return[i[0]].concat(s)})}build(e){Cl(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,a)=>{Is(`RNNCell_${a}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),a={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),a)}static fromConfig(e,t,s={}){const a=[];for(const r of t.cells)a.push(tn(r,s));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Il(e)}setWeights(e){const t=[];for(const s of this.cells){const a=s.weights.length,r=e.splice(a);for(let i=0;i<s.weights.length;++i)t.push([s.weights[i],r[i]])}ph(t)}}Lo.className="StackedRNNCells";H(Lo);function ns(n){const{ones:e,rate:t,training:s=!1,count:a=1,dropoutFunc:r}=n,i=()=>r!=null?r(e(),t):gy(e(),t),o=()=>dr(i,e,s);return!a||a<=1?it(o().clone()):Array(a).fill(void 0).map(o).map(u=>it(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var ZS=globalThis&&globalThis.__rest||function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,s=Object.getOwnPropertySymbols(n);a<s.length;a++)e.indexOf(s[a])<0&&Object.prototype.propertyIsEnumerable.call(n,s[a])&&(t[s[a]]=n[s[a]]);return t};class Qy extends Sn{constructor(e){if(e.unroll)throw new ce("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ce("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new qe({ndim:5})]}call(e,t){return R(()=>{if(this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new T("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,a=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:a,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return R(()=>{const{stateSize:t}=this.cell,s=e.shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)],i=kt(r);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){R(()=>{if(!this.stateful)throw new dn("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)];if(s[0]==null)throw new T("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>kt(r)):this.states_=[kt(r)];else if(e==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>kt(r)):this.states_[0]=kt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new T(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let o=0;o<this.states_.length;++o){const l=e[o],u=r;if(!Ie(l.shape,u))throw new T(`State ${o} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[o]=l}}this.states_=this.states_.map(o=>it(o.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:a,padding:r,strides:i,dilationRate:o}=this.cell,l=t==="channelsFirst",u=e[l?3:2],c=e[l?4:3],h=nn(u,a[0],r,i[0],o[0]),d=nn(c,a[1],r,i[1],o[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}Qy.className="ConvRNN2D";class Po extends yr{constructor(e){const{filters:t,kernelSize:s,strides:a,padding:r,dataFormat:i,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Je(this.filters,"filters"),this.kernelSize=Qs(s,2,"kernelSize"),this.kernelSize.forEach(l=>Je(l,"kernelSize")),this.strides=Qs(a||1,2,"strides"),this.strides.forEach(l=>Je(l,"strides")),this.padding=r||"valid",Vt(this.padding),this.dataFormat=i||"channelsLast",Ge(this.dataFormat),this.dilationRate=Qs(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>Je(l,"dilationRate"))}build(e){var t;e=be(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new T(`The channel dimension of the input should be defined. Found ${e[s]}`);const a=e[s],r=4,i=this.kernelSize.concat([a,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(t=class extends Xt{apply(d,p){const f=u.apply([c]),g=da([c]),m=u.apply([c*2]);return rh([f,g,m])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return R(()=>{if(e.length!==3)throw new T(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,a=e[0],r=e[1],i=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ns({ones:()=>jt(a),rate:this.dropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(X,j,K)=>!j||!j[K]?X:A(j[K],X);let c=u(a,l,0),h=u(a,l,1),d=u(a,l,2),p=u(a,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ns({ones:()=>jt(r),rate:this.recurrentDropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let g=u(r,f,0),m=u(r,f,1),y=u(r,f,2),x=u(r,f,3);const C=3,[w,I,N,v]=Dn(this.kernel.read(),o,C),[S,$,k,E]=this.useBias?Dn(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,w,S,this.padding),h=this.inputConv(h,I,$,this.padding),d=this.inputConv(d,N,k,this.padding),p=this.inputConv(p,v,E,this.padding);const[P,z,V,F]=Dn(this.recurrentKernel.read(),o,C);g=this.recurrentConv(g,P),m=this.recurrentConv(m,z),y=this.recurrentConv(y,V),x=this.recurrentConv(x,F);const L=this.recurrentActivation.apply(re(c,g)),W=this.recurrentActivation.apply(re(h,m)),_=re(A(W,i),A(L,this.activation.apply(re(d,y)))),U=A(this.recurrentActivation.apply(re(p,x)),this.activation.apply(_));return[U,U,_]})}getConfig(){const e=super.getConfig(),t=ZS(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,a){const r=Hr(e,t,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?cn(r,s,this.dataFormat):r}recurrentConv(e,t){return Hr(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Po.className="ConvLSTM2DCell";H(Po);class Wh extends Qy{constructor(e){const t=new Po(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Wh.className="ConvLSTM2D";H(Wh);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zo extends pe{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let a=0;a<this.noiseShape.length;++a)s.push(this.noiseShape[a]==null?t[a]:this.noiseShape[a]);return s}call(e,t){return R(()=>{this.invokeCallHook(e,t);const s=ue(e);if(0<this.rate&&this.rate<1){const a=t.training==null?!1:t.training,r=this.getNoiseShape(s);return dr(()=>gy(s,this.rate,r,this.seed),()=>s,a)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}zo.className="Dropout";H(zo);class Uh extends zo{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Uh.className="SpatialDropout1D";H(Uh);class Gh extends pe{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Je(this.units,"units"),this.activation=ts(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Le(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Le(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ye(e.kernelConstraint),this.biasConstraint=Ye(e.biasConstraint),this.kernelRegularizer=Pe(e.kernelRegularizer),this.biasRegularizer=Pe(e.biasRegularizer),this.activityRegularizer=Pe(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=be(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=be(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return R(()=>{this.invokeCallHook(e,t);const s=ue(e),a=uy(this.activation.getClassName());let r;return a!=null?r=Cn(s,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Cn(s,this.kernel.read()),this.bias!=null&&(r=cn(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const e={units:this.units,activation:es(this.activation),useBias:this.useBias,kernelInitializer:Ve(this.kernelInitializer),biasInitializer:Ve(this.biasInitializer),kernelRegularizer:Re(this.kernelRegularizer),biasRegularizer:Re(this.biasRegularizer),activityRegularizer:Re(this.activityRegularizer),kernelConstraint:Ke(this.kernelConstraint),biasConstraint:Ke(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Gh.className="Dense";H(Gh);class Hh extends pe{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=be(e);for(const t of e.slice(1))if(t==null)throw new T(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Yn(e,1)]}call(e,t){return R(()=>{this.invokeCallHook(e,t);let s=ue(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const a=[0];for(let r=2;r<s.rank;++r)a.push(r);a.push(1),s=xe(s,a)}return fv(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Hh.className="Flatten";H(Hh);class jh extends pe{constructor(e){super(e),this.supportsMasking=!0,this.activation=ts(e.activation)}call(e,t){return R(()=>{this.invokeCallHook(e,t);const s=ue(e);return this.activation.apply(s)})}getConfig(){const e={activation:es(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}jh.className="Activation";H(jh);class Xh extends pe{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return R(()=>(e=ue(e),dv(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Xh.className="RepeatVector";H(Xh);class qh extends pe{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",a=t.slice();let r=1,i=null;for(let l=0;l<a.length;++l){const u=a[l];if(this.isUnknown(u))if(i===null)i=l;else throw new T("Can only specifiy one unknown dimension.");else r*=u}const o=Yn(e);if(i!==null){if(r===0||o%r!==0)throw new T(s);a[i]=o/r}else if(o!==r)throw new T(s);return a}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return R(()=>{this.invokeCallHook(e,t);const s=ue(e),a=s.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return G(s,r)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}qh.className="Reshape";H(qh);class Kh extends pe{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=an(1,e.dims.length+1);if(!Ie(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new qe({ndim:this.dims.length+1})]}computeOutputShape(e){e=be(e);const t=e.slice();return this.dims.forEach((s,a)=>{t[a+1]=e[s]}),t}call(e,t){return xe(ue(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Kh.className="Permute";H(Kh);class Yh extends pe{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=ue(e),a=-1;return dl(jr(s,this.maskValue),a)}call(e,t){return R(()=>{this.invokeCallHook(e,t);const s=ue(e),a=-1,r=!0,i=dl(jr(s,this.maskValue),a,r);return A(s,te(i,s.dtype))})}}Yh.className="Masking";H(Yh);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Qh extends pe{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Oe(e.inputLength))}this.inputDim=e.inputDim,Je(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Je(this.outputDim,"outputDim"),this.embeddingsInitializer=Le(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Pe(e.embeddingsRegularizer),this.activityRegularizer=Pe(e.activityRegularizer),this.embeddingsConstraint=Ye(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return R(()=>this.maskZero?(e=ue(e),jr(e,We(e))):null)}computeOutputShape(e){if(e=be(e),this.inputLength==null)return[...e,this.outputDim];const t=Oe(this.inputLength);if(t.length!==e.length-1)throw new T(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let a=0;a<t.length;++a){const r=t[a],i=e[a+1];if(r!=null&&i!=null&&r!==i)throw new T(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[s]=i),s++}}return[e[0],...t,this.outputDim]}call(e,t){return R(()=>{this.invokeCallHook(e,t);let s=ue(e);s.dtype!=="int32"&&(s=wn(s,"int32"));const a=my(this.embeddings.read(),G(s,[s.size]));return G(a,be(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ve(this.embeddingsInitializer),embeddingsRegularizer:Re(this.embeddingsRegularizer),activityRegularizer:Re(this.activityRegularizer),embeddingsConstraint:Ke(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Qh.className="Embedding";H(Qh);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ws extends pe{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ce}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],i=t[a];if(r==null||i==null||r<0||i<0)s.push(null);else if(r===1)s.push(i);else if(i===1)s.push(r);else{if(r!==i)throw new T("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(r)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[be(e)]),e=e,e.length<2)throw new T(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Kn(t),t.length>1)throw new T(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){const i=e[r]==null?null:e[r].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const a=e.map(r=>r.length);e.indexOf(null)===-1&&Kn(a).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return R(()=>{if(e=e,this.reshapeRequired){const s=[],a=e.map(r=>r.rank);if(a.indexOf(null)===-1){const r=Jn(a);for(let i of e){const o=i.rank;for(let l=0;l<r-o;++l)i=cr(i,1);s.push(i)}return this.mergeFunction(s)}else{let r=!1;for(const l of e){const u=l.rank;if(u==null){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let p=G(l,[h].concat(Yn(c.slice(1))));p=xe(p,[1,0]),p=G(p,d),s.push(p),r=!0}else if(u>1){const c=an(1,u).concat([0]);s.push(xe(l,c)),r=!0}else s.push(l)}let i=this.mergeFunction(s);const o=i.rank;if(r){if(o==null){const l=i.shape,u=l.length,c=l[u-1],h=[c].concat(l.slice(0,l.length-1));i=G(xe(G(i,[-1,c]),[1,0]),h)}else if(o>1){const l=[o-1].concat(an(0,o-1));i=xe(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let a=1;a<e.length;++a){const r=e[a]==null?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let s=[];for(const a of e)a!=null&&a[0]!==null&&s.push(a[0]);return s=Kn(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return R(()=>{if(t==null)return null;if(!Array.isArray(t))throw new T("`mask` should be an Array");if(!Array.isArray(e))throw new T("`inputs` should be an Array");if(t.length!==e.length)throw new T(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(a=>a==null))return null;t=t.map(a=>a==null?a:_n(a,0));let s=t[0];for(let a=1;a<t.length-1;++a)s=Ls(s,t[a]);return s})}}class Zh extends Ws{constructor(e){super(e)}mergeFunction(e){return R(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=re(t,e[s]);return t})}}Zh.className="Add";H(Zh);class Jh extends Ws{constructor(e){super(e)}mergeFunction(e){return R(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=A(t,e[s]);return t})}}Jh.className="Multiply";H(Jh);class ed extends Ws{constructor(e){super(e)}mergeFunction(e){return R(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=re(t,e[s]);return A(1/e.length,t)})}}ed.className="Average";H(ed);class td extends Ws{constructor(e){super(e)}mergeFunction(e){return R(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=zs(t,e[s]);return t})}}td.className="Maximum";H(td);class nd extends Ws{constructor(e){super(e)}mergeFunction(e){return R(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=cc(t,e[s]);return t})}}nd.className="Minimum";H(nd);class sd extends Ws{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new T("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const a of e)if(a!=null){t=!1;break}if(t)return;const s=[];for(let a=0;a<e.length;++a){const r=e[a].slice();r.splice(this.axis,1);let i=!1;for(const o of s)if(Ie(o,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new T("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return R(()=>rh(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new T("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),a=this.axis<0?s.length+this.axis:this.axis;for(const r of t.slice(1)){if(s[a]==null||r[a]==null){s[a]=null;break}s[a]+=r[a]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new T("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new T("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new T(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return R(()=>{let s=!0;if(t.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const a=[];for(let i=0;i<e.length;++i)t[i]==null?a.push(te(jt(e[i]),"bool")):t[i].rank<e[i].rank?a.push(_n(t[i],-1)):a.push(t[i]);const r=Ps(a,this.axis);return Yf(r,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}sd.className="Concatenate";H(sd);function Oa(n,e){for(;n<0;)n+=e;return n}function JS(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new ce("batchDot is not implemented for tensors of 4D or higher rank yet");if(M(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),M(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new ce("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,a=e.shape.length;t==null&&(t=[s-1,a-2]);const r=t;return R(()=>{let i;if(s>a){i=s-a;const l=[];for(let u=0;u<i;++u)l.push(1);e=G(e,e.shape.concat(l))}else if(a>s){i=a-s;const l=[];for(let u=0;u<i;++u)l.push(1);n=G(n,n.shape.concat(l))}else i=0;let o;if(n.shape.length===2&&e.shape.length===2)r[0]===r[1]?o=fe(A(n,e),r[0]):o=fe(A(xe(n,[1,0]),e),r[1]);else{const l=r[0]!==n.shape.length-1,u=r[1]===e.shape.length-1;o=Zt(n,e,l,u)}if(i>0){let l;s>a?l=s+a-3:l=s-1;const u=[];for(let c=l;c<l+i;++c)u.push(c);o=po(o,u)}return o.shape.length===1&&(o=_n(o,1)),o})}class ad extends Ws{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){M(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new ce("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,s);if(t[a[0]]!==s[a[1]])throw new T(`Dimension incompatibility: ${t[a[0]]} !== ${s[a[1]]}`)}mergeFunction(e){if(e.length!==2)throw new T(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],a;return Array.isArray(this.axes)?a=this.axes.map((r,i)=>Oa(r,e[i].shape.length)):a=[Oa(this.axes,t.shape.length),Oa(this.axes,s.shape.length)],this.normalize&&(t=Zr(t,a[0]),s=Zr(s,a[1])),JS(t,s,a)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[Oa(this.axes,e.length),Oa(this.axes,t.length)],s}computeOutputShape(e){M(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new ce("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,s);t.splice(a[0],1),s.splice(a[1],1),s.splice(0,1);const r=t.concat(s);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}ad.className="Dot";H(ad);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rd extends pe{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return R(()=>{this.invokeCallHook(e,t);const s=ue(e);return dr(()=>re(Io(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}rd.className="GaussianNoise";H(rd);class id extends pe{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return R(()=>{this.invokeCallHook(e,t);const s=ue(e);return this.rate>0&&this.rate<1?dr(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return A(s,Io(s.shape,1,r))},()=>s,t.training||!1):s})}}id.className="GaussianDropout";H(id);class od extends pe{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||ue(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return R(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return dr(()=>{const r=ue(e),i=1.6732632423543772,o=1.0507009873554805,l=-i*o;let u=ca(fo(s),this.rate);u=wn(u,"float32");const c=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-c*l*this.rate,d=re(A(r,u),A(re(u,-1),l));return re(A(d,c),h)},()=>ue(e),t.training||!1)}return e})}}od.className="AlphaDropout";H(od);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ya(n,e,t,s,a,r=.001){let i;if(n.rank===2)i=n1(n,e,t,s,a,r);else if(n.rank===3)i=s1(n,e,t,s,a,r);else if(n.rank===4)i=a1(n,e,t,s,a,r);else throw new ce(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function eT(n,e,t,s,a=.001){return R(()=>{const r=mc(n,s),i=r.mean,o=r.variance;return[Ya(n,i,o,t,e,a),i,o]})}function tT(n,e,t,s,a=.001){return R(()=>{const r=mc(n,s),i=r.mean,o=r.variance,l=[];for(const f of an(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const u=G(i,l),c=G(o,l),h=e==null?null:G(e,l),d=t==null?null:G(t,l);return[Ya(n,u,c,d,h,a),i,o]})}function nT(n,e,t,s,a=.001){return Ie(s.slice().sort(),an(0,n.rank-1))?eT(n,e,t,s,a):tT(n,e,t,s,a)}class ld extends pe{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Le(e.betaInitializer||"zeros"),this.gammaInitializer=Le(e.gammaInitializer||"ones"),this.movingMeanInitializer=Le(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Le(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ye(e.betaConstraint),this.gammaConstraint=Ye(e.gammaConstraint),this.betaRegularizer=Pe(e.betaRegularizer),this.gammaRegularizer=Pe(e.gammaRegularizer)}build(e){e=be(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new T(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new qe({ndim:e.length,axes:{[t]:s}})];const a=[s];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return R(()=>{const s=t.training==null?!1:t.training,a=ue(e),r=a.shape,i=r.length,o=an(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);const u=$s(1,i);u[l]=r[l];const c=o.slice();c.sort();const h=!Ie(c,an(0,i).slice(0,i-1)),d=()=>{if(h){const x=G(this.movingMean.read(),u),C=G(this.movingVariance.read(),u),w=this.center?G(this.beta.read(),u):null,I=this.scale?G(this.gamma.read(),u):null;return Ya(a,x,C,w,I,this.epsilon)}else return Ya(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,g]=nT(a,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(x,C,w)=>{R(()=>{const I=1-w,N=x.read(),v=A(Te(N,C),I);x.write(Te(N,v))})};return(()=>{m(this.movingMean,f,this.momentum),m(this.movingVariance,g,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ve(this.betaInitializer),gammaInitializer:Ve(this.gammaInitializer),movingMeanInitializer:Ve(this.movingMeanInitializer),movingVarianceInitializer:Ve(this.movingVarianceInitializer),betaRegularizer:Re(this.betaRegularizer),gammaRegularizer:Re(this.gammaRegularizer),betaConstraint:Ke(this.betaConstraint),gammaConstraint:Ke(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ld.className="BatchNormalization";H(ld);class ud extends pe{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Le(e.betaInitializer||"zeros"),this.gammaInitializer=Le(e.gammaInitializer||"ones"),this.betaRegularizer=Pe(e.betaRegularizer),this.gammaRegularizer=Pe(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=be(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Kn(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>e[r]),a=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const s=ue(e),a=s.shape,r=a.length;return R(()=>{let{mean:o,variance:l}=mc(s,this.axis,!0);const u=$s(1,r);for(const g of this.axis)u[g]=a[g];const c=g=>g!=null&&g.shape.length!==r?G(g,u):g;let h=this.scale?c(this.gamma.read()):null,d=this.center?c(this.beta.read()):null;const p=[],f=[];for(let g=0;g<r;++g)this.axis.indexOf(g)!==-1?(p.push(a[g]),f.push(1)):(p.push(1),f.push(a[g]));return o=xs(o,p),l=xs(l,p),h!=null&&(h=xs(h,f)),d!=null&&(d=xs(d,f)),Ya(s,o,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ve(this.betaInitializer),gammaInitializer:Ve(this.gammaInitializer),betaRegularizer:Re(this.betaRegularizer),gammaRegularizer:Re(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}ud.className="LayerNormalization";H(ud);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sT(n,e,t){return R(()=>{if(n.rank!==4)throw new T(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new T("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=rn()),t!=="channelsLast"&&t!=="channelsFirst")throw new T(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Qu(n,s)})}class cd extends pe{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?rn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new T(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new T(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new T(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new qe({ndim:4})]}computeOutputShape(e){e=be(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return R(()=>sT(ue(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}cd.className="ZeroPadding2D";H(cd);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Vo(n,e,t,s,a,r){return R(()=>{Ge(a),hy(r),Vt(s),t==null&&(t=[1,1]),s==null&&(s="valid"),a==null&&(a=rn()),r==null&&(r="max"),n=Dh(n,a);let i;const o=s==="same"?"same":"valid";return r==="max"?i=rm(n,e,t,o):i=Qf(n,e,t,o),a==="channelsFirst"&&(i=xe(i,[0,3,1,2])),i})}function Zy(n,e,t,s,a,r){return R(()=>{Ge(a),hy(r),Vt(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),a==null&&(a=rn()),r==null&&(r="max"),n=Xy(n,a);let i;const o=s==="same"?"same":"valid";return r==="max"?i=r1(n,e,t,o):i=i1(n,e,t,o),a==="channelsFirst"&&(i=xe(i,[0,4,1,2,3])),i})}class Jy extends pe{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new T(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Je(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new T(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Je(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Vt(this.padding),this.inputSpec=[new qe({ndim:3})]}computeOutputShape(e){e=be(e);const t=nn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return R(()=>{this.invokeCallHook(e,t),e=cr(ue(e),2);const s=this.poolingFunction(ue(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return po(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class hd extends Jy{constructor(e){super(e)}poolingFunction(e,t,s,a,r){return Ge(r),Vt(a),Vo(e,t,s,a,r,"max")}}hd.className="MaxPooling1D";H(hd);class dd extends Jy{constructor(e){super(e)}poolingFunction(e,t,s,a,r){return Ge(r),Vt(a),Vo(e,t,s,a,r,"avg")}}dd.className="AveragePooling1D";H(dd);class ex extends pe{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new T(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Je(this.poolSize,"poolSize"),Je(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ge(this.dataFormat),Vt(this.padding),this.inputSpec=[new qe({ndim:4})]}computeOutputShape(e){e=be(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=nn(t,this.poolSize[0],this.padding,this.strides[0]),s=nn(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return R(()=>(this.invokeCallHook(e,t),this.poolingFunction(ue(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class pd extends ex{constructor(e){super(e)}poolingFunction(e,t,s,a,r){return Ge(r),Vt(a),Vo(e,t,s,a,r,"max")}}pd.className="MaxPooling2D";H(pd);class fd extends ex{constructor(e){super(e)}poolingFunction(e,t,s,a,r){return Ge(r),Vt(a),Vo(e,t,s,a,r,"avg")}}fd.className="AveragePooling2D";H(fd);class tx extends pe{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new T(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Je(this.poolSize,"poolSize"),Je(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ge(this.dataFormat),Vt(this.padding),this.inputSpec=[new qe({ndim:5})]}computeOutputShape(e){e=be(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],a=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=nn(t,this.poolSize[0],this.padding,this.strides[0]),s=nn(s,this.poolSize[1],this.padding,this.strides[1]),a=nn(a,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,a]:[e[0],t,s,a,e[4]]}call(e,t){return R(()=>(this.invokeCallHook(e,t),this.poolingFunction(ue(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class md extends tx{constructor(e){super(e)}poolingFunction(e,t,s,a,r){return Ge(r),Vt(a),Zy(e,t,s,a,r,"max")}}md.className="MaxPooling3D";H(md);class gd extends tx{constructor(e){super(e)}poolingFunction(e,t,s,a,r){return Ge(r),Vt(a),Zy(e,t,s,a,r,"avg")}}gd.className="AveragePooling3D";H(gd);class nx extends pe{constructor(e){super(e),this.inputSpec=[new qe({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ce}}class yd extends nx{constructor(e){super(e||{})}call(e,t){return R(()=>{const s=ue(e);return Ze(s,1)})}}yd.className="GlobalAveragePooling1D";H(yd);class xd extends nx{constructor(e){super(e||{})}call(e,t){return R(()=>{const s=ue(e);return Js(s,1)})}}xd.className="GlobalMaxPooling1D";H(xd);class sx extends pe{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ge(this.dataFormat),this.inputSpec=[new qe({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ce}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class bd extends sx{call(e,t){return R(()=>{const s=ue(e);return this.dataFormat==="channelsLast"?Ze(s,[1,2]):Ze(s,[2,3])})}}bd.className="GlobalAveragePooling2D";H(bd);class wd extends sx{call(e,t){return R(()=>{const s=ue(e);return this.dataFormat==="channelsLast"?Js(s,[1,2]):Js(s,[2,3])})}}wd.className="GlobalMaxPooling2D";H(wd);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ax extends pe{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const a=t.layer,r=tn(a,s);delete t.layer;const i={layer:r};return Object.assign(i,t),new e(i)}}class Cd extends ax{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=be(e),e.length<3)throw new T(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=be(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),a=e[1];return[s[0],a].concat(s.slice(1))}call(e,t){return R(()=>(e=ue(e),Yy((i,o)=>[ue(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}Cd.className="TimeDistributed";H(Cd);function aT(n){Bs(ov,"BidirectionalMergeMode",n)}const rT="concat";class Id extends ax{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=tn(s),t.goBackwards=t.goBackwards!==!0;const a={};if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=tn(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?rT:e.mergeMode,aT(this.mergeMode),e.weights)throw new ce("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,a,r;return this.returnState&&(r=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,a=[s]):this.mergeMode==null?a=[s,s.slice()]:a=[s],this.returnState?this.mergeMode==null?a.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):wt(a)}apply(e,t){let s=t==null?null:t.initialState,a=t==null?null:t.constants;t==null&&(t={});const r=Ky(e,s,a,this.numConstants);if(e=r.inputs,s=r.initialState,a=r.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&a==null)return super.apply(e,t);const i=[],o=[];if(s!=null){const u=s.length;if(u%2>0)throw new T("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,i.push(...s);const c=s.map(h=>new qe({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),o.push(...c)}if(a!=null)throw new ce("Support for constants in Bidirectional layers is not implemented yet.");const l=i[0]instanceof gn;for(const u of i)if(u instanceof gn!==l)throw new T("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(i),c=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return R(()=>{const s=t.initialState;let a,r;if(s==null)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let i;this.returnState&&(Array.isArray(a)&&(i=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Ga(r,1));let o;return this.mergeMode==="concat"?o=rh([a,r]):this.mergeMode==="sum"?o=re(a,r):this.mergeMode==="ave"?o=A(.5,re(a,r)):this.mergeMode==="mul"?o=A(a,r):this.mergeMode==null&&(o=[a,r]),this.returnState?this.mergeMode==null?o.concat(i):[o].concat(i):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Is(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Is(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=tn(t.layer);if(delete t.layer,t.numConstants!=null)throw new ce("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=s,new e(a)}}Id.className="Bidirectional";H(Id);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Nd extends pe{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return R(()=>(e=ue(e),e.dtype!=="float32"&&(e=wn(e,"float32")),re(A(e,this.scale),this.offset)))}}Nd.className="Rescaling";H(Nd);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:iT,cropAndResize:oT}=mn;class vd extends pe{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,a,r,i,o,l){return R(()=>{let u,c=!1;const h=t/i,d=s/o,p=(a+t)/i,f=(r+s)/o,g=[h,d,p,f],m=[];e.rank===3?(c=!0,u=Fn([e])):u=e;for(let I=0;I<u.shape[0];I++)m.push(g);const y=Ts(m,[m.length,4]),x=o1(0,m.length,1,"int32"),w=oT(u,y,x,[a,r],"nearest");return wn(c?ue(On(w)):w,l)})}upsize(e,t,s,a){return R(()=>{const r=iT(e,[t,s]);return wn(r,a)})}call(e,t){return R(()=>{const s=ue(e),a=s.dtype,r=s.shape,i=r[r.length-3],o=r[r.length-2];let l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let u=0;return o!==this.width&&(u=Math.floor((o-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,i,o,a):this.upsize(e,this.height,this.width,a)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=be(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}vd.className="CenterCrop";H(vd);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lT(n,e,t,s){let a=ue(n);if(a.dtype!=="int32"&&(a=wn(a,"int32")),e==="int")return a;const r=a.shape;if(a.rank===0&&(a=_n(a,-1)),e==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=_n(a,-1)),a.rank>2)throw new T(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${r} which would result in output rank ${a.rank}.`);const i=["multiHot","oneHot"].includes(e),o=a;let l;if(typeof s<"u"&&e==="count"?l=hp(o,s,t,i):l=hp(o,[],t,i),e!=="tfIdf")return l;if(s)return A(l,s);throw new T("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Sd extends pe{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=be(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return R(()=>{e=ue(e),e.dtype!=="int32"&&(e=wn(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new T(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=ue(t.countWeights)}const a=Js(e),r=im(e),i=un(this.numTokens,a).bufferSync().get(0),o=ca(r,0).bufferSync().get(0);if(!(i&&o))throw new T(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return lT(e,this.outputMode,this.numTokens,s)})}}Sd.className="CategoryEncoding";H(Sd);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const uT=["bilinear","nearest"],jp=new Set(uT);class Td extends pe{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(jp.has(e.interpolation))this.interpolation=e.interpolation;else throw new T(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=be(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return R(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return mn.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return mn.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...jp]} are supported`)})}}Td.className="Resizing";H(Td);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rx{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}rx.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ix extends pe{constructor(e){super(e),this.randomGenerator=new rx(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}ix.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const cT=["bilinear","nearest"],Xp=new Set(cT);class $d extends ix{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new T(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new T(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new T(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(Xp.has(s))this.interpolation=s;else throw new T(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=be(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return R(()=>{const s=ue(e);this.imgHeight=s.shape[s.shape.length-3];const a=s.shape[s.shape.length-2];this.widthFactor=fo([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*a;r=Math.round(r);const i=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return mn.resizeBilinear(e,i);case"nearest":return mn.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...Xp]} are supported`)}})}}$d.className="RandomWidth";H($d);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hT(n){return new ma(n)}function dT(n){return new Rh(n)}function pT(n){return new Th(n)}function fT(n){return new $h(n)}function mT(n){return new kh(n)}function gT(n){return new Ah(n)}function yT(n){return new Eh(n)}function xT(n){return new mr(n)}function bT(n){return new xa(n)}function wT(n){return new Oh(n)}function CT(n){return new ba(n)}function IT(n){return new Fh(n)}function NT(n){return new _h(n)}function vT(n){return new Lh(n)}function ST(n){return new Ph(n)}function TT(n){return new zh(n)}function $T(n){return new jh(n)}function kT(n){return new Gh(n)}function RT(n){return new zo(n)}function ET(n){return new Uh(n)}function AT(n){return new Hh(n)}function DT(n){return new Xh(n)}function OT(n){return new qh(n)}function FT(n){return new Kh(n)}function _T(n){return new Qh(n)}function LT(n){return new Zh(n)}function PT(n){return new ed(n)}function zT(n){return new sd(n)}function VT(n){return new td(n)}function BT(n){return new nd(n)}function MT(n){return new Jh(n)}function WT(n){return new ad(n)}function UT(n){return new ld(n)}function GT(n){return new ud(n)}function HT(n){return new cd(n)}function kd(n){return new dd(n)}function jT(n){return kd(n)}function XT(n){return kd(n)}function Rd(n){return new fd(n)}function qT(n){return Rd(n)}function KT(n){return Rd(n)}function Ed(n){return new gd(n)}function YT(n){return Ed(n)}function QT(n){return Ed(n)}function ZT(n){return new yd(n)}function JT(n){return new bd(n)}function ox(n){return new xd(n)}function lx(n){return new wd(n)}function ux(n){return new hd(n)}function cx(n){return new pd(n)}function e$(n){return new md(n)}function t$(n){return new Bh(n)}function n$(n){return new _o(n)}function s$(n){return new Mh(n)}function a$(n){return new yr(n)}function r$(n){return new Vh(n)}function i$(n){return new Fo(n)}function o$(n){return new Wh(n)}function l$(n){return new Po(n)}function u$(n){return new Sn(n)}function c$(n){return new Lo(n)}function h$(n){return new Id(n)}function d$(n){return new Cd(n)}const p$=ox,f$=lx,m$=ux,g$=cx;function y$(n){return new rd(n)}function x$(n){return new id(n)}function b$(n){return new od(n)}function w$(n){return new Yh(n)}function C$(n){return new Nd(n)}function I$(n){return new vd(n)}function N$(n){return new Td(n)}function v$(n){return new Sd(n)}function S$(n){return new $d(n)}const iH=Object.freeze(Object.defineProperty({__proto__:null,Layer:pe,RNN:Sn,RNNCell:gr,activation:$T,add:LT,alphaDropout:b$,average:PT,averagePooling1d:kd,averagePooling2d:Rd,averagePooling3d:Ed,avgPool1d:jT,avgPool2d:qT,avgPool3d:YT,avgPooling1d:XT,avgPooling2d:KT,avgPooling3d:QT,batchNormalization:UT,bidirectional:h$,categoryEncoding:v$,centerCrop:I$,concatenate:zT,conv1d:xT,conv2d:bT,conv2dTranspose:wT,conv3d:CT,conv3dTranspose:IT,convLstm2d:o$,convLstm2dCell:l$,cropping2D:vT,dense:kT,depthwiseConv2d:TT,dot:WT,dropout:RT,elu:dT,embedding:_T,flatten:AT,gaussianDropout:x$,gaussianNoise:y$,globalAveragePooling1d:ZT,globalAveragePooling2d:JT,globalMaxPool1d:p$,globalMaxPool2d:f$,globalMaxPooling1d:ox,globalMaxPooling2d:lx,gru:t$,gruCell:n$,input:jS,inputLayer:hT,layerNormalization:GT,leakyReLU:fT,lstm:s$,lstmCell:a$,masking:w$,maxPool1d:m$,maxPool2d:g$,maxPooling1d:ux,maxPooling2d:cx,maxPooling3d:e$,maximum:VT,minimum:BT,multiply:MT,permute:FT,prelu:mT,randomWidth:S$,reLU:pT,repeatVector:DT,rescaling:C$,reshape:OT,resizing:N$,rnn:u$,separableConv2d:NT,simpleRNN:r$,simpleRNNCell:i$,softmax:gT,spatialDropout1d:ET,stackedRNNCells:c$,thresholdedReLU:yT,timeDistributed:d$,upSampling2d:ST,zeroPadding2d:HT},Symbol.toStringTag,{value:"Module"}));function T$(n,e){return wh(n,e)}function $$(n,e){return vy(n,e)}function k$(n,e){return Sy(n,e)}function R$(n,e){return Ch(n,e)}function E$(n,e){return Ih(n,e)}function A$(n,e){return Ny(n,e)}function D$(n,e){return mS(n,e)}function O$(n,e){return bh(n,e)}function F$(n,e){return Ao(n,e)}function _$(n,e){return ga(n,e)}function L$(n,e){return ga(n,e)}function P$(n,e){return ga(n,e)}function z$(n,e){return Ms(n,e)}function V$(n,e){return Ms(n,e)}function B$(n,e){return Ms(n,e)}const oH=Object.freeze(Object.defineProperty({__proto__:null,MAPE:L$,MSE:V$,binaryAccuracy:T$,binaryCrossentropy:$$,categoricalAccuracy:R$,categoricalCrossentropy:E$,cosineProximity:O$,mape:P$,meanAbsoluteError:F$,meanAbsolutePercentageError:_$,meanSquaredError:z$,mse:B$,precision:A$,recall:D$,sparseCategoricalAccuracy:k$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const lH=Object.freeze(Object.defineProperty({__proto__:null,modelFromJSON:US},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function M$(n){return new fr(n)}function W$(n){return XS(n)}function U$(n){return qS(n)}const uH=Object.freeze(Object.defineProperty({__proto__:null,l1:W$,l1l2:M$,l2:U$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class G$ extends na{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Qn))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function kr(n,e){return n<e}function qp(n,e){return n>e}class H$ extends G${constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new ce("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=kr:this.mode==="max"?this.monitorFunc=qp:this.monitor.indexOf("acc")!==-1?this.monitorFunc=qp:this.monitorFunc=kr,this.monitorFunc===kr&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===kr?1/0:-1/0}async onEpochEnd(e,t){await Gn(t);const s=this.getMonitorValue(t);s!=null&&(this.monitorFunc(s-this.minDelta,this.best)?(this.best=s,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});const t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}function j$(n){return new H$(n)}const cH={earlyStopping:j$};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X$=O();X$.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Wt;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Wt||(Wt={}));var Kp;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Kp||(Kp={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ad={};function hH(n,e){const t={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:e};Ad[n]=t}function hx(n){return Ad[n]}function dH(n){delete Ad[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b(n,e,t,s,a){const r=e.inputParams[n];if(r&&r.inputIndexStart!==void 0){const o=r.inputIndexStart,l=r.inputIndexEnd===0?void 0:r.inputIndexEnd===void 0?o+1:r.inputIndexEnd,u=o<0?e.inputNames.length+o:o;if(r.type==="tensor")return at(e.inputNames[u],t,s,a);if(r.type==="tensors"){const d=e.inputs.slice(o,l);return e.inputNames.slice(o,l).filter((f,g)=>{var m;return((m=d[g])===null||m===void 0?void 0:m.op)!=="NoOp"}).map(f=>at(f,t,s,a))}const c=at(e.inputNames[u],t,s,a),h=c.dataSync();return r.type==="number"?h[0]:Cs(c.shape,h)}const i=e.attrParams[n];return i&&i.value}function at(n,e,t,s){const[a,r]=$t(n,t);if(s!=null){const o=s.getHashTableHandleByName(a);if(o!=null)return o}const i=t.currentContextIds.find(o=>!!e[si(a,o)]);return i!==void 0?e[si(a,i)][r]:void 0}function Yp(n,e,t){return e[si(n,t.currentContextId)]}function En(n,e){const[t,s,a]=$t(n,e);return[si(t,e&&e.currentContextId),s,a]}function si(n,e){return e?`${n}-${e}`:n}function $t(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const r=e.parseNodeNameCache.get(n);if(r!=null)return r}const s=n.split(":");let a;if(s.length===1)a=[n,0,void 0];else{const r=s[0],i=s.length===3?s[1]:void 0,o=Number(s[s.length-1]);a=[r,o,i]}return t&&e.parseNodeNameCache.set(n,a),a}function Pr(n,e,t){let s=b("pad",n,e,t);if(s==="explicit"){s=b("explicitPaddings",n,e,t);const a=[[0,0],[0,0],[0,0],[0,0]];for(let r=0;r<4;r++)a[r][0]=s[r*2],a[r][1]=s[r*2+1];return a}return s}function An(n){return n.kept?n:dm(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q$=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],K$=Object.freeze(Object.defineProperty({__proto__:null,json:q$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y$=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Q$=Object.freeze(Object.defineProperty({__proto__:null,json:Y$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z$=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],J$=Object.freeze(Object.defineProperty({__proto__:null,json:Z$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ek=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],tk=Object.freeze(Object.defineProperty({__proto__:null,json:ek},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nk=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],sk=Object.freeze(Object.defineProperty({__proto__:null,json:nk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ak=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],rk=Object.freeze(Object.defineProperty({__proto__:null,json:ak},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ik=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],ok=Object.freeze(Object.defineProperty({__proto__:null,json:ik},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lk=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],uk=Object.freeze(Object.defineProperty({__proto__:null,json:lk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ck=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],hk=Object.freeze(Object.defineProperty({__proto__:null,json:ck},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],pk=Object.freeze(Object.defineProperty({__proto__:null,json:dk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],mk=Object.freeze(Object.defineProperty({__proto__:null,json:fk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gk=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],yk=Object.freeze(Object.defineProperty({__proto__:null,json:gk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xk=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],bk=Object.freeze(Object.defineProperty({__proto__:null,json:xk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Ck=Object.freeze(Object.defineProperty({__proto__:null,json:wk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ik=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Nk=Object.freeze(Object.defineProperty({__proto__:null,json:Ik},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vk=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Sk=Object.freeze(Object.defineProperty({__proto__:null,json:vk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tk=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],$k=Object.freeze(Object.defineProperty({__proto__:null,json:Tk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Rk=Object.freeze(Object.defineProperty({__proto__:null,json:kk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ek=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Ak=Object.freeze(Object.defineProperty({__proto__:null,json:Ek},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qp{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[K$,Q$,J$,tk,sk,rk,ok,uk,hk,pk,mk,yk,bk,Ck,Nk,Sk,$k,Rk,Ak],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,a)=>(s[a.tfOpName]=a,s),{})}transformGraph(e,t={}){const s=e.node,a=[],r=[],i=[],o=s.reduce((g,m)=>(g[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?a.push(g[m.name]):m.op==="Const"?r.push(g[m.name]):(m.input==null||m.input.length===0)&&i.push(g[m.name]),g),{});let l=[];const u=[];let c={},h={};t!=null&&(c=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach(g=>{const m=o[g];m.inputNames.forEach((y,x)=>{const[C,,w]=En(y),I=o[C];if(I.outputs!=null){const N=I.outputs.indexOf(w);if(N!==-1){const v=`${C}:${N}`;m.inputNames[x]=v}}m.inputs.push(I),I.children.push(m)})}),Object.keys(h).length===0?d.forEach(g=>{const m=o[g];m.children.length===0&&u.push(m)}):Object.keys(h).forEach(g=>{const[m]=En(g),y=o[m];y!=null&&(y.signatureKey=h[g],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(g=>{const[m]=En(g),y=o[m];y&&(y.signatureKey=c[g],l.push(y))}):l=a;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((g,m)=>(g[m.signature.name]=this.mapFunction(m),g),{}));const f={nodes:o,inputs:l,outputs:u,weights:r,placeholders:a,signature:t,functions:p};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=hx(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(a=>a.startsWith("^")?a.slice(1):a),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((a,r)=>(a[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},a),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((a,r)=>{const i=r.type;let o;switch(r.type){case"string":o=$l(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=$l(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=Fl(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=Fl(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=Rl(e.attr,r.tfName,r.defaultValue||0),o===void 0&&r.tfDeprecatedName&&(o=Rl(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=Ol(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=Ol(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=kl(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=kl(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=Ll(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=Ll(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=Dl(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=Dl(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=_l(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=_l(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=El(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=El(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=Al(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=Al(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=Zp(e.attr,r.tfName,r.defaultValue),o===void 0&&r.tfDeprecatedName&&(o=Zp(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return a[r.name]={value:o,type:i},a},{})),s}mapFunction(e){const t=e.nodeDef,s=[],a=[];let r={};t!=null&&(r=t.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&a.push(h[d.name]),h),{}));const i=[],o=[];e.signature.inputArg.forEach(h=>{const[d]=En(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Dd(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,i.push(p),r[d]=p}),Object.keys(r).forEach(h=>{const d=r[h];d.inputNames.forEach((p,f)=>{const[g,,m]=En(p),y=r[g];if(y.outputs!=null){const x=y.outputs.indexOf(m);if(x!==-1){const C=`${g}:${x}`;d.inputNames[f]=C}}d.inputs.push(y),y.children.push(d)})});const u=e.ret;e.signature.outputArg.forEach(h=>{const[d,p]=En(u[h.name]),f=r[d];f!=null&&(f.defaultOutput=p,o.push(f))});const c=this.mapArgsToSignature(e);return{nodes:r,inputs:i,outputs:o,weights:a,placeholders:s,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function Dk(n){const e=O().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function dx(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):Dk(n);return e?t:t.toLowerCase()}function $l(n,e,t,s=!1){const a=n[e];return a!=null?dx(a.s,s):t}function kl(n,e,t){const s=n[e];return s?s.b:t}function Rl(n,e,t){const s=n[e]||{},a=s.i!=null?s.i:s.f!=null?s.f:t;return typeof a=="number"?a:parseInt(a,10)}function Dd(n){switch(typeof n=="string"&&(n=Wt[n]),n){case Wt.DT_FLOAT:case Wt.DT_HALF:return"float32";case Wt.DT_INT32:case Wt.DT_INT64:case Wt.DT_INT8:case Wt.DT_UINT8:return"int32";case Wt.DT_BOOL:return"bool";case Wt.DT_DOUBLE:return"float32";case Wt.DT_STRING:return"string";default:return null}}function Zp(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function El(n,e,t){const s=n[e];return s&&s.type?Dd(s.type):t}function Al(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(a=>Dd(a)):t}function px(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Dl(n,e,t){const s=n[e];return s&&s.shape?px(s.shape):t}function Ol(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):t}function Fl(n,e,t,s=!1){const a=n[e];return a&&a.list&&a.list.s?a.list.s.map(r=>dx(r,s)):t}function _l(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(a=>px(a)):t}function Ll(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ok{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(a=>this.getInput(a)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((a,r)=>(a[r]=this.getAttr(r),a),{}))}getInput(e){return at(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return at(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return Rl(this.node.rawAttrs,e,t);if(s.s!=null)return $l(this.node.rawAttrs,e,t);if(s.b!=null)return kl(this.node.rawAttrs,e,t);if(s.shape!=null)return Dl(this.node.rawAttrs,e,t);if(s.type!=null)return El(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return Ol(this.node.rawAttrs,e,t);if(s.list.s!=null)return Fl(this.node.rawAttrs,e,t);if(s.list.shape!=null)return _l(this.node.rawAttrs,e,t);if(s.list.b!=null)return Ll(this.node.rawAttrs,e,t);if(s.list.type!=null)return Al(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fk=(n,e,t,s=ut)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(b("a",n,e,t),b("b",n,e,t))];case"AddN":return[s.addN(b("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(b("a",n,e,t),b("b",n,e,t))];case"Mul":return[s.mul(b("a",n,e,t),b("b",n,e,t))];case"RealDiv":case"Div":return[s.div(b("a",n,e,t),b("b",n,e,t))];case"DivNoNan":return[s.divNoNan(b("a",n,e,t),b("b",n,e,t))];case"FloorDiv":return[s.floorDiv(b("a",n,e,t),b("b",n,e,t))];case"Sub":return[s.sub(b("a",n,e,t),b("b",n,e,t))];case"Minimum":return[s.minimum(b("a",n,e,t),b("b",n,e,t))];case"Maximum":return[s.maximum(b("a",n,e,t),b("b",n,e,t))];case"Pow":return[s.pow(b("a",n,e,t),b("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(b("a",n,e,t),b("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _k=(n,e,t,s=ut)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(b("x",n,e,t))];case"Acos":return[s.acos(b("x",n,e,t))];case"Acosh":return[s.acosh(b("x",n,e,t))];case"Asin":return[s.asin(b("x",n,e,t))];case"Asinh":return[s.asinh(b("x",n,e,t))];case"Atan":return[s.atan(b("x",n,e,t))];case"Atan2":return[s.atan2(b("x",n,e,t),b("y",n,e,t))];case"Atanh":return[s.atanh(b("x",n,e,t))];case"Ceil":return[s.ceil(b("x",n,e,t))];case"Complex":return[s.complex(b("real",n,e,t),b("imag",n,e,t))];case"Cos":return[s.cos(b("x",n,e,t))];case"Cosh":return[s.cosh(b("x",n,e,t))];case"Elu":return[s.elu(b("x",n,e,t))];case"Erf":return[s.erf(b("x",n,e,t))];case"Exp":return[s.exp(b("x",n,e,t))];case"Expm1":return[s.expm1(b("x",n,e,t))];case"Floor":return[s.floor(b("x",n,e,t))];case"Log":return[s.log(b("x",n,e,t))];case"Log1p":return[s.log1p(b("x",n,e,t))];case"Imag":return[s.imag(b("x",n,e,t))];case"Neg":return[s.neg(b("x",n,e,t))];case"Reciprocal":return[s.reciprocal(b("x",n,e,t))];case"Real":return[s.real(b("x",n,e,t))];case"Relu":return[s.relu(b("x",n,e,t))];case"Round":return[s.round(b("x",n,e,t))];case"Selu":return[s.selu(b("x",n,e,t))];case"Sigmoid":return[s.sigmoid(b("x",n,e,t))];case"Sin":return[s.sin(b("x",n,e,t))];case"Sign":return[s.sign(b("x",n,e,t))];case"Sinh":return[s.sinh(b("x",n,e,t))];case"Softplus":return[s.softplus(b("x",n,e,t))];case"Sqrt":return[s.sqrt(b("x",n,e,t))];case"Square":return[s.square(b("x",n,e,t))];case"Tanh":return[s.tanh(b("x",n,e,t))];case"Tan":return[s.tan(b("x",n,e,t))];case"ClipByValue":return[s.clipByValue(b("x",n,e,t),b("clipValueMin",n,e,t),b("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(b("x",n,e,t))];case"Rsqrt":return[s.rsqrt(at(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(b("x",n,e,t),b("alpha",n,e,t))];case"Prelu":return[s.prelu(b("x",n,e,t),b("alpha",n,e,t))];case"IsNan":return[s.isNaN(at(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(at(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(at(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){M(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const a=n[s],r=e[s];M(a<0||r<0||a===r,()=>t+` Shapes ${n} and ${e} must match`)}}}function Jp(n){return!(typeof n=="number"||n.some(e=>e<0))}function Fa(n,e,t){let s=Pl(n,t);const a=!Jp(s);if(a&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(a&&e.forEach(r=>{s=Pl(r.shape,s)}),!Jp(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Pl(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const a=n[s],r=e[s];if(a>=0&&r>=0&&a!==r)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=a>=0?a:r}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lk{constructor(e,t,s,a,r,i,o){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=ke(0),it(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Ut(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,it(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,a)=>this.write(s,t[a]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let a=0;a<this.size();a++)e.push(a)}if(e.length===0)return Ts([],[0].concat(this.elementShape));const s=this.readMany(e);return Ut(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Fn(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Ts([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const s=this.readMany(t);return Ut(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Ps(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,On(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const a=e.map(l=>(s+=l,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=s===0?0:t.size/s,i=[];R(()=>{t=G(t,[1,s,r]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:a[l-1],0],h=[1,e[l],r];i[l]=G(en(t,c,h),this.elementShape)}return i});const o=[];for(let l=0;l<e.length;l++)o[l]=l;this.writeMany(o,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ks{get id(){return this.idTensor.id}constructor(e,t,s,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(r=>{if(s!==r.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${r.dtype}`);Ut(t,r.shape,"TensorList shape mismatch: "),it(r)}),this.idTensor=ke(0),this.maxNumElements=a,it(this.idTensor)}copy(){return new ks([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Ut(e,this.elementShape,"TensorList shape mismatch: ");const a=Fa(this.elementShape,this.tensors,e);return R(()=>{const r=this.tensors.map(i=>G(i,a));return Fn(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=Fa(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,Ut(a.shape,e,"TensorList shape mismatch: "),G(a,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ut(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");it(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new ks([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Ut(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=Fa(this.elementShape,this.tensors,t);return G(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ut(this.elementShape,t.shape,"TensorList shape mismatch: "),it(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Ut(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=Fa(this.elementShape,this.tensors,s);return e.length===0?Ts([],[0].concat(a)):R(()=>{const r=e.map(i=>G(this.tensors[i],a));return Fn(r,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ut(this.elementShape,t,"TensorList shape mismatch: ");const s=Fa(this.elementShape,this.tensors,t);return this.size()===0?Ts([],[0].concat(s)):R(()=>{const a=this.tensors.map(r=>G(r,s));return Ps(a,0)})}}function Pk(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const a=n.shape.slice(1);Ut(a,e,"TensorList shape mismatch: ");const r=On(n);return new ks(r,e,s)}function zk(n,e,t,s){return new ks([],n,e,s)}function Vk(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const a=Math.max(...e);if(s!=null&&s!==-1&&a>=s)throw new Error(`Max index must be < array size (${a}  vs. ${s})`);const r=new ks([],t,n.dtype,s),i=On(n,0);return e.forEach((o,l)=>{r.setItem(o,i[l])}),r}function Bk(n,e,t){let s=0;const a=e.map(c=>(s+=c,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const r=n.shape.slice(1),i=Pl(r,t),o=s===0?0:n.size/s,l=R(()=>{const c=[];n=G(n,[1,s,o]);for(let h=0;h<e.length;++h){const p=[0,h===0?0:a[h-1],0],f=[1,e[h],o];c[h]=G(en(n,p,f),i)}return n.dispose(),c}),u=new ks([],t,n.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mk=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=b("thenBranch",n,e,t),a=b("elseBranch",n,e,t),r=b("cond",n,e,t),i=b("args",n,e,t);return(await r.data())[0]?t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[a].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=b("body",n,e,t),a=b("cond",n,e,t),r=b("args",n,e,t),i=await t.functionMap[a].executeFunctionAsync(r,t.tensorArrayMap,t.tensorListMap),o=r.map(c=>c.id);let l=await i[0].data();i.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&c.dispose()});let u=r;for(;l[0];){const c=u;u=await t.functionMap[s].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);const h=u.map(p=>p.id);c.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await t.functionMap[a].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await d[0].data(),d.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return u}case"LoopCond":{const s=b("pred",n,e,t);return[An(s)]}case"Switch":{const s=b("pred",n,e,t);let a=b("data",n,e,t);return a.kept||(a=An(a)),(await s.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const s=n.inputNames.find(a=>at(a,e,t)!==void 0);if(s){const a=at(s,e,t);return[An(a)]}return}case"Enter":{const s=b("frameName",n,e,t),a=b("tensor",n,e,t);return t.enterFrame(s),[An(a)]}case"Exit":{const s=b("tensor",n,e,t);return t.exitFrame(),[An(s)]}case"NextIteration":{const s=b("tensor",n,e,t);return t.nextIteration(),[An(s)]}case"TensorArrayV3":{const s=b("size",n,e,t),a=b("dtype",n,e,t),r=b("elementShape",n,e,t),i=b("dynamicSize",n,e,t),o=b("clearAfterRead",n,e,t),l=b("identicalElementShapes",n,e,t),u=b("name",n,e,t),c=new Lk(u,a,s,r,l,i,o);return t.addTensorArray(c),[c.idTensor,ke(1)]}case"TensorArrayWriteV3":{const s=b("tensorArrayId",n,e,t),a=b("index",n,e,t),r=b("tensor",n,e,t),i=t.getTensorArray(s.id);return i.write(a,r),[i.idTensor]}case"TensorArrayReadV3":{const s=b("tensorArrayId",n,e,t),a=b("index",n,e,t);return[t.getTensorArray(s.id).read(a)]}case"TensorArrayGatherV3":{const s=b("tensorArrayId",n,e,t),a=b("indices",n,e,t),r=b("dtype",n,e,t);return[t.getTensorArray(s.id).gather(a,r)]}case"TensorArrayScatterV3":{const s=b("tensorArrayId",n,e,t),a=b("indices",n,e,t),r=b("tensor",n,e,t),i=t.getTensorArray(s.id);return i.scatter(a,r),[i.idTensor]}case"TensorArrayConcatV3":{const s=b("tensorArrayId",n,e,t),a=t.getTensorArray(s.id),r=b("dtype",n,e,t);return[a.concat(r)]}case"TensorArraySplitV3":{const s=b("tensorArrayId",n,e,t),a=b("tensor",n,e,t),r=b("lengths",n,e,t),i=t.getTensorArray(s.id);return i.split(r,a),[i.idTensor]}case"TensorArraySizeV3":{const s=b("tensorArrayId",n,e,t),a=t.getTensorArray(s.id);return[ke(a.size(),"int32")]}case"TensorArrayCloseV3":{const s=b("tensorArrayId",n,e,t),a=t.getTensorArray(s.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const s=b("tensorListId",n,e,t),a=b("index",n,e,t),r=b("tensor",n,e,t),i=t.getTensorList(s.id);return i.setItem(a,r),[i.idTensor]}case"TensorListGetItem":{const s=b("tensorListId",n,e,t),a=b("index",n,e,t),r=b("elementShape",n,e,t),i=b("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(a,r,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=b("indices",n,e,t),a=b("tensor",n,e,t),r=b("elementShape",n,e,t),i=b("numElements",n,e,t),o=Vk(a,s,r,i);return t.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=b("elementShape",n,e,t),a=b("elementDType",n,e,t);let r;n.op==="TensorListReserve"?r="numElements":r="maxNumElements";const i=b(r,n,e,t),o=n.op==="TensorListReserve"?-1:i,l=zk(s,a,i,o);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=b("tensorListId",n,e,t),a=b("indices",n,e,t),r=b("elementShape",n,e,t),i=b("elementDType",n,e,t);return[t.getTensorList(s.id).gather(a,i,r)]}case"TensorListStack":{const s=b("tensorListId",n,e,t),a=b("elementShape",n,e,t),r=b("elementDType",n,e,t),i=b("numElements",n,e,t);return[t.getTensorList(s.id).stack(a,r,i)]}case"TensorListFromTensor":{const s=b("tensor",n,e,t),a=b("elementShape",n,e,t),r=b("elementDType",n,e,t),i=Pk(s,a,r);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=b("tensorListId",n,e,t),a=t.getTensorList(s.id),r=b("dtype",n,e,t),i=b("elementShape",n,e,t);return[a.concat(r,i)]}case"TensorListPushBack":{const s=b("tensorListId",n,e,t),a=b("tensor",n,e,t),r=t.getTensorList(s.id);return r.pushBack(a),[r.idTensor]}case"TensorListPopBack":{const s=b("tensorListId",n,e,t),a=b("elementShape",n,e,t),r=b("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(a,r)]}case"TensorListSplit":{const s=b("tensor",n,e,t),a=b("elementShape",n,e,t),r=b("lengths",n,e,t),i=Bk(s,r,a);return t.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=b("tensorListId",n,e,t),a=t.getTensorList(s.id);return[ke(a.size(),"int32")]}case"TensorListResize":{const s=b("tensorListId",n,e,t),a=b("size",n,e,t),i=t.getTensorList(s.id).resize(a);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ef(n,e,t){const[s,a]=b("fusedOps",n,e,t),r=s==="biasadd",i=!r,o=a==="prelu",l=s==="fusedbatchnorm",u=b("numArgs",n,e,t);if(r){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&r&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=b("strides",n,e,t),h=Pr(n,e,t),d=b("dataFormat",n,e,t).toUpperCase(),p=b("dilations",n,e,t);let[f,g]=b("args",n,e,t);i&&(g=f,f=void 0);const m=b("leakyreluAlpha",n,e,t);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:g,activationFunc:a,leakyreluAlpha:m}}const Wk=(n,e,t,s=ut)=>{switch(n.op){case"Conv1D":{const a=b("stride",n,e,t),r=b("pad",n,e,t),i=b("dataFormat",n,e,t).toUpperCase(),o=b("dilation",n,e,t);return[s.conv1d(b("x",n,e,t),b("filter",n,e,t),a,r,i,o)]}case"Conv2D":{const a=b("strides",n,e,t),r=Pr(n,e,t),i=b("dataFormat",n,e,t).toUpperCase(),o=b("dilations",n,e,t);return[s.conv2d(b("x",n,e,t),b("filter",n,e,t),[a[1],a[2]],r,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=ef(n,e,t);return[s.fused.conv2d({x:b("x",n,e,t),filter:b("filter",n,e,t),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=ef(n,e,t);return[s.fused.depthwiseConv2d({x:b("x",n,e,t),filter:b("filter",n,e,t),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=b("outputShape",n,e,t),r=b("strides",n,e,t),i=Pr(n,e,t);return[s.conv2dTranspose(b("x",n,e,t),b("filter",n,e,t),a,[r[1],r[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=b("strides",n,e,t),r=Pr(n,e,t),i=b("dilations",n,e,t),o=b("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(b("input",n,e,t),b("filter",n,e,t),[a[1],a[2]],r,o,[i[1],i[2]])]}case"Conv3D":{const a=b("strides",n,e,t),r=b("pad",n,e,t),i=b("dataFormat",n,e,t).toUpperCase(),o=b("dilations",n,e,t);return[s.conv3d(b("x",n,e,t),b("filter",n,e,t),[a[1],a[2],a[3]],r,i,[o[1],o[2],o[3]])]}case"AvgPool":{const a=b("strides",n,e,t),r=b("pad",n,e,t),i=b("kernelSize",n,e,t);return[s.avgPool(b("x",n,e,t),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=b("strides",n,e,t),r=b("pad",n,e,t),i=b("kernelSize",n,e,t);return[s.maxPool(b("x",n,e,t),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=b("strides",n,e,t),r=b("pad",n,e,t),i=b("kernelSize",n,e,t),o=b("includeBatchInIndex",n,e,t),{result:l,indexes:u}=s.maxPoolWithArgmax(b("x",n,e,t),[i[1],i[2]],[a[1],a[2]],r,o);return[l,u]}case"AvgPool3D":{const a=b("strides",n,e,t),r=b("pad",n,e,t),i=b("kernelSize",n,e,t);return[s.avgPool3d(b("x",n,e,t),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=b("strides",n,e,t),r=b("pad",n,e,t),i=b("kernelSize",n,e,t);return[s.maxPool3d(b("x",n,e,t),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=b("strides",n,e,t),r=b("pad",n,e,t),i=b("dilations",n,e,t),o=a[1],l=a[2],u=i[1],c=i[2];return[s.dilation2d(b("x",n,e,t),b("filter",n,e,t),[o,l],r,[u,c],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uk=(n,e,t,s=ut)=>{switch(n.op){case"Fill":{const a=b("shape",n,e,t),r=b("dtype",n,e,t),i=b("value",n,e,t);return[s.fill(a,i,r)]}case"LinSpace":{const a=b("start",n,e,t),r=b("stop",n,e,t),i=b("num",n,e,t);return[s.linspace(a,r,i)]}case"Multinomial":{const a=b("logits",n,e,t),r=b("numSamples",n,e,t),i=b("seed",n,e,t);return[s.multinomial(a,r,i)]}case"OneHot":{const a=b("indices",n,e,t),r=b("depth",n,e,t),i=b("onValue",n,e,t),o=b("offValue",n,e,t),l=b("dtype",n,e,t);return[s.oneHot(a,r,i,o,l)]}case"Ones":return[s.ones(b("shape",n,e,t),b("dtype",n,e,t))];case"OnesLike":return[s.onesLike(b("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(b("shape",n,e,t),b("dtype",n,e,t),b("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(b("shape",n,e,t),b("minval",n,e,t),b("maxval",n,e,t),b("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(b("shape",n,e,t),b("minval",n,e,t),b("maxval",n,e,t),b("seed",n,e,t))];case"Range":{const a=b("start",n,e,t),r=b("stop",n,e,t),i=b("step",n,e,t);return[s.range(a,r,i,b("dtype",n,e,t))]}case"TruncatedNormal":{const a=b("shape",n,e,t),r=b("mean",n,e,t),i=b("stdDev",n,e,t),o=b("seed",n,e,t);return[s.truncatedNormal(a,r,i,b("dtype",n,e,t),o)]}case"Zeros":return[s.zeros(b("shape",n,e,t),b("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(b("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sl(n,e,t){const s=b("boxes",n,e,t),a=b("scores",n,e,t),r=b("maxOutputSize",n,e,t),i=b("iouThreshold",n,e,t),o=b("scoreThreshold",n,e,t),l=b("softNmsSigma",n,e,t);return{boxes:s,scores:a,maxOutputSize:r,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}const Gk=async(n,e,t,s,a=ut)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=sl(n,e,t),h=await a.image.nonMaxSuppressionWithScoreAsync(r,i,o,l,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=sl(n,e,t),c=b("padToMaxOutputSize",n,e,t),h=await a.image.nonMaxSuppressionPaddedAsync(r,i,o,l,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=sl(n,e,t);return[await a.image.nonMaxSuppressionAsync(r,i,o,l,u)]}case"Where":{const r=a.cast(b("condition",n,e,t),"bool"),i=[await a.whereAsync(r)];return r.dispose(),i}case"ListDiff":return a.setdiff1dAsync(b("x",n,e,t),b("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hk=(n,e,t,s=ut)=>{switch(n.op){case"LowerBound":{const a=b("sortedSequence",n,e,t),r=b("values",n,e,t);return[s.lowerBound(a,r)]}case"TopKV2":{const a=b("x",n,e,t),r=b("k",n,e,t),i=b("sorted",n,e,t),o=s.topk(a,r,i);return[o.values,o.indices]}case"UpperBound":{const a=b("sortedSequence",n,e,t),r=b("values",n,e,t);return[s.upperBound(a,r)]}case"Unique":{const a=b("x",n,e,t),r=s.unique(a);return[r.values,r.indices]}case"UniqueV2":{const a=b("x",n,e,t),r=b("axis",n,e,t),i=s.unique(a,r);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jk=(n,e,t,s=ut)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const a=b("default",n,e,t);return[at(n.name,e,t)||a];case"Placeholder":return[at(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=b("x",n,e,t);return[An(c)]}case"IdentityN":return b("x",n,e,t).map(c=>An(c));case"Snapshot":const r=b("x",n,e,t);return[An(r)];case"Shape":return[s.tensor1d(b("x",n,e,t).shape,"int32")];case"ShapeN":return b("x",n,e,t).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(b("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(b("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=b("x",n,e,t),o=b("data",n,e,t),l=b("message",n,e,t),u=b("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xk{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ke(0),this.tensorMap=new Map,it(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ke(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(a=>a.dispose()),this.tensorMap.clear(),R(()=>{const a=On(t),r=s.length,i=a.length;M(r===i,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${i} elements.`);for(let o=0;o<r;o++){const l=s[o],u=a[o];it(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return R(()=>{const a=[];for(let r=0;r<s.length;r++){const i=s[r],o=this.findWithDefault(i,t);a.push(o)}return Fn(a)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qk=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const a=s.getHashTableHandleByName(n.name);if(a!=null)return[a];{const r=b("keyDType",n,e,t),i=b("valueDType",n,e,t),o=new Xk(r,i);return s.addHashTable(n.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=b("tableHandle",n,e,t,s),r=b("keys",n,e,t),i=b("values",n,e,t);return[await s.getHashTableById(a.id).import(r,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=b("tableHandle",n,e,t,s),r=b("keys",n,e,t),i=b("defaultValue",n,e,t);return[await s.getHashTableById(a.id).find(r,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=b("tableHandle",n,e,t,s);return[s.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kk=(n,e,t,s=ut)=>{switch(n.op){case"ResizeBilinear":{const a=b("images",n,e,t),r=b("size",n,e,t),i=b("alignCorners",n,e,t),o=b("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(a,[r[0],r[1]],i,o)]}case"ResizeNearestNeighbor":{const a=b("images",n,e,t),r=b("size",n,e,t),i=b("alignCorners",n,e,t),o=b("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(a,[r[0],r[1]],i,o)]}case"CropAndResize":{const a=b("image",n,e,t),r=b("boxes",n,e,t),i=b("boxInd",n,e,t),o=b("cropSize",n,e,t),l=b("method",n,e,t),u=b("extrapolationValue",n,e,t);return[s.image.cropAndResize(a,r,i,o,l,u)]}case"ImageProjectiveTransformV3":{const a=b("images",n,e,t),r=b("transforms",n,e,t),i=b("outputShape",n,e,t),o=b("fillValue",n,e,t),l=b("interpolation",n,e,t),u=b("fillMode",n,e,t);return[s.image.transform(a,r,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yk=(n,e,t,s=ut)=>{switch(n.op){case"Equal":return[s.equal(b("a",n,e,t),b("b",n,e,t))];case"NotEqual":return[s.notEqual(b("a",n,e,t),b("b",n,e,t))];case"Greater":return[s.greater(b("a",n,e,t),b("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(b("a",n,e,t),b("b",n,e,t))];case"Less":return[s.less(b("a",n,e,t),b("b",n,e,t))];case"LessEqual":return[s.lessEqual(b("a",n,e,t),b("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(b("a",n,e,t),b("b",n,e,t))];case"LogicalNot":return[s.logicalNot(b("a",n,e,t))];case"LogicalOr":return[s.logicalOr(b("a",n,e,t),b("b",n,e,t))];case"Select":case"SelectV2":return[s.where(b("condition",n,e,t),b("a",n,e,t),b("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(b("a",n,e,t),b("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qk=(n,e,t,s=ut)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(b("a",n,e,t),b("b",n,e,t),b("transposeA",n,e,t),b("transposeB",n,e,t))];case"Einsum":return[s.einsum(b("equation",n,e,t),...b("tensors",n,e,t))];case"Transpose":return[s.transpose(b("x",n,e,t),b("perm",n,e,t))];case"_FusedMatMul":const[a,r]=b("fusedOps",n,e,t),i=a==="biasadd",o=r==="prelu",l=b("numArgs",n,e,t),u=b("leakyreluAlpha",n,e,t);if(i){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=b("args",n,e,t);return[s.fused.matMul({a:b("a",n,e,t),b:b("b",n,e,t),transposeA:b("transposeA",n,e,t),transposeB:b("transposeB",n,e,t),bias:c,activation:r,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(b("a",n,e,t),b("numLower",n,e,t),b("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zk=(n,e,t,s=ut)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(b("x",n,e,t),b("axis",n,e,t),b("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(b("x",n,e,t),b("mean",n,e,t),b("variance",n,e,t),b("offset",n,e,t),b("scale",n,e,t),b("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(b("x",n,e,t),b("mean",n,e,t),b("variance",n,e,t),b("offset",n,e,t),b("scale",n,e,t),b("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(b("x",n,e,t),b("radius",n,e,t),b("bias",n,e,t),b("alpha",n,e,t),b("beta",n,e,t))];case"Softmax":return[s.softmax(b("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(b("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jk=(n,e,t,s=ut)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:r}=s.raggedGather(b("paramsNestedSplits",n,e,t),b("paramsDenseValues",n,e,t),b("indices",n,e,t),b("outputRaggedRank",n,e,t));return a.concat(r)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:r}=s.raggedRange(b("starts",n,e,t),b("limits",n,e,t),b("splits",n,e,t));return[a,r]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(b("shape",n,e,t),b("values",n,e,t),b("defaultValue",n,e,t),b("rowPartitionTensors",n,e,t),b("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e2=(n,e,t,s=ut)=>{switch(n.op){case"Max":{const o=b("axis",n,e,t),l=b("keepDims",n,e,t);return[s.max(b("x",n,e,t),o,l)]}case"Mean":{const o=b("axis",n,e,t),l=b("keepDims",n,e,t);return[s.mean(b("x",n,e,t),o,l)]}case"Min":{const o=b("axis",n,e,t),l=b("keepDims",n,e,t);return[s.min(b("x",n,e,t),o,l)]}case"Sum":{const o=b("axis",n,e,t),l=b("keepDims",n,e,t);return[s.sum(b("x",n,e,t),o,l)]}case"All":{const o=b("axis",n,e,t),l=b("keepDims",n,e,t);return[s.all(b("x",n,e,t),o,l)]}case"Any":{const o=b("axis",n,e,t),l=b("keepDims",n,e,t);return[s.any(b("x",n,e,t),o,l)]}case"ArgMax":{const o=b("axis",n,e,t);return[s.argMax(b("x",n,e,t),o)]}case"ArgMin":{const o=b("axis",n,e,t);return[s.argMin(b("x",n,e,t),o)]}case"Prod":{const o=b("axis",n,e,t),l=b("keepDims",n,e,t);return[s.prod(b("x",n,e,t),o,l)]}case"Cumprod":{const o=b("axis",n,e,t),l=b("exclusive",n,e,t),u=b("reverse",n,e,t);return[s.cumprod(b("x",n,e,t),o,l,u)]}case"Cumsum":{const o=b("axis",n,e,t),l=b("exclusive",n,e,t),u=b("reverse",n,e,t);return[s.cumsum(b("x",n,e,t),o,l,u)]}case"Bincount":const a=b("x",n,e,t),r=b("weights",n,e,t),i=b("size",n,e,t);return[s.bincount(a,r,i)];case"DenseBincount":{const o=b("x",n,e,t),l=b("weights",n,e,t),u=b("size",n,e,t),c=b("binaryOutput",n,e,t);return[s.denseBincount(o,l,u,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t2=(n,e,t,s=ut)=>{switch(n.op){case"ConcatV2":case"Concat":{const a=b("n",n,e,t),r=b("axis",n,e,t);let i=b("tensors",n,e,t);return i=i.slice(0,a),[s.concat(i,r)]}case"Gather":{const a=b("x",n,e,t),r=b("indices",n,e,t);return[s.gather(a,s.cast(r,"int32"),0)]}case"GatherV2":{const a=b("axis",n,e,t),r=b("batchDims",n,e,t),i=b("x",n,e,t),o=b("indices",n,e,t);return[s.gather(i,s.cast(o,"int32"),a,r)]}case"Reverse":{const a=b("dims",n,e,t),r=[];for(let o=0;o<a.length;o++)a[o]&&r.push(o);const i=b("x",n,e,t);return[s.reverse(i,r)]}case"ReverseV2":{const a=b("axis",n,e,t),r=b("x",n,e,t);return[s.reverse(r,a)]}case"Slice":{const a=b("begin",n,e,t),r=b("size",n,e,t);return[s.slice(b("x",n,e,t),a,r)]}case"StridedSlice":{const a=b("begin",n,e,t),r=b("end",n,e,t),i=b("strides",n,e,t),o=b("beginMask",n,e,t),l=b("endMask",n,e,t),u=b("ellipsisMask",n,e,t),c=b("newAxisMask",n,e,t),h=b("shrinkAxisMask",n,e,t),d=b("x",n,e,t);return[s.stridedSlice(d,a,r,i,o,l,u,c,h)]}case"Pack":return R(()=>{const a=b("axis",n,e,t),r=b("tensors",n,e,t),i=r[0].shape,o=s.squeeze(r[0]).shape,l=r.map(u=>{const c=Ie(u.shape,i);if(!c&&!Ie(s.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,i)});return[s.stack(l,a)]});case"Unpack":{const a=b("axis",n,e,t),r=b("tensor",n,e,t);return s.unstack(r,a)}case"Tile":{const a=b("reps",n,e,t);return[s.tile(b("x",n,e,t),a)]}case"Split":case"SplitV":{const a=b("axis",n,e,t),r=b("numOrSizeSplits",n,e,t),i=b("x",n,e,t);return s.split(i,r,a)}case"ScatterNd":{const a=b("indices",n,e,t),r=b("values",n,e,t),i=b("shape",n,e,t);return[s.scatterND(a,r,i)]}case"GatherNd":{const a=b("x",n,e,t),r=b("indices",n,e,t);return[s.gatherND(a,r)]}case"SparseToDense":{const a=b("sparseIndices",n,e,t),r=b("outputShape",n,e,t),i=b("sparseValues",n,e,t),o=b("defaultValue",n,e,t);return[s.sparseToDense(a,i,r,i.dtype===o.dtype?o:s.cast(o,i.dtype))]}case"TensorScatterUpdate":{const a=b("indices",n,e,t),r=b("values",n,e,t),i=b("tensor",n,e,t);return[s.tensorScatterUpdate(i,a,r)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n2=(n,e,t,s=ut)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:r,emptyRowIndicator:i,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(b("indices",n,e,t),b("values",n,e,t),b("denseShape",n,e,t),b("defaultValue",n,e,t));return[a,r,i,o]}case"SparseReshape":{const{outputIndices:a,outputShape:r}=s.sparse.sparseReshape(b("inputIndices",n,e,t),b("inputShape",n,e,t),b("newShape",n,e,t));return[a,r]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(b("data",n,e,t),b("indices",n,e,t),b("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(b("data",n,e,t),b("indices",n,e,t),b("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s2=(n,e,t,s=ut)=>{switch(n.op){case"FFT":return[s.fft(b("x",n,e,t))];case"IFFT":return[s.ifft(b("x",n,e,t))];case"RFFT":return[s.rfft(b("x",n,e,t))];case"IRFFT":return[s.irfft(b("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a2=(n,e,t,s=ut)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(b("input",n,e,t),b("pattern",n,e,t),b("rewrite",n,e,t),b("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:a,nGramsSplits:r}=s.string.stringNGrams(b("data",n,e,t),b("dataSplits",n,e,t),b("separator",n,e,t),b("nGramWidths",n,e,t),b("leftPad",n,e,t),b("rightPad",n,e,t),b("padWidth",n,e,t),b("preserveShortSequences",n,e,t));return[a,r]}case"StringSplit":{const{indices:a,values:r,shape:i}=s.string.stringSplit(b("input",n,e,t),b("delimiter",n,e,t),b("skipEmpty",n,e,t));return[a,r,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(b("input",n,e,t),b("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r2=(n,e,t,s=ut)=>{switch(n.op){case"Cast":return[s.cast(b("x",n,e,t),b("dtype",n,e,t))];case"ExpandDims":{const a=b("axis",n,e,t);return[s.expandDims(b("x",n,e,t),a)]}case"Squeeze":{const a=b("axis",n,e,t);return[s.squeeze(b("x",n,e,t),a)]}case"Reshape":return[s.reshape(b("x",n,e,t),b("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(b("x",n,e,t),b("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(b("x",n,e,t),b("padding",n,e,t),b("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(b("x",n,e,t),b("padding",n,e,t),b("constantValue",n,e,t))];case"SpaceToBatchND":{const a=b("blockShape",n,e,t),r=b("paddings",n,e,t);return[s.spaceToBatchND(b("x",n,e,t),a,r)]}case"BatchToSpaceND":{const a=b("blockShape",n,e,t),r=b("crops",n,e,t);return[s.batchToSpaceND(b("x",n,e,t),a,r)]}case"DepthToSpace":{const a=b("blockSize",n,e,t),r=b("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(b("x",n,e,t),a,r)]}case"BroadcastTo":return[s.broadcastTo(b("x",n,e,t),b("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(b("s0",n,e,t),b("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tf(n,e,t,s,a=R){const r=((i,o,l)=>{switch(i.category){case"arithmetic":return a(()=>Fk(i,o,l));case"basic_math":return a(()=>_k(i,o,l));case"control":return Mk(i,o,l);case"convolution":return a(()=>Wk(i,o,l));case"creation":return a(()=>Uk(i,o,l));case"dynamic":return Gk(i,o,l);case"evaluation":return a(()=>Hk(i,o,l));case"image":return a(()=>Kk(i,o,l));case"graph":return a(()=>jk(i,o,l));case"logical":return a(()=>Yk(i,o,l));case"matrices":return a(()=>Qk(i,o,l));case"normalization":return a(()=>Zk(i,o,l));case"ragged":return a(()=>Jk(i,o,l));case"reduction":return a(()=>e2(i,o,l));case"slice_join":return a(()=>t2(i,o,l));case"sparse":return a(()=>n2(i,o,l));case"spectral":return a(()=>s2(i,o,l));case"string":return a(()=>a2(i,o,l));case"transformation":return a(()=>r2(i,o,l));case"hash_table":return qk(i,o,l,s);case"custom":const u=hx(i.op);if(u&&u.customExecutor)return u.customExecutor(new Ok(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return Xa(r)?r.then(i=>[].concat(i)):[].concat(r)}class nf{constructor(e={},t={},s={},a={},r){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sf(n,e,t,s){const a=new Set,r=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(n).map(d=>$t(d)[0]));s=s||[];const c=new Set(s.map(d=>$t(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((gs(d)||p2(d)||f2(d))&&i==null&&(i=d,o=i.children.map(p=>p.name).filter(p=>a.has(p))),a.add(d.name),t[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){r.push(d.name);continue}d.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),h.push(p))})}}return{inputs:n,outputs:e,usedNodes:a,missingInputs:r,dynamicNode:i,syncInputs:o}}function i2(n,e){const{usedNodes:t,inputs:s}=e,a=Object.keys(s).map(m=>$t(m)[0]).map(m=>n.nodes[m]),r=n.initNodes||[],i=m=>t.has(typeof m=="string"?m:m.name);function o(m){return[...new Map(m.map(y=>[y.name,y])).values()]}const l=o([...a,...n.weights,...r]).filter(i),u=o([...l,...Object.values(n.nodes)]).filter(i),c=new Map(u.map(m=>[m.name,m])),h={};for(const m of u){h[m.name]=h[m.name]||0;for(const y of m.children)i(y)||(h[y.name]=Number.POSITIVE_INFINITY),h[y.name]=(h[y.name]||0)+1}const d=Object.entries(h).filter(([,m])=>m===0).map(([m])=>m),p=[...d];for(;d.length>0;){const m=d.pop(),y=c.get(m);for(const x of y.children.filter(i))--h[x.name]===0&&(p.push(x.name),d.push(x.name))}const f=p.map(m=>c.get(m)),g=o2(f,l);return l2(g,l),g}function o2(n,e){const t=new Map(n.map(i=>[i.name,i])),s=e.map(i=>i.name),a=new Set(s);for(;s.length>0;){const i=s.pop(),o=t.get(i);for(const l of o.children)!t.has(l.name)||a.has(l.name)||(a.add(l.name),s.push(l.name))}return n.filter(i=>a.has(i.name))}class Rr extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function l2(n,e){const t=new Map(n.map((o,l)=>[o.name,l])),s=new Set(e.map(o=>o.name)),a=o=>s.has(typeof o=="string"?o:o.name),r=new Set(n.map(o=>o.name)),i=o=>r.has(typeof o=="string"?o:o.name);for(const o of n){for(const l of o.children.filter(i)){if(!t.has(l.name))throw new Rr(`Child ${l.name} of node ${o.name} is unreachable.`);if(t.get(o.name)>t.get(l.name))throw new Rr(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!a(o))for(const l of o.inputs){if(!t.has(l.name))throw new Rr(`Input ${l.name} of node ${o.name} is unreachable.`);if(t.get(l.name)>t.get(o.name))throw new Rr(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function u2(n){const e=new Map(n.map((o,l)=>[o.name,l])),t=Number.MAX_SAFE_INTEGER,s=n.map((o,l)=>gs(o)?t:l),a=o=>{const l=s[e.get(o.name)];return l??-1},r=n.map((o,l)=>o.children.map(a).reduce((u,c)=>Math.max(u,c),s[l])),i=new Map;for(let o=0;o<n.length;++o){const l=r[o];if(l===t)continue;const u=n[o],c=n[l];i.has(c.name)||i.set(c.name,[]),i.get(c.name).push(u)}return i}const c2=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),h2=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),d2=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function gs(n){return c2.has(n.op)}function p2(n){return h2.has(n.op)}function f2(n){return d2.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ai{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(a=>a.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new ai(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(r=>r.name).sort(),a=t.map(r=>r.name).sort();return s.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const s=sf(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:i}=s;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){const u=t.map(h=>h.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${a}]`)}const o=i2(this.graph,s),l=u2(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return it(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=s.map(d=>this.graph.nodes[$t(d)[0]]),r=t.map(d=>$t(d)[0]),i=new Set(r);let o=r.map(d=>this.graph.nodes[d]);o.length===0&&(o=this._outputs);const l=this.getCompilationKey(a,o);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,o),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=O().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const c={},h={};return R(()=>{const d=new nf(this.weightMap,c,h,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(y=>{const[x,C]=$t(y,d),w=[];w[C]=e[y],p[x]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(w))});const f=this.getFrozenTensorIds(p),{orderedNodes:g,nodeLiveUntilMap:m}=u;for(const y of g){if(p[y.name])continue;const x=tf(y,p,d,this._resourceManager);if(Xa(x))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);p[y.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(x)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,p,d,f,i,m.get(y.name))}return this.parent==null&&d.dispose(f),t.map(y=>at(y,p,d))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(a=>a.id)));return new Set(t)}checkTensorForDisposal(e,t,s,a,r,i,o){if(!(gs(t)||i.has(e))){for(const l of s[e])l!=null&&(o[l.id]=(o[l.id]||0)+t.children.length);for(const l of t.inputs){if(gs(l))continue;const u=Yp(l.name,s,a);if(u!=null)for(const c of u){if(!c||c.kept||r.has(c.id))continue;const h=o[c.id];h===1?(c.dispose(),delete o[c.id]):h!=null&&o[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,a,r,i){function o(l){return gs(l)||r.has(l.name)}if(!(gs(e)||i==null))for(const l of i){if(o(l))continue;const u=Yp(l.name,t,s);for(const c of u)!c||c.kept||a.has(c.id)||c.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,a={},r={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=O().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const i=new nf(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,i,t,s),l=t.map(d=>at(d,o,i)),u=l.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),h=new Set([...u,...c,...this.weightIds]);return Object.values(o).forEach(d=>{d.forEach(p=>{p&&!p.isDisposed&&!h.has(p.id)&&p.dispose()})}),this.parent==null&&i.dispose(h),l}async executeFunctionAsync(e,t,s){const a=e.reduce((r,i,o)=>(r[this.inputs[o].name]=i,r),{});return this._executeAsync(a,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,a){const r=Object.keys(e),i=r.map(w=>this.graph.nodes[$t(w)[0]]),o=s.map(w=>$t(w)[0]),l=new Set(o);let u=o.map(w=>this.graph.nodes[w]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:h,dynamicNode:d,syncInputs:p}=sf(e,u,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:t.currentContext})),g=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{const[I,N]=$t(w),v=[];v[N]=e[w],g[I]=v});const m={},y=this.getFrozenTensorIds(g),x={};for(;f.length>0;){const w=this.processStack(i,f,t,g,x,y,l,m,c);await Promise.all(w)}d==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const C=u.filter(w=>!gs(w)&&!at(w.name,g,t)).map(w=>w.name);if(C.length>0){let w="";throw d!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${C}] from the provided inputs [${r}]. Consider providing the following inputs: [${h}]. ${w}`)}return g}processStack(e,t,s,a,r,i,o,l,u){const c=[];for(;t.length>0;){const h=t.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&b("isConstant",h.node,a,s)&&([d]=En(h.node.name,s)),a[h.node.name]==null){const p=tf(h.node,a,s,this._resourceManager);d||([d]=En(h.node.name,s));const f=s.currentContext;Xa(p)?c.push(p.then(g=>(a[d]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(g)),s.currentContext=f,this.checkTensorForDisposal(d,h.node,a,s,i,o,l),this.processChildNodes(h.node,t,s,a,r,u),g))):(a[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,a,s,i,o,l),this.processChildNodes(h.node,t,s,a,r,u))}else this.processChildNodes(h.node,t,s,a,r,u)}return c}processChildNodes(e,t,s,a,r,i){e.children.forEach(o=>{const[l]=En(o.name,s);r[l]||!i.has(o.name)||(o.op==="Merge"?o.inputNames.some(u=>!!at(u,a,s))&&(r[l]=!0,t.push({contexts:s.currentContext,node:o})):o.inputNames.every(u=>!!at(u,a,s))&&(r[l]=!0,t.push({contexts:s.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[a]=$t(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const i=r.attrParams.shape.value,o=i.length===s.shape.length&&s.shape.every((l,u)=>i[u]===-1||i[u]===l);M(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&M(s.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const a={};for(const r in e){const i=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[r];i!=null?a[i.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter(s=>{const[a]=$t(s);return this.graph.nodes[a]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,a;const r=(a=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||a===void 0?void 0:a[t];return r!=null?r.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=$t(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class m2{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g2="?tfjs-format=file",y2="model.json";class fx{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=pm){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new m2}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Xa(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const r=this.artifacts.userDefinedMetadata;r.signature!=null&&(s=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}this.signature=s,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const a=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new ai(Qp.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const r=Qp.Instance.transformGraph(e.modelInitializer);this.initializer=new ai(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof gt?[e]:e,s={};return t.forEach((a,r)=>s[this.structuredOutputKeys[r]]=a),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof gt)&&!Array.isArray(e)){const r=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(r!=null)for(const i in r){const o=r[i];o.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[o.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let a=0;return this.inputNodes.reduce((r,i)=>{var o,l,u;const c=(u=(l=(o=this.signature)===null||o===void 0?void 0:o.inputs)===null||l===void 0?void 0:l[i])===null||u===void 0?void 0:u.resourceId;return c!=null?r[i]=this.resourceIdToCapturedInput[c]:r[i]=e[a++],r},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let a=0;a<s.length;a++){const r=s[a],i=t[r];this.resourceIdToCapturedInput[i.resourceId]=e[a]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ce(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function pH(n,e={},t=pm){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=x2(n));const s=new fx(n,e,t);return await s.load(),s}function fH(n){if(n==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(n instanceof Array){const[s,a]=n;if(!s)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in s))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in s))throw new Error("Model JSON is missing 'weightsManifest'");const r=l1(s.weightsManifest),i=u1(s,r,a);e=dp(i)}else if("load"in n)e=n;else if("modelTopology"in n&&"weightSpecs"in n&&"weightData"in n)e=dp(n);else throw new Error("Unknown model format");const t=new fx(e);return t.load(),t}function x2(n){return n.endsWith("/")||(n=n+"/"),`${n}${y2}${g2}`}/** @license See the LICENSE file. */const b2="4.6.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function w2(n,e){return ri(n,e)}function ri(n,e,t=new Map,s=new Set){if(n==null)return null;if(typeof Blob=="function"&&n instanceof Blob)return n.slice();if(s.has(n))throw new Error("Circular references are not supported.");if(t.has(n))return t.get(n);const a=e(n);if(a.recurse&&a.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse)if(aa(n)){const r=Array.isArray(n)?[]:{};s.add(n);for(const i in n){const o=n[i],l=ri(o,e,t,s);r[i]=l}return s.delete(n),n.__proto__&&(r.__proto__=n.__proto__),r}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return t.set(n,a.value),a.value}function C2(n,e=gx){return mx(n,e)}function mx(n,e,t=new Set){const s=n[0];if(t.has(s))throw new Error("Circular references are not supported.");const a=e(n);if(a.recurse&&a.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse)if(aa(s)){const r=Array.isArray(s)?[]:{};t.add(s);for(const i in s){const o=n.map(u=>u[i]),l=mx(o,e,t);r[i]=l}return t.delete(s),r}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return a.value}function gx(n){return n===null?null:aa(n[0])?{value:null,recurse:!0}:{value:n,recurse:!1}}async function yx(n,e){const t=new Map;ri(n,e,t);for(const a of Array.from(t.keys())){const r=t.get(a);if(Xa(r)){const i=await r;t.set(a,i)}}return ri(n,e,t)}function aa(n){let e=!1;if(O().get("IS_BROWSER"))e=n instanceof TextDecoder;else{const{StringDecoder:t}=require("string_decoder");e=n instanceof t}return n!=null&&!ArrayBuffer.isView(n)&&(Array.isArray(n)||typeof n=="object"&&!(n instanceof gt)&&!(n instanceof Promise)&&!e)}function I2(n){return n==null||N2(n)||Array.isArray(n)||typeof n=="object"&&n instanceof gt||fs(n)}function N2(n){return n===null||typeof n!="object"&&typeof n!="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function v2(n){return w2(n,S2)}function S2(n){return n instanceof gt?{value:n.clone(),recurse:!1}:aa(n)?{value:null,recurse:!0}:{value:n,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class xx{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),s=this.get(t);return this.set(t,this.pop()),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Bo extends xx{constructor(){super(Bo.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=this.capacity*2,t=new Array(e),s=this.length();for(let a=0;a<s;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=s}}Bo.INITIAL_CAPACITY=32;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function bx(n){return new k2(n)}function Od(n){return new R2(n)}function T2(n,e){return new wx(n,e)}function $2(n,e=Xn.FAIL){return new z2(n,e)}class tt{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let s=await e.next();for(;!s.done;)t.push(s.value),s=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),s=e(t.value);for(;!t.done&&s;)t=await this.next(),s=e(t.value)}handleErrors(e){return new L2(this,e)}filter(e){return new F2(this,e)}map(e){return new _2(this,e)}mapAsync(e){return new af(this,e)}serialMapAsync(e){return new af(this,e).serial()}flatmap(e){return new P2(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new O2(this,e,t)}columnMajorBatch(e,t=!0,s=gx){return this.rowMajorBatch(e,t).map(r=>C2(r,s))}concatenate(e,t){return new wx(bx([this,e]),t)}take(e){return e<0||e==null?this:new D2(this,e)}skip(e){return e<0||e==null?this:new A2(this,e)}prefetch(e){return new Cx(this,e)}shuffle(e,t){return new V2(this,e,t)}serial(){return new E2(this)}}class k2 extends tt{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:v2(e),done:!1}}}class R2 extends tt{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class E2 extends tt{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class A2 extends tt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Ce(e.value)}return this.upstream.next()}}class D2 extends tt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class O2 extends tt{constructor(e,t,s=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=s,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class F2 extends tt{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ce(e.value)}}}class _2 extends tt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ea(e.value),s=this.transform(e.value),a=ea(s);for(const r of t)gc(r,a)||r.dispose();return{value:s,done:!1}}}class L2 extends tt{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class af extends tt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ea(e.value),s=await this.transform(e.value),a=ea(s);for(const r of t)gc(r,a)||r.dispose();return{value:s,done:!1}}}class Fd extends tt{constructor(){super(),this.outputQueue=new Bo,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class P2 extends Fd{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=ea(e.value),s=this.transform(e.value),a=ea(s);this.outputQueue.pushAll(s);for(const r of t)gc(r,a)||r.dispose();return!0}}class wx extends tt{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){const s=await this.moreIterators.next();if(s.done)return{value:null,done:!0};this.iterator=s.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var Xn;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Xn||(Xn={}));class z2 extends tt{constructor(e,t=Xn.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,s=0;function a(i){return i instanceof tt?{value:i.next().then(l=>(t++,l.done&&s++,l.value)),recurse:!1}:{value:null,recurse:!0}}const r=await yx(this.iterators,a);if(t===s)return{value:null,done:!0};if(s>0)switch(this.mismatchMode){case Xn.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Xn.SHORTEST:return{value:null,done:!0};case Xn.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class Cx extends tt{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new xx(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class V2 extends Cx{constructor(e,t,s){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=yc.alea(s||_t().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class wa{constructor(){this.size=null}batch(e,t=!0){const s=this;M(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let a;return this.size===1/0||this.size==null?a=this.size:t?a=Math.ceil(this.size/e):a=Math.floor(this.size/e),Tt(async()=>(await s.iterator()).columnMajorBatch(e,t,W2),a)}concatenate(e){const t=this;let s;return this.size===1/0||e.size===1/0?s=1/0:this.size!=null&&e.size!=null?s=this.size+e.size:s=null,Tt(async()=>(await t.iterator()).concatenate(await e.iterator()),s)}filter(e){const t=this;let s;return this.size===1/0?s=1/0:s=null,Tt(async()=>(await t.iterator()).filter(a=>R(()=>e(a))),s)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Tt(async()=>(await t.iterator()).map(s=>R(()=>e(s))),this.size)}mapAsync(e){const t=this;return Tt(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Tt(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let s;return this.size!=null&&e>0?s=this.size*e:e===0?s=0:this.size!=null&&(e===void 0||e<0)?s=1/0:s=null,Tt(async()=>{const a=Od(async()=>({value:await t.iterator(),done:!1}));return T2(a.take(e))},s)}skip(e){const t=this;let s;return this.size!=null&&e>=0&&this.size>=e?s=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?s=0:s=null,Tt(async()=>(await t.iterator()).skip(e),s)}shuffle(e,t,s=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,r=yc.alea(t||_t().toString());return Tt(async()=>{let i=r.int32();return s&&(i+=r.int32()),(await a.iterator()).shuffle(e,i.toString())},this.size)}take(e){const t=this;let s;return this.size!=null&&this.size>e?s=e:this.size!=null&&this.size<=e?s=this.size:s=null,Tt(async()=>(await t.iterator()).take(e),s)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}wa.MAX_BUFFER_SIZE=1e4;function Tt(n,e=null){return new class extends wa{constructor(){super(...arguments),this.size=e}async iterator(){return n()}}}function B2(n){return Tt(async()=>bx(n),n.length)}function M2(n){if(!aa(n))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(n))for(let t=0;t<n.length;t++)e=e==null?n[t].size:Math.min(e,n[t].size);else if(n instanceof Object)for(const t in n)e=e==null?n[t].size:Math.min(e,n[t].size);return Tt(async()=>{const t=await yx(n,s=>{if(s instanceof wa)return{value:s.iterator(),recurse:!1};if(aa(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return $2(t,Xn.SHORTEST)},e)}function W2(n){if(n===null)return null;const e=n[0];return I2(e)?{value:U2(n),recurse:!1}:{value:null,recurse:!0}}function U2(n){if(n.length===0)throw new Error("Can't make a batch of zero elements.");return n[0]instanceof gt?Fn(n):Ts(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Ix extends wa{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(a=>(a.endsWith("\r")&&(a=a.slice(0,-1)),a))}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */const Er='"',_a=Symbol("out"),rf=Symbol("field"),Ar=Symbol("quote"),al=Symbol("quoteafterquote"),of=Symbol("quoteinquote");class Nx extends wa{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&M(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((a,r)=>(a[r]=a[r]+1||1,a),{}),s=Object.keys(t).filter(a=>t[a]>1);if(M(s.length===0,()=>"Duplicate column names found: "+s.toString()),this.columnConfigs){for(const a of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(a)===-1)throw new Error('The key "'+a+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");const s=t.value;return this.parseRow(s,!1)}else return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Ix(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(M(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){const t=this.parseRow(e),s={},a={};for(let r=0;r<this.fullColumnNames.length;r++){const i=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!o)){const l=t[r];let u=null;if(l==="")if(o&&o.default!==void 0)u=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);u=void 0}else{const c=Number(l);if(isNaN(c))o&&o.dtype==="bool"?u=this.getBoolean(l):u=l;else if(!o||!o.dtype)u=c;else switch(o.dtype){case"float32":u=c;break;case"int32":u=Math.floor(c);break;case"bool":u=this.getBoolean(l);break;default:u=c}}o&&o.isLabel?a[i]=u:s[i]=u}}return Object.keys(a).length===0?s:{xs:s,ys:a}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){const s=[];let a=0;const r=e.length;let i=_a;for(let o=0;o<r;o++)switch(i){case _a:switch(e.charAt(o)){case Er:a=o+1,i=Ar;break;case this.delimiter:if(a=o+1,this.delimiter===" "&&this.delimWhitespace)break;s.push(""),i=_a;break;default:i=rf,a=o;break}break;case rf:switch(e.charAt(o)){case this.delimiter:s.push(e.substring(a,o)),i=_a,a=o+1;break}break;case Ar:switch(e.charAt(o)){case Er:i=al;break}break;case al:switch(e.charAt(o)){case this.delimiter:s.push(e.substring(a,o-1)),i=_a,a=o+1;break;case Er:i=Ar;break;default:i=of;break}break;case of:switch(e.charAt(o)){case Er:i=Ar;break}break}if(i===al?s.push(e.substring(a,r-1)):s.push(e.substring(a)),t&&s.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${s}`);return s}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class _d extends tt{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!O().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new _d(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(s){throw new Error(`Error thrown while initializing video stream: ${s.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const s=await this.getAudioData();if(this.includeSpectrogram){const a=this.flattenQueue(s.freqDataQueue);e=this.getTensorFromAudioDataArray(a,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const a=this.flattenQueue(s.timeDataQueue);t=this.getTensorFromAudioDataArray(a,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let s=0;return new Promise(a=>{const r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&a({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++s===this.numFrames&&(clearInterval(r),a({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,s=new Float32Array(e.length*t);return e.forEach((a,r)=>s.set(a,r*t)),s}getTensorFromAudioDataArray(e,t){const s=new Float32Array(B(t));return s.set(e,s.length-e.length),Ts(s,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Ld extends tt{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=ja([0],"int32"),this.webcamConfig.centerCrop){const s=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,a=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-s)/2,i=(1-a)/2,o=r+s,l=a+i;this.cropBox=pp([i,r,l,o],[1,4])}else this.cropBox=pp([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!O().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const s=new Ld(e,t);return await s.start(),s}async start(){this.webcamConfig.facingMode&&M(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Sg(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return R(()=>{const t=_n(te(e,"float32"),0);let s;s=mn.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const a=s.shape;return G(s,a.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class vx{}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Sx extends tt{split(e){return new G2(this,e)}}class G2 extends Sx{constructor(e,t){super(),this.upstream=e,this.impl=new H2(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class H2 extends Fd{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const s of t.slice(0,-1))this.outputQueue.push(s);return this.carryover=t[t.length-1],!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class j2 extends tt{decodeUTF8(){return new X2(this)}}class X2 extends Sx{constructor(e){super(),this.upstream=e,this.impl=new q2(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class q2 extends Fd{constructor(e){if(super(),this.upstream=e,O().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=require("string_decoder");this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t;if(e.done)return!1;t=e.value;let s;return O().get("IS_BROWSER")?s=this.decoder.decode(t,{stream:!0}):s=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(s),!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Tx extends j2{constructor(e,t={}){super(),this.file=e,this.options=t,M(e instanceof Uint8Array||(O().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,s)=>{const a=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,a)));else{const r=new FileReader;r.onload=o=>{let l=r.result;if(l instanceof ArrayBuffer&&(l=new Uint8Array(l)),!(l instanceof Uint8Array))return s(new TypeError("FileReader returned unknown type."));t(l)},r.onabort=o=>s(new Error("Aborted")),r.onerror=o=>s(new Error(o.type));const i=this.file.slice(this.offset,a);r.readAsArrayBuffer(i)}this.offset=a}),done:!1}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */async function K2(n,e={},t){let s,a;typeof n=="string"?s=n:(s=n.url,a=Y2(n));const r=await(t||c1)(s,a);if(r.ok){const i=new Uint8Array(await r.arrayBuffer());return new Tx(i,e)}else throw new Error(r.statusText)}const Y2=n=>({method:n.method,headers:n.headers,body:n.body,mode:n.mode,credentials:n.credentials,cache:n.cache,redirect:n.redirect,referrer:n.referrer,integrity:n.integrity});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function $x(n){return typeof n=="string"&&n.slice(0,7)==="file://"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class kx extends vx{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if($x(this.input)&&O().get("IS_NODE")){const e=require("fs");this.input=e.readFileSync(this.input.slice(7))}return new Tx(this.input,this.options)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Rx extends vx{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return $x(this.url)?new kx(this.url,this.fileOptions).iterator():K2(this.url,this.fileOptions)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function Q2(n,e={}){return new Nx(new Rx(n),e)}function Z2(n){const e=Od(n);return Tt(async()=>e)}function J2(n){return Tt(async()=>{const e=await n();return Od(()=>e.next())})}async function eR(n,e){return Ld.create(n,e)}async function tR(n){return _d.create(n)}/** @license See the LICENSE file. */const Ex="4.6.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH=Object.freeze(Object.defineProperty({__proto__:null,CSVDataset:Nx,Dataset:wa,FileDataSource:kx,TextLineDataset:Ix,URLDataSource:Rx,array:B2,csv:Q2,func:Z2,generator:J2,microphone:tR,version_data:Ex,webcam:eR,zip:M2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ne(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&M(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nR=Yl;class Mo extends fm{nextDataId(){return Mo.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new mm(this,hn())}write(e,t,s){this.firstUse&&(this.firstUse=!1,O().get("IS_NODE")&&ua(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:s,refCount:1}),a}makeTensorInfo(e,t,s){let a;if(t==="string"&&s!=null&&s.length>0&&Ys(s[0])){const r=s.map(i=>ws(i));a=this.write(r,e,t)}else a=this.write(s,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const a=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return Ln(a,r)}return h1(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(a=>la(a));return we(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(e.shape,e.dtype,t)}makeOutput(e,t,s){return hn().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=_t();return e(),{kernelMs:_t()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ne([e],"where");const t=this.readSync(e.dataId);return nR(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Mo.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ax(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const sR=n=>{const{x:e}=n.inputs,t=n.backend;ne(e,"abs");let s=new Float32Array(B(e.shape));const a=t.data.get(e.dataId).values;return s=Ax(a),t.makeOutput(s,e.shape,e.dtype)},aR={kernelName:Ql,backendName:"cpu",kernelFunc:sR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function He(n){return(e,t,s,a,r)=>{const i=Fe(e,t),o=i.length,l=ie(i),u=B(i),c=pt(r,u),h=e.length,d=t.length,p=ie(e),f=ie(t),g=Zs(e,i),m=Zs(t,i);if(g.length+m.length===0)for(let y=0;y<c.length;++y)c[y]=n(s[y%s.length],a[y%a.length]);else for(let y=0;y<c.length;++y){const x=fa(y,o,l),C=x.slice(-h);g.forEach(v=>C[v]=0);const w=xn(C,h,p),I=x.slice(-d);m.forEach(v=>I[v]=0);const N=xn(I,d,f);c[y]=n(s[w],a[N])}return[c,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rt(n){const{inputs:e,backend:t}=n,{real:s,imag:a}=e,r=t.data.get(s.dataId).values,i=t.data.get(a.dataId).values,o=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(o.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",r),imag:t.makeTensorInfo(a.shape,"float32",i)},o}const rR={kernelName:gm,backendName:"cpu",kernelFunc:Rt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ii(n,e,t="float32"){if(t==="complex64"){const a=ii(n,e,"float32"),r=ii(n,e,"float32");return Rt({inputs:{real:a,imag:r},backend:n})}const s=At(B(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const iR={kernelName:Cu,backendName:"cpu",kernelFunc:Nn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rs(n){const{inputs:e,backend:t}=n,{input:s}=e,a=t.data.get(s.dataId).complexTensorInfos.real,r=t.data.get(a.dataId).values;return t.makeTensorInfo(a.shape,a.dtype,r)}const oR={kernelName:ym,backendName:"cpu",kernelFunc:Rs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dx(n,e,t,s){if(s==="int32"){const a=Int32Array.from(n);return[e,"int32",a]}if(s==="bool"){const a=mo([0],t),[r,i]=He((o,l)=>o!==l?1:0)(e,[],n,a,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function ss(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return Nn({inputs:{x:a},backend:t});const c=ii(t,a.shape,a.dtype),h=ss({inputs:{x:a},backend:t,attrs:{dtype:"float32"}}),d=Rt({inputs:{real:h,imag:c},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),d}if(a.dtype==="complex64"){const c=Rs({inputs:{input:a},backend:t}),h=ss({inputs:{x:c},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(c),h}if(!xm(a.dtype,r)){const c=Nn({inputs:{x:a},backend:t});return{dataId:c.dataId,shape:c.shape,dtype:r}}const i=t.data.get(a.dataId).values,[o,l,u]=Dx(i,a.shape,a.dtype,r);return t.makeTensorInfo(o,l,u)}const lR={kernelName:ou,backendName:"cpu",kernelFunc:ss};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qe(n,e,t,s){return t==null?({inputs:a,backend:r})=>{const{a:i,b:o}=a,l=r;ne([i,o],n);const u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,h=i.dtype==="string"?Pn(u):u,d=i.dtype==="string"?Pn(c):c,p=s||i.dtype,[f,g]=e(i.shape,o.shape,h,d,p);return l.makeTensorInfo(g,p,f)}:({inputs:a,backend:r})=>{const{a:i,b:o}=a,l=r;if(i.dtype==="complex64"||o.dtype==="complex64"){const u=ss({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,g=ss({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),m=l.data.get(g.dataId),y=m.complexTensorInfos.real,x=m.complexTensorInfos.imag,C=l.data.get(y.dataId).values,w=l.data.get(x.dataId).values,[I,N,v]=t(i.shape,o.shape,p,f,C,w),S=l.makeTensorInfo(v,"float32",I),$=l.makeTensorInfo(v,"float32",N),k=Rt({inputs:{real:S,imag:$},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(S),l.disposeIntermediateTensorInfo($),k}else{const u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,h=s||i.dtype,[d,p]=e(i.shape,o.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function Pd(n){return(e,t,s,a,r,i)=>{const o=Fe(e,t),l=B(o),u=o.length,c=ie(o),h=pt("float32",l),d=pt("float32",l),p=Zs(e,o),f=Zs(t,o),g=Ln(s,a),m=Ln(r,i),y=e.length,x=ie(e),C=t.length,w=ie(t);if(p.length+f.length===0)for(let I=0;I<h.length;I++){const N=I%g.length,v=I%m.length,S=n(g[N*2],g[N*2+1],m[v*2],m[v*2+1]);h[I]=S.real,d[I]=S.imag}else for(let I=0;I<h.length;I++){const N=fa(I,u,c),v=N.slice(-y);p.forEach(P=>v[P]=0);const S=xn(v,y,x),$=N.slice(-C);f.forEach(P=>$[P]=0);const k=xn($,C,w),E=n(g[S*2],g[S*2+1],m[k*2],m[k*2+1]);h[I]=E.real,d[I]=E.imag}return[h,d,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ox=He((n,e)=>n+e),uR=Pd((n,e,t,s)=>({real:n+t,imag:e+s})),ra=Qe(xi,Ox,uR),cR={kernelName:xi,backendName:"cpu",kernelFunc:ra};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zd(n,e,t,s,a){const r=B(s),i=At(a,t);for(let o=0;o<n.length;o++){const l=n[o];if(l<0)throw new Error("Input x must be non-negative!");l>=a||(r>0?i[l]+=e[o]:i[l]+=1)}return i}function Fx(n,e,t,s=!1){const a=n.shape[0],r=n.shape[1],i=we([a,t],e.dtype);for(let o=0;o<a;o++)for(let l=0;l<r;l++){const u=n.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(s?i.set(1,o,u):e.size>0?i.set(i.get(o,u)+e.get(o,l),o,u):i.set(i.get(o,u)+1,o,u))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _x=He((n,e)=>n&e),hR=Qe(xc,_x),dR={kernelName:xc,backendName:"cpu",kernelFunc:hR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tn(n){return(e,t,s)=>{const a=je(t,e.length);for(let r=0;r<e.length;++r)a[r]=n(e[r],s);return a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ve(n,e,t){const s=Tn(e);return us(n,s,t)}function us(n,e,t){return({inputs:s,attrs:a,backend:r})=>{const{x:i}=s;ne(i,n);const o=r,l=o.data.get(i.dataId).values;let u;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Pn(l)}else u=l;const c=t||i.dtype,h=e(u,c,a);return o.makeTensorInfo(i.shape,c,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lx=Tn(n=>Math.ceil(n)),pR=us(vi,Lx),fR={kernelName:vi,backendName:"cpu",kernelFunc:pR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Px(n,e,t,s){const a=je(t,B(e));if(s&&t!=="string"){let r=0;n.forEach(i=>{const o=B(i.shape);a.set(i.vals,r),r+=o})}else{let r=0;n.forEach(i=>{const o=t==="string"?Pn(i.vals):i.vals;let l=0;for(let u=0;u<i.shape[0];++u){const c=u*e[1]+r;for(let h=0;h<i.shape[1];++h)a[c+h]=o[l++]}r+=i.shape[1]})}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zx=He((n,e)=>n===e?1:0),Vx=Qe(bc,zx,null,"bool"),mR={kernelName:bc,backendName:"cpu",kernelFunc:Vx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bx=Tn(n=>Math.exp(n)),Mx=us(Ai,Bx,"float32"),gR={kernelName:Ai,backendName:"cpu",kernelFunc:Mx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wx=Tn(n=>Math.expm1(n)),yR=us(Di,Wx),xR={kernelName:Di,backendName:"cpu",kernelFunc:yR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ux=Tn(n=>Math.floor(n)),bR=us(Oi,Ux),wR={kernelName:Oi,backendName:"cpu",kernelFunc:bR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gx=He((n,e)=>Math.floor(n/e)),CR=Qe(Fi,Gx,null,"int32"),IR={kernelName:Fi,backendName:"cpu",kernelFunc:CR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hx(n,e,t,s,a,r,i,o,l){const u=we([s,r],t);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<a;p++){const f=n[c*a+p];d+=f*i[p],h.push(f)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let p=0;p<r;p++)u.values[c*r+p]=e.get(...e.indexToLoc(d*r+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jx(n,e,t){const s=we(t,n.dtype);for(let a=0;a<s.size;++a){const i=s.indexToLoc(a).slice(),o=i[0],l=i[2],u=e.locToIndex([o,l]);i[2]=e.values[u];const c=n.locToIndex(i);0<=c&&c<n.values.length&&(s.values[a]=n.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xx=He((n,e)=>n>e?1:0),NR=Qe(wc,Xx,null,"bool"),vR={kernelName:wc,backendName:"cpu",kernelFunc:NR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qx=He((n,e)=>n>=e?1:0),SR=Qe(_i,qx,null,"bool"),TR={kernelName:_i,backendName:"cpu",kernelFunc:SR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kx=He((n,e)=>n<e?1:0),$R=Qe(Cc,Kx,null,"bool"),kR={kernelName:Cc,backendName:"cpu",kernelFunc:$R};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yx=He((n,e)=>n<=e?1:0),RR=Qe(Ic,Yx,null,"bool"),ER={kernelName:Ic,backendName:"cpu",kernelFunc:RR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qx(n,e,t){const s=(e-n)/(t-1),a=At(t,"float32");a[0]=n;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zx=Tn(n=>Math.log(n)),AR=us(Bi,Zx),DR={kernelName:Bi,backendName:"cpu",kernelFunc:AR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jx(n,e,t,s){const a=pt(s,B(t));for(let r=0;r<a.length;++r){const i=r*e;let o=n[i];for(let l=0;l<e;++l){const u=n[i+l];(Number.isNaN(u)||u>o)&&(o=u)}a[r]=o}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eb=He((n,e)=>Math.max(n,e)),OR=Qe(Mi,eb),FR={kernelName:Mi,backendName:"cpu",kernelFunc:OR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tb=He((n,e)=>Math.min(n,e)),_R=Qe(Wi,tb),LR={kernelName:Wi,backendName:"cpu",kernelFunc:_R};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vd=He((n,e)=>n*e),PR=Pd((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),Wo=Qe(Gi,Vd,PR),zR={kernelName:Gi,backendName:"cpu",kernelFunc:Wo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nb(n,e,t){const s=ls(-1,t);return Vd([],e,s,n,t)}function VR(n){const{inputs:e,backend:t}=n,{x:s}=e;ne(s,"neg");const a=t.data.get(s.dataId).values,[r,i]=nb(a,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,r)}const BR={kernelName:Fu,backendName:"cpu",kernelFunc:VR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sb=He((n,e)=>n!==e?1:0),MR=Qe(Nc,sb,null,"bool"),WR={kernelName:Nc,backendName:"cpu",kernelFunc:MR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bd(n,e,t,s,a){const r=e.length,i=B(e),o=ie(e),l=ie(a),u=pt(t,B(a));for(let c=0;c<i;++c){const h=fa(c,r,o),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=xn(d,r,l);u[p]=n[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nt(n){const{inputs:e,attrs:t,backend:s}=n,{x:a}=e,{perm:r}=t;ne(a,"transpose");const i=a.shape.length,o=new Array(i);for(let h=0;h<o.length;h++)o[h]=a.shape[r[h]];const l=s.data.get(a.dataId).values,u=Bd(l,a.shape,a.dtype,r,o);return{dataId:s.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const UR={kernelName:ac,backendName:"cpu",kernelFunc:Nt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ab(n,e,t,s){const[a,r]=nt(n,s),i=Ht(e,"int32"),o=At(B(a),i),l=B(r);for(let u=0;u<o.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=t[c+d];o[u]=h}return{outVals:o,outShape:a,outDtype:i}}function GR(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,keepDims:i}=s;ne(a,"prod");const o=a.shape.length,l=me(r,a.shape),u=Be(l,o);let c=l,h=a;const d=[];u!=null&&(h=Nt({inputs:{x:a},backend:t,attrs:{perm:u}}),d.push(h),c=Ue(c.length,o));const p=t.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=ab(h.shape,h.dtype,p,c);let y=g;return i&&(y=ot(g,l)),d.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(y,m,f)}const HR={kernelName:Mu,backendName:"cpu",kernelFunc:GR};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n,e,t){n.forEach((s,a)=>{if(s<0||s>=t){const r=fa(a,e.length,ie(e)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${t})`)}})}function XR(n,e){for(let t=0;t<n.length;++t){const s=n[t],a=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>a)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function qR(n,e,t,s){const a=[];let r=0;const i=e.length-1+t.length,o=new Array(i).fill(null).map(()=>[0]);XR(t,s);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let h=1;h<l+1;++h)o[u].push(h*c)}for(let u=0;u<n.length;++u){let c=n[u],h=n[u]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const g=o[f],m=g[g.length-1]-p[c];for(let y=c;y<h;++y)o[f].push(p[y+1]+m)}c=p[c],h=p[h]}h!==c&&(a.push([c,h]),r+=h-c)}return{outSplits:o,valueSlices:a,numValues:r}}function KR(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,a=je("int32",s);e.push(a),n[t].forEach((r,i)=>a[i]=r)}return e}function lf(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function YR(n,e,t,s,a,r){const i=lf(e,2)[1],o=lf(r,2)[1];let l=0;for(const u of t)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)a[l*o+h]=n[c*i+h];++l}}function QR(n,e,t,s,a){const r=e.slice();r[0]=a;const i=je(t,B(r)),o=n.length,l=o===0?0:o/e[0];return YR(n,e,s,l,i,r),[i,r]}function rb(n,e,t,s,a,r,i,o){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(jR(r,i,l),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=qR(r,i,n,u),p=KR(c),f=QR(t,s,a,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uf=2147483647;function ib(n,e,t,s,a,r,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=e.length===0,l=a.length===0,u=i.length===0,c=[];o||c.push(e[0]),l||c.push(a[0]),u||c.push(i[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=je("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const y=o?n[0]:n[m],x=l?s[0]:s[m],C=u?r[0]:r[m];if(C===0)throw new Error("Requires delta != 0");let w;if(C>0&&x<y||C<0&&x>y)w=0;else if(w=Math.ceil(Math.abs((x-y)/C)),w>uf)throw new Error(`Requires ((limit - start) / delta) <= ${uf}`);d[m+1]=d[m]+w}const p=d[h],f=je(t,p);let g=0;for(let m=0;m<h;++m){const y=d[m+1]-d[m];let x=o?n[0]:n[m];const C=u?r[0]:r[m];for(let w=0;w<y;++w)f[g++]=x,x+=C}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Mt=Jt;class oi{constructor(e,t,s,a,r,i,o,l,u,c){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=a,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Lg(c),this.raggedRank=Pg(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Mt.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Mt.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Mt.VALUE_ROWIDS:return oi.getMaxWidthValueRowID(t);case Mt.ROW_SPLITS:return oi.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Mt[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let a=0;a<t-1;++a){const r=e[a+1]-e[a];r>s&&(s=r)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,a=e[0],r=0;for(let i=1;i<t;++i){const o=e[i];o!==a&&(a=o,r=Math.max(i-s,r),s=i)}return Math.max(t-s,r)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return hf(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;zg(s,t);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=_g(this.raggedRank,a,t);i[0]<0&&(i[0]=e);for(let o=1;o<=this.raggedRank;++o)i[o]<0&&(i[o]=this.getMaxWidth(o));return i}calculateFirstParentOutputIndex(e,t,s){const a=Math.min(e,s),r=[];let i=0;for(let o=0;o<a;++o,i+=t)r.push(i);for(let o=a;o<e;++o)r.push(-1);return M(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,s,a){const r=e.length,i=[];for(let o=0;o<r-1;++o){const l=e[o+1]-e[o];let u=Math.min(a,l),c=t[o];c===-1&&(u=0);for(let h=0;h<u;++h)i.push(c),c+=s;for(let h=0;h<l-u;++h)i.push(-1)}if(r>0&&i.length!==e[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,s,a){const r=e.length,i=[];if(r===0)return[];let o=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let u=t[l];i.push(u);for(let c=1;c<r;++c){const h=e[c];if(h===l)u>=0&&(++o,o<a?u+=s:u=-1);else{if(o=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);u=t[h]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,s,a){const r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case Mt.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,s,a);case Mt.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,s,a);default:throw new Error(`Unsupported partition type: ${Mt[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Mt.FIRST_DIM_SIZE:return e[0];case Mt.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Mt.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Mt[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),a=new Array(this.raggedRank+1);a[a.length-1]=1;for(let l=a.length-2;l>=0;--l)a[l]=a[l+1]*s[l+1];const r=hf(s,!1),i=je(this.valuesDType,B(r));if(a[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,a[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,a[u],s[u]);this.setOutput(this.raggedRank,l,i,r)}return[r,i]}setOutput(e,t,s,a){if(s.length===0)return;const r=this.values,i=s;let o=a.slice();o=o.slice(e+1);const l=B(o),u=t.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const f=this.defaultValueShape;R(()=>{const g=G(c,f);c=Zf(g,o).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=u;++f){let g=f<u?t[f]:-1;if(g===p){++p;continue}if(d<p){const m=r.subarray(h*l),y=i.subarray(d*l),x=(p-d)*l;cf(y,m,x)}if(f>=u){const m=s.length;g=Math.floor(m/l)}if(g>p)if(this.defaultValue.length===1)i.subarray(p*l,g*l).fill(this.defaultValue[0]),p=g;else for(;g>p;){const m=i.slice(p*l);cf(m,c,l),++p}g<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function cf(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function hf(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function ob(n,e,t,s,a,r,i,o,l,u){return new oi(n,e,t,s,a,r,i,o,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lb(n,e,t,s){const a=n===e,r=n<e&&t<0,i=e<n&&t>1;if(a||r||i)return At(0,s);const o=Math.abs(Math.ceil((e-n)/t)),l=At(o,s);e<n&&t===1&&(t=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ub=Tn(n=>1/Math.sqrt(n)),ZR=us(Qi,ub),JR={kernelName:Qi,backendName:"cpu",kernelFunc:ZR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bs(n,e,t,s,a,r,i,o,l,u){const c=[s/a,a],h=n.values,d=e.values;if(s===0)return we(t,e.dtype);const p=l instanceof dt?l:we(c,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<r;f++){const g=[];let m=0;for(let y=0;y<i;y++){const x=h[f*i+y];g.push(x),m+=x*o[y]}if(m<0||m>=s/a)throw new Error(`Invalid indices: ${g} does not index into ${t}`);for(let y=0;y<a;y++)u?p.values[m*a+y]+=d[f*a+y]:p.values[m*a+y]=e.rank===0?d[0]:d[f*a+y]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eE=Tn(n=>1/(1+Math.exp(-n))),cb=ve(Ji,n=>1/(1+Math.exp(-n))),tE={kernelName:Ji,backendName:"cpu",kernelFunc:cb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hb(n,e,t,s,a){const r=Fc(s,e,t),i=B(t),o=ie(s);if(r){const h=_c(e,o);return a==="string"?n.slice(h,h+i):n.subarray(h,h+i)}const l=a==="string"?Pn(n):n,u=we(s,a,l),c=we(t,a);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,g)=>f+e[g]);c.set(u.get(...p),...d)}return a==="string"?ay(c.values):c.values}function Es(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{begin:r,size:i}=s;ne(a,"slice");const[o,l]=yo(a,r,i);Dc(a,o,l);const u=t.data.get(a.dataId).values,c=hb(u,o,l,a.shape,a.dtype);return t.makeTensorInfo(l,a.dtype,c)}const nE={kernelName:Yu,backendName:"cpu",kernelFunc:Es};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function db(n,e,t,s,a,r,i){const o=e[0],l=r[0],u=new Array(l),c=new Array(o),h=e[1];if(l===0){if(o!==0)throw new Error(Hg(o));const m=je(t,0),y=je(a,0);return[m,[0,h],y,u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let m=0;m<o;++m){const y=n[m*h];if(y<0)throw new Error(jg(m,y));if(y>=l)throw new Error(Xg(m,y,l));++f[y],d=d&&y>=p,p=y}let g=!0;for(let m=0;m<l;++m){const y=f[m]===0;u[m]=y,g=g&&!y,f[m]=Math.max(f[m],1),m>0&&(f[m]+=f[m-1])}if(g&&d){const m=n,y=s;for(let x=0;x<o;++x)c[x]=x;return[m,[o,h],y,u,c]}else{const m=f[l-1],y=je(t,m*h),x=je(a,m),C=new Array(l).fill(0);for(let w=0;w<o;++w){const I=n[w*h],N=C[I],v=(I===0?0:f[I-1])+N;C[I]++;for(let S=0;S<h;++S)y[v*h+S]=n[w*h+S];x[v]=s[w],c[w]=v}for(let w=0;w<l;++w)if(C[w]===0){const N=w===0?0:f[w-1];y[N*h+0]=w;for(let v=1;v<h;++v)y[N*h+v]=0;x[N]=i}return[y,[m,h],x,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pb(n,e,t,s,a){const r=B(s),i=e[0],o=a.length,l=[];let u=1,c=-1;for(let m=0;m<o;++m){const y=a[m];if(y===-1){if(c!==-1)throw new Error(qg(c,m));c=m,l.push(1)}else{if(y<0)throw new Error(Kg(m,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error(Yg());const m=Math.trunc(r/u);if(u*m!==r)throw new Error(Qg(s,l));l[c]=m}if(B(l)!==r)throw new Error(Zg(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let m=d-2;m>=0;--m)p[m]=p[m+1]*s[m+1]}const f=[];if(o>0){f[o-1]=1;for(let m=o-2;m>=0;--m)f[m]=f[m+1]*l[m+1]}const g=je(t,i*o);for(let m=0;m<i;++m){let y=0;for(let x=0;x<d;++x)y+=n[m*d+x]*p[x];for(let x=0;x<o;++x)g[m*o+x]=Math.trunc(y/f[x]),y%=f[x]}return[g,[i,o],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Md(n,e,t,s,a,r=!1,i=0){const o=s.length,l=[e[0],n.length/e[0]],u=l[1],h=o>0?a[o-1]+1:0;if(h<0)throw new Error(yl());const d=e.slice();d[0]=h;const p=d.reduce((C,w)=>C*w,1),f=je(t,p);if(o===0)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(yl());let g=0,m=1,y=0,x=a[g];for(;;){let C=0;if(m<o){if(C=a[m],x===C){++m;continue}if(x>=C)throw new Error(Jg())}if(x<0||x>=h)throw new Error(ey(x,h));x>y&&f.fill(i,y*u,x*u);for(let w=g;w<m;++w){const I=s[w];if(I<0||I>=l[0])throw new Error(ty(w,s[w],l[0]));for(let N=0;N<u;N++)f[x*u+N]+=n[I*u+N]}if(r)for(let w=0;w<u;w++)f[x*u+w]/=m-g;if(g=m,++m,y=x+1,x=C,m>o)break}return y<h&&f.fill(i,y*u,h*u),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sE=Tn(n=>Math.sqrt(n)),aE=ve(ro,n=>Math.sqrt(n)),rE={kernelName:ro,backendName:"cpu",kernelFunc:aE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fb=He((n,e)=>{const t=n-e;return t*t}),iE=Qe(io,fb),oE={kernelName:io,backendName:"cpu",kernelFunc:iE};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mb=Tn((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:a}=e;return n.replace(new RegExp(t,s?"g":""),a)}),lE=us(vc,mb),uE={kernelName:vc,backendName:"cpu",kernelFunc:lE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gb(n,e,t,s){const a=we(n,e.dtype);for(let r=0;r<a.size;r++){const i=a.indexToLoc(r),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*t[l]+s[l];a.set(e.get(...o),...i)}return a}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cE{constructor(e,t,s,a,r,i){this.separator=ws(e),this.nGramWidths=t,this.leftPad=ws(s),this.rightPad=ws(a),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,a,r,i){for(let o=0;o<r;++o){const l=this.getPadWidth(i),u=Math.max(0,l-o),c=Math.max(0,l-(r-(o+1))),h=i-(u+c),d=t+(u>0?0:o-l);let p=0;p+=u*this.leftPad.length;for(let x=0;x<h;++x)p+=e[d+x].length;p+=c*this.rightPad.length;const f=u+c+h-1;p+=f*this.separator.length,s[a+o]=new Uint8Array(p);const g=s[a+o];let m=0;const y=x=>x.forEach(C=>g[m++]=C);for(let x=0;x<u;++x)y(this.leftPad),y(this.separator);for(let x=0;x<h-1;++x)y(e[d+x]),y(this.separator);if(h>0){y(e[d+h-1]);for(let x=0;x<c;++x)y(this.separator),y(this.rightPad)}else{for(let x=0;x<c-1;++x)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){const s=e.length,a=t.length;if(a>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<a;++u){let c=t[u]>=l;if(c=c&&t[u]<=s,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${l}, ${s}]`);l=t[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const r=a-1,i=je("int32",a);if(s===0||a===0){const l=new Array(s);for(let u=0;u<=r;++u)i[u]=0;return[l,i]}i[0]=0;for(let l=1;l<=r;++l){const u=t[l]-t[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&c===0&&(c=1),i[l]=i[l-1]+c}const o=new Array(i[r]);for(let l=0;l<r;++l){const u=t[l];let c=i[l];if(this.nGramWidths.forEach(h=>{const d=t[l+1]-t[l],p=this.getNumNGrams(d,h);this.createNGrams(e,u,o,c,p,h),c+=p}),this.preserveShort&&c===i[l]){const h=t[l+1]-t[l];if(h===0)continue;const d=h+2*this.padWidth,p=1;this.createNGrams(e,u,o,c,p,d)}}return[o,i]}}function yb(n,e,t,s,a,r,i,o){return new cE(t,s,a,r,i,o).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hE(n,e,t,s){if(!n.length)return;if(e.length===0){for(let r=0;r<n.length;++r)s.push(n.subarray(r,r+1));return}if(e.length===1){const r=e[0];let i=n.indexOf(r);for(;i!==-1;){const o=n.subarray(0,i);(!t||o.length!==0)&&s.push(o),n=n.subarray(i+1),i=n.indexOf(r)}(!t||n.length!==0)&&s.push(n);return}let a=0;for(let r=0;r<n.length+1;r++)if(r===n.length||e.indexOf(n[r])!==-1){const i=n.subarray(a,r);(!t||i.length!==0)&&s.push(i),a=r+1}}function xb(n,e,t){const s=n.length,a=[];let r=0,i=0;const o=new Array(s);for(let d=0;d<s;++d){const p=a.length;hE(n[d],e,t,a);const f=a.length-p;o[d]=f,r+=f,i=Math.max(i,f)}const l=je("int32",r*2),u=new Array(r),c=[s,i];let h=0;for(let d=0;d<s;++d)for(let p=0;p<o[d];++p)l[h*2]=d,l[h*2+1]=p,u[h]=a[h],++h;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(n,e){const t=je("int32",n.length);for(let s=0;s<n.length;++s)t[s]=d1(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wb=He((n,e)=>n-e),dE=Pd((n,e,t,s)=>({real:n-t,imag:e-s})),Wd=Qe(lo,wb,dE),pE={kernelName:lo,backendName:"cpu",kernelFunc:Wd};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cb(n,e){const t=new Array(n.rank);for(let a=0;a<t.length;a++)t[a]=n.shape[a]*e[a];const s=we(t,n.dtype);for(let a=0;a<s.values.length;++a){const r=s.indexToLoc(a),i=new Array(n.rank);for(let l=0;l<i.length;l++)i[l]=r[l]%n.shape[l];const o=n.locToIndex(i);s.values[a]=n.values[o]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pa=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function Ib(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const o=s-t+1,l=e-t+1,u=Math.log(o),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(o-c)/o)*Math.sign(l-o/2),d=Math.max(t,Math.floor(e-l*c/o+h)),p=Math.min(s,Math.floor(e+(o-l)*c/o+h));Ib(n,e,d,p)}const a=n[e];let r=t,i=s;for(Aa(n,t,e),Pa(n[s],a)>0&&Aa(n,t,s);r<i;){for(Aa(n,r,i),r++,i--;Pa(n[r],a)<0;)r=r+1;for(;Pa(n[i],a)>0;)i=i-1}Pa(n[t],a)===0?Aa(n,t,i):(i=i+1,Aa(n,i,s)),i<=e&&(t=i+1),e<=i&&(s=i-1)}}function Nb(n,e,t,s,a){const r=e[e.length-1],[i,o]=[n.length/r,r],l=pt(t,i*s),u=pt("int32",i*s);for(let h=0;h<i;h++){const d=h*o,p=n.subarray(d,d+o);let f=new Array(p.length);p.forEach((x,C)=>f[C]={value:x,index:C}),s<f.length&&(Ib(f,s),f=f.slice(0,s)),a&&f.sort(Pa);const g=h*s,m=l.subarray(g,g+s),y=u.subarray(g,g+s);for(let x=0;x<s;x++)m[x]=f[x].value,y[x]=f[x].index}const c=e.slice();return c[c.length-1]=s,[we(c,t,l),we(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vb(n,e,t,s){const a=me(e,t)[0],r=[1,t[0],1];for(let f=0;f<a;f++)r[0]*=t[f];r[1]=t[a];for(let f=a+1;f<t.length;f++)r[2]*=t[f];const i=new Map,o=new Int32Array(t[a]),l=new dt(r,s,n),u=[],c=r[0]===1&&r[2]===1;for(let f=0;f<t[a];f++){let g;if(c)g=n[f].toString();else{const y=[];for(let x=0;x<r[0];x++)for(let C=0;C<r[2];C++)y.push(l.get(x,f,C));g=y.join(",")}const m=i.get(g);if(m!=null)o[f]=m;else{const y=i.size;i.set(g,y),o[f]=y,u.push(f)}}const h=r.slice();h[1]=i.size;const d=new dt(h,s);u.forEach((f,g)=>{for(let m=0;m<r[0];m++)for(let y=0;y<r[2];y++)d.set(l.get(m,f,y),m,g,y)});const p=t.slice();return p[a]=h[1],{outputValues:d.values,outputShape:p,indices:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fE=Object.freeze(Object.defineProperty({__proto__:null,addImpl:Ox,bincountImpl:zd,bincountReduceImpl:Fx,bitwiseAndImpl:_x,castImpl:Dx,ceilImpl:Lx,concatImpl:Px,equalImpl:zx,expImpl:Bx,expm1Impl:Wx,floorDivImpl:Gx,floorImpl:Ux,gatherNdImpl:Hx,gatherV2Impl:jx,greaterEqualImpl:qx,greaterImpl:Xx,lessEqualImpl:Yx,lessImpl:Kx,linSpaceImpl:Qx,logImpl:Zx,maxImpl:Jx,maximumImpl:eb,minimumImpl:tb,multiplyImpl:Vd,negImpl:nb,notEqualImpl:sb,prodImpl:ab,raggedGatherImpl:rb,raggedRangeImpl:ib,raggedTensorToTensorImpl:ob,rangeImpl:lb,rsqrtImpl:ub,scatterImpl:bs,sigmoidImpl:eE,simpleAbsImpl:Ax,sliceImpl:hb,sparseFillEmptyRowsImpl:db,sparseReshapeImpl:pb,sparseSegmentReductionImpl:Md,sqrtImpl:sE,squaredDifferenceImpl:fb,staticRegexReplaceImpl:mb,stridedSliceImpl:gb,stringNGramsImpl:yb,stringSplitImpl:xb,stringToHashBucketFastImpl:bb,subImpl:wb,tileImpl:Cb,topKImpl:Nb,transposeImpl:Bd,uniqueImpl:vb},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const mE="4.6.0";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */bm("cpu",()=>new Mo,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sb=ve(Ri,n=>n>=0?n:Math.exp(n)-1),gE={kernelName:Ri,backendName:"cpu",kernelFunc:Sb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tb(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{alpha:r}=s;ne([a],"leakyRelu");const i=B(a.shape),o=t.data.get(a.dataId).values,l=pt("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?r*o[u]:o[u];return t.makeTensorInfo(a.shape,"float32",l)}const yE={kernelName:Iu,backendName:"cpu",kernelFunc:Tb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xE=He((n,e)=>n<0?e*n:n);function $b(n){const{inputs:e,backend:t}=n,{x:s,alpha:a}=e;ne([s,a],"prelu");const r=t.data.get(s.dataId).values,i=t.data.get(a.dataId).values,[o,l]=xE(s.shape,a.shape,r,i,"float32");return t.makeTensorInfo(l,"float32",o)}const bE={kernelName:Bu,backendName:"cpu",kernelFunc:$b};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kb=ve(Ki,n=>Math.max(0,n)),wE={kernelName:Ki,backendName:"cpu",kernelFunc:kb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rb=ve(qi,n=>Math.min(Math.max(0,n),6)),CE={kernelName:qi,backendName:"cpu",kernelFunc:Rb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function li(n,e,t,s,a){if(t==="linear")return Nn({inputs:{x:e},backend:n});if(t==="relu")return kb({inputs:{x:e},backend:n});if(t==="elu")return Sb({inputs:{x:e},backend:n});if(t==="relu6")return Rb({inputs:{x:e},backend:n});if(t==="prelu")return $b({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return Tb({inputs:{x:e},backend:n,attrs:{alpha:a}});if(t==="sigmoid")return cb({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function De(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{shape:r}=s,i=B(a.shape),o=wm(r,i),l=B(o);M(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(a.dataId);const u=t.data.get(a.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;c.shape=o,h.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const IE={kernelName:Wu,backendName:"cpu",kernelFunc:De};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eb(n){const{inputs:e,backend:t,attrs:s}=n,{a,b:r}=e,{transposeA:i,transposeB:o}=s;ne([a,r],"matMul");const l=a.shape.length,u=r.shape.length,c=i?a.shape[l-2]:a.shape[l-1],h=o?r.shape[u-1]:r.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],p=o?r.shape[u-2]:r.shape[u-1],f=a.shape.slice(0,-2),g=r.shape.slice(0,-2),m=B(f),y=B(g),C=Fe(a.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,p]);M(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${r.shape} and transposeA=${i} and transposeB=${o} must match.`);const w=i?[m,c,d]:[m,d,c],I=o?[y,p,h]:[y,h,p],N=De({inputs:{x:a},backend:t,attrs:{shape:w}}),v=De({inputs:{x:r},backend:t,attrs:{shape:I}}),S=i?N.shape[1]:N.shape[2],$=i?N.shape[2]:N.shape[1],k=o?v.shape[1]:v.shape[2],E=Math.max(m,y),P=t.data.get(N.dataId).values,z=t.data.get(v.dataId).values,V=ie(N.shape),F=ie(v.shape),[L,W,_]=i?[V[0],1,V[1]]:[V[0],V[1],1],[U,X,j]=o?[1,F[1],F[0]]:[F[1],1,F[0]],K=$*k,q=we([E,$,k],N.dtype),J=q.values,Y=t.blockSize;for(let ee=0;ee<E;ee++){const ae=ee%m,le=ee%y;for(let oe=0;oe<$;oe+=Y){const he=Math.min(oe+Y,$);for(let de=0;de<k;de+=Y){const Ne=Math.min(de+Y,k);for(let Ee=0;Ee<S;Ee+=Y){const Me=Math.min(Ee+Y,S);for(let Ae=oe;Ae<he;Ae++)for(let Se=de;Se<Ne;Se++){let ze=0;for(let _e=Ee;_e<Me;_e++){const $n=P[ae*L+Ae*W+_e*_],st=z[_e*U+Se*X+le*j];ze+=$n*st}J[ee*K+(Ae*k+Se)]+=ze}}}}}return t.disposeIntermediateTensorInfo(N),t.disposeIntermediateTensorInfo(v),t.makeTensorInfo(C,q.dtype,q.values)}const NE={kernelName:ru,backendName:"cpu",kernelFunc:Eb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vE(n){const{inputs:e,backend:t,attrs:s}=n,{a,b:r,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const g=[];d=Eb({inputs:{a,b:r},attrs:{transposeA:l,transposeB:u},backend:t}),i&&(p=ra({inputs:{a:d,b:i},backend:t}),g.push(d),d=p),c&&(f=li(t,d,c,o,h),g.push(d),d=f);for(const y of g)t.disposeIntermediateTensorInfo(y);return d}const SE={kernelName:Cm,backendName:"cpu",kernelFunc:vE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TE=ve(gi,n=>Math.acos(n)),$E={kernelName:gi,backendName:"cpu",kernelFunc:TE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kE=ve(yi,n=>Math.acosh(n)),RE={kernelName:yi,backendName:"cpu",kernelFunc:kE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(n){const{inputs:e,backend:t}=n,s=e;ne(e,"addN");const a=s.map(o=>t.data.get(o.dataId).values),r=we(s[0].shape,s[0].dtype),i=r.values;for(let o=0;o<s.length;o++){const l=a[o];for(let u=0;u<i.length;u++)i[u]+=l[u]}return t.makeTensorInfo(r.shape,r.dtype,r.values)}const AE={kernelName:Zl,backendName:"cpu",kernelFunc:EE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,keepDims:i}=s;ne(a,"all");const o=me(r,a.shape);let l=o;const u=Be(l,a.shape.length);let c=a;u!=null&&(c=Nt({inputs:{x:a},backend:t,attrs:{perm:u}}),l=Ue(l.length,a.shape.length)),lt("all",l,c.shape.length);const[h,d]=nt(c.shape,l),p=B(d),f=At(B(h),c.dtype),g=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let C=g[x];for(let w=0;w<p;++w){const I=g[x+w];C=C&&I}f[y]=C}u!=null&&t.disposeIntermediateTensorInfo(c);const m=t.makeTensorInfo(h,c.dtype,f);if(i){const y=ot(h,o),x=De({inputs:{x:m},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(m),x}return m}const OE={kernelName:Im,backendName:"cpu",kernelFunc:DE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,keepDims:i}=s;ne(a,"any");const o=me(r,a.shape);let l=o;const u=Be(l,a.shape.length);let c=a;u!=null&&(c=Nt({inputs:{x:a},backend:t,attrs:{perm:u}}),l=Ue(l.length,a.shape.length)),lt("any",l,c.shape.length);const[h,d]=nt(c.shape,l),p=B(d),f=At(B(h),c.dtype),g=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let C=g[x];for(let w=0;w<p;++w){const I=g[x+w];C=C||I}f[y]=C}u!=null&&t.disposeIntermediateTensorInfo(c);const m=t.makeTensorInfo(h,c.dtype,f);if(i){const y=ot(h,o),x=De({inputs:{x:m},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(m),x}return m}const _E={kernelName:Nm,backendName:"cpu",kernelFunc:FE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LE(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r}=s;ne(a,"argMax");let i=me(r,a.shape);const o=Be(i,a.shape.length);let l=a;const u=[];o!=null&&(l=Nt({inputs:{x:a},backend:t,attrs:{perm:o}}),u.push(l),i=Ue(i.length,l.shape.length)),i=[i[0]],lt("argMax",i,l.shape.length);const[c,h]=nt(l.shape,i),d=B(c),p=At(d,"int32"),f=B(h),g=t.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*f;let x=g[y],C=0;for(let w=0;w<f;++w){const I=g[y+w];I>x&&(x=I,C=w)}p[m]=C}return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),t.makeTensorInfo(c,"int32",p)}const PE={kernelName:Jl,backendName:"cpu",kernelFunc:LE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r}=s;ne(a,"argMin");let i=me(r,a.shape);const o=Be(i,a.shape.length);let l=a;const u=[];o!=null&&(l=Nt({inputs:{x:a},backend:t,attrs:{perm:o}}),u.push(l),i=Ue(i.length,l.shape.length)),i=[i[0]],lt("argMin",i,l.shape.length);const[c,h]=nt(l.shape,i),d=B(c),p=At(d,"int32"),f=B(h),g=t.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const y=m*f;let x=g[y],C=0;for(let w=0;w<f;++w){const I=g[y+w];I<x&&(x=I,C=w)}p[m]=C}return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),t.makeTensorInfo(c,"int32",p)}const VE={kernelName:eu,backendName:"cpu",kernelFunc:zE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BE=ve(bi,n=>Math.asin(n)),ME={kernelName:bi,backendName:"cpu",kernelFunc:BE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WE=ve(wi,n=>Math.asinh(n)),UE={kernelName:wi,backendName:"cpu",kernelFunc:WE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GE=ve(Ii,n=>Math.atan(n)),HE={kernelName:Ii,backendName:"cpu",kernelFunc:GE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jE=He((n,e)=>Math.atan2(n,e)),XE=Qe(Ci,jE),qE={kernelName:Ci,backendName:"cpu",kernelFunc:XE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KE=ve(Ni,n=>Math.atanh(n)),YE={kernelName:Ni,backendName:"cpu",kernelFunc:KE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ud(n,e,t,s,a,r){const i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=we(a.outShape,t),m=g.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],x=a.outShape[2]*a.outShape[3],C=a.outShape[3];for(let w=0;w<a.batchSize;++w){const I=w*y,N=w*s[0];for(let v=0;v<a.inChannels;++v)for(let S=0;S<a.outHeight;++S){const $=S*i-d,k=Math.max(0,$),E=Math.min(a.inHeight,c+$),P=I+S*x;for(let z=0;z<a.outWidth;++z){const V=z*o-p,F=Math.max(0,V),L=Math.min(a.inWidth,h+V);let W=f,_=0,U=0;for(let j=k;j<E;j+=l){const K=N+j*s[1];for(let q=F;q<L;q+=u){const J=K+q*s[2],Y=n[J+v];r==="max"&&Y>W?W=Y:r==="avg"&&(_+=Y,U++)}if(isNaN(W))break}const X=P+z*C+v;m[X]=r==="avg"?_/U:W}}}return g}function Ab(n,e,t,s,a=!1,r=!1){const i=we(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=we(e,t,n);for(let m=0;m<s.batchSize;++m)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){const C=x*o-p;let w=C;for(;w<0;)w+=u;const I=Math.min(s.inHeight,h+C);for(let N=0;N<s.outWidth;++N){const v=N*l-f;let S=v;for(;S<0;)S+=c;const $=Math.min(s.inWidth,d+v);let k=Number.NEGATIVE_INFINITY,E=-1;for(let P=w;P<I;P+=u){const z=P-C;for(let V=S;V<$;V+=c){const F=V-v,L=g.get(m,P,V,y);L>k&&(k=L,a?E=r?((m*s.inHeight+P)*s.inWidth+V)*s.inChannels+y:(P*s.inWidth+V)*s.inChannels+y:E=z*d+F)}}i.set(E,m,x,N,y)}}return i}function Db(n,e,t,s,a,r){const i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,g=a.padInfo.front,m=a.padInfo.top,y=a.padInfo.left,x=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,C=we(a.outShape,t),w=C.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],N=a.outShape[2]*a.outShape[3]*a.outShape[4],v=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let $=0;$<a.batchSize;++$){const k=$*I,E=$*s[0];for(let P=0;P<a.inChannels;++P)for(let z=0;z<a.outDepth;++z){const V=z*i-g;let F=V;for(;F<0;)F+=u;const L=Math.min(a.inDepth,d+V),W=k+z*N;for(let _=0;_<a.outHeight;++_){const U=_*o-m;let X=U;for(;X<0;)X+=c;const j=Math.min(a.inHeight,p+U),K=W+_*v;for(let q=0;q<a.outWidth;++q){const J=q*l-y;let Y=J;for(;Y<0;)Y+=h;const ee=Math.min(a.inWidth,f+J),ae=K+q*S;let le=x,oe=0,he=0;for(let Ne=F;Ne<L;Ne+=u){const Ee=E+Ne*s[1];for(let Me=X;Me<j;Me+=c){const Ae=Ee+Me*s[2];for(let Se=Y;Se<ee;Se+=h){const ze=Ae+Se*s[3],_e=n[ze+P];if(r==="max"&&_e>le?le=_e:r==="avg"&&(oe+=_e,he++),isNaN(le))break}if(isNaN(le))break}if(isNaN(le))break}const de=ae+P;w[de]=r==="avg"?oe/Math.max(he,1):le}}}}return C}function QE(n,e){const t=we(e.outShape,"int32"),s=e.strideDepth,a=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let g=0;g<e.batchSize;++g)for(let m=0;m<e.inChannels;++m)for(let y=0;y<e.outDepth;++y){const x=y*s-d;let C=x;for(;C<0;)C+=i;const w=Math.min(e.inDepth,u+x);for(let I=0;I<e.outHeight;++I){const N=I*a-p;let v=N;for(;v<0;)v+=o;const S=Math.min(e.inHeight,c+N);for(let $=0;$<e.outWidth;++$){const k=$*r-f;let E=k;for(;E<0;)E+=l;const P=Math.min(e.inWidth,h+k);let z=Number.NEGATIVE_INFINITY,V=-1;for(let F=C;F<w;F+=i){const L=F-x;for(let W=v;W<S;W+=o){const _=W-N;for(let U=E;U<P;U+=l){const X=U-k,j=n.get(g,F,W,U,m);j>=z&&(z=j,V=L*c*h+_*c+X)}}}t.set(V,g,y,I,$,m)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZE(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e;ne(a,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;M(vn(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ln(a.shape,r,i,u,o,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Ie(c.inShape,c.outShape))h=Nn({inputs:{x:a},backend:t});else{const d=t.data.get(a.dataId).values,p=ie(a.shape),f=Ud(d,a.shape,a.dtype,p,c,"avg");h=t.makeTensorInfo(c.outShape,a.dtype,f.values)}return h}const JE={kernelName:au,backendName:"cpu",kernelFunc:ZE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;ne(a,"avgPool3d");const c=zn(a.shape,r,i,1,o,l,u),h=t.data.get(a.dataId).values,d=Db(h,a.shape,a.dtype,ie(a.shape),c,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const tA={kernelName:nu,backendName:"cpu",kernelFunc:eA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,input:r}=e,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;ne([a,r],"avgPool3DGrad");const c=zn(r.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,y=c.dilationDepth,x=c.dilationHeight,C=c.dilationWidth,w=c.effectiveFilterDepth,I=c.effectiveFilterHeight,N=c.effectiveFilterWidth,v=w-1-c.padInfo.front,S=N-1-c.padInfo.left,$=I-1-c.padInfo.top,k=we(r.shape,"float32"),E=1/(f*g*m),P=t.bufferSync(a);for(let z=0;z<c.batchSize;++z)for(let V=0;V<c.inChannels;++V)for(let F=0;F<c.inDepth;++F)for(let L=0;L<c.inHeight;++L)for(let W=0;W<c.inWidth;++W){const _=F-v,U=L-$,X=W-S;let j=0;for(let K=0;K<w;K+=y){const q=(_+K)/h;if(!(q<0||q>=c.outDepth||Math.floor(q)!==q))for(let J=0;J<I;J+=x){const Y=(U+J)/d;if(!(Y<0||Y>=c.outHeight||Math.floor(Y)!==Y))for(let ee=0;ee<N;ee+=C){const ae=(X+ee)/p;if(ae<0||ae>=c.outWidth||Math.floor(ae)!==ae)continue;const le=P.get(z,q,Y,ae,V);j+=le}}}k.set(j*E,z,F,L,W,V)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const sA={kernelName:tu,backendName:"cpu",kernelFunc:nA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,input:r}=e,i=r;ne([a,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=ln(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,C=x-1-c.padInfo.left,w=y-1-c.padInfo.top,I=we(i.shape,"float32"),N=1/(p*f),v=t.data.get(a.dataId).values,S=we(a.shape,"float32",v);for(let $=0;$<c.batchSize;++$)for(let k=0;k<c.inChannels;++k)for(let E=0;E<c.inHeight;++E)for(let P=0;P<c.inWidth;++P){const z=E-w,V=P-C;let F=0;for(let L=0;L<y;L+=g){const W=(z+L)/h;if(!(W<0||W>=c.outHeight||Math.floor(W)!==W))for(let _=0;_<x;_+=m){const U=(V+_)/d;if(U<0||U>=c.outWidth||Math.floor(U)!==U)continue;const X=S.get($,W,U,k);F+=X}}I.set(F*N,$,E,P,k)}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const rA={kernelName:su,backendName:"cpu",kernelFunc:aA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,scale:r,offset:i,mean:o,variance:l}=e;M(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(r==null||o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ne([a,o,l,r,i],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const c=t.data.get(a.dataId).values,h=t.data.get(o.dataId).values,d=t.data.get(l.dataId).values,p=r?t.data.get(r.dataId).values:new Float32Array([1]),f=i?t.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,y=p.length,x=d.length,C=h.length;let w=0,I=0,N=0,v=0;for(let S=0;S<c.length;++S)g[S]=f[w++]+(c[S]-h[I++])*p[N++]/Math.sqrt(d[v++]+u),w>=m&&(w=0),I>=C&&(I=0),N>=y&&(N=0),v>=x&&(v=0);return t.makeTensorInfo(a.shape,a.dtype,g)}const oA={kernelName:bu,backendName:"cpu",kernelFunc:iA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{blockShape:r,crops:i}=s;ne([a],"batchToSpaceND");const o=r.reduce((y,x)=>y*x),l=ir(a.shape,r,o),u=or(l.length,r.length),c=lr(a.shape,r,o),h=Bc(i,r.length),d=Mc(c,i,r.length),p=De({inputs:{x:a},backend:t,attrs:{shape:l}}),f=Nt({inputs:{x:p},backend:t,attrs:{perm:u}}),g=De({inputs:{x:f},backend:t,attrs:{shape:c}}),m=Es({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),m}const uA={kernelName:iu,backendName:"cpu",kernelFunc:lA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,weights:r}=e,{size:i}=s,o=t.data.get(a.dataId).values,l=t.data.get(r.dataId).values,u=zd(o,l,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,u)}const hA={kernelName:vm,backendName:"cpu",kernelFunc:cA};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(n){const{inputs:e,backend:t}=n,{s0:s,s1:a}=e,r=t.data.get(s.dataId).values,i=t.data.get(a.dataId).values,o=Fe(Array.from(r),Array.from(i));return t.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const pA={kernelName:Sm,backendName:"cpu",kernelFunc:dA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fA=ve(Si,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),mA={kernelName:Si,backendName:"cpu",kernelFunc:fA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gA=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(B(e.shape)),a=t.data.get(e.dataId),r=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values;for(let u=0;u<o.length;u++){const c=o[u],h=l[u];s[u]=Math.hypot(c,h)}return t.makeOutput(s,e.shape,"float32")},yA={kernelName:lu,backendName:"cpu",kernelFunc:gA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ia(n){const{inputs:e,backend:t}=n,{input:s}=e,a=t.data.get(s.dataId).complexTensorInfos.imag,r=t.data.get(a.dataId).values;return t.makeTensorInfo(a.shape,a.dtype,r)}const xA={kernelName:Tm,backendName:"cpu",kernelFunc:ia};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oa(n){const{inputs:e,backend:t,attrs:s}=n,{axis:a}=s,r=me(a,e[0].shape)[0],i=e.map(g=>g.shape);Pc(i,r);let o=bn(e.map(g=>g.shape),r);if(B(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(g=>B(g.shape)>0);if(l.length===1)return Nn({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const g=l.map(w=>Rs({inputs:{input:w},backend:t})),m=l.map(w=>ia({inputs:{input:w},backend:t})),y=oa({inputs:g,backend:t,attrs:{axis:r}}),x=oa({inputs:m,backend:t,attrs:{axis:r}}),C=Rt({inputs:{real:y,imag:x},backend:t});return g.forEach(w=>t.disposeIntermediateTensorInfo(w)),m.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(x),C}const u=l.map(g=>{const y=[-1,B(g.shape.slice(r))];return De({inputs:{x:g},backend:t,attrs:{shape:y}})}),c=u.map(g=>({vals:t.data.get(g.dataId).values,shape:g.shape}));o=bn(u.map(g=>g.shape),1);const h=u[0].shape[0]===1,d=Px(c,o,e[0].dtype,h),p=bn(l.map(g=>g.shape),r),f=t.makeTensorInfo(p,e[0].dtype,d);return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),f}const bA={kernelName:uu,backendName:"cpu",kernelFunc:oa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ob(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,filter:r}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;ne([a,r],"conv2d");const h=rs(l),d=vt(a.shape,r.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,C=d.dataFormat==="channelsLast",w=new dt(d.outShape,a.dtype),I=ie(a.shape),N=ie(r.shape),v=I[0],S=C?I[1]:I[2],$=C?I[2]:1,k=C?1:I[1],E=w.strides[0],P=C?w.strides[1]:w.strides[2],z=C?w.strides[2]:1,V=C?1:w.strides[1],F=t.data.get(a.dataId).values,L=t.data.get(r.dataId).values,W=w.values;for(let _=0;_<d.batchSize;++_){const U=_*v,X=_*E;for(let j=0;j<d.outHeight;++j){const K=X+j*P,q=j*d.strideHeight-x;for(let J=0;J<p;++J){const Y=q+J*g;if(Y<0||Y>=d.inHeight)continue;const ee=J*N[0],ae=U+Y*S;for(let le=0;le<d.outWidth;++le){const oe=K+le*z,he=le*d.strideWidth-y;for(let de=0;de<f;++de){const Ne=he+de*m;if(Ne<0||Ne>=d.inWidth)continue;const Ee=ee+de*N[1],Me=ae+Ne*$;let Ae=Ee;for(let Se=0;Se<d.inChannels;++Se){const ze=F[Me+Se*k];for(let _e=0;_e<d.outChannels;++_e)W[oe+_e*V]+=ze*L[Ae+_e];Ae+=d.outChannels}}}}}}return t.makeTensorInfo(w.shape,w.dtype,W)}const wA={kernelName:cu,backendName:"cpu",kernelFunc:Ob};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,dy:r}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;ne([a,r],"conv2dBackpropFilter");const h=rs(l),d=vt(a.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,y=d.dataFormat==="channelsLast",x=new dt(d.filterShape,"float32"),C=d.padInfo.left,w=d.padInfo.top,I=t.data.get(a.dataId).values,N=t.data.get(r.dataId).values,v=new dt(a.shape,a.dtype,I),S=new dt(r.shape,r.dtype,N);for(let $=0;$<g;++$){const k=Math.max(0,Math.ceil((w-$)/p)),E=Math.min(d.outHeight,(d.inHeight+w-$)/p);for(let P=0;P<m;++P){const z=Math.max(0,Math.ceil((C-P)/f)),V=Math.min(d.outWidth,(d.inWidth+C-P)/f);for(let F=0;F<d.inChannels;++F)for(let L=0;L<d.outChannels;++L){let W=0;for(let _=0;_<d.batchSize;++_)for(let U=k;U<E;++U){const X=$+U*p-w;for(let j=z;j<V;++j){const K=P+j*f-C;y?W+=v.get(_,X,K,F)*S.get(_,U,j,L):W+=v.get(_,F,X,K)*S.get(_,L,U,j)}}x.set(W,$,P,F,L)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const IA={kernelName:$m,backendName:"cpu",kernelFunc:CA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,filter:r}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;ne([a,r],"conv2dBackpropInput");const h=ie(r.shape),d=ie(a.shape);let p=rs(u);const f=vt(i,r.shape,o,1,l,c,!1,p),g=new dt(f.inShape,"float32"),m=g.values,y=t.data.get(a.dataId).values,x=t.data.get(r.dataId).values,[C,w,I]=h,{batchSize:N,filterHeight:v,filterWidth:S,inChannels:$,inHeight:k,inWidth:E,outChannels:P,outHeight:z,outWidth:V,strideHeight:F,strideWidth:L}=f;p=f.dataFormat;const W=v-1-f.padInfo.top,_=S-1-f.padInfo.left,U=p==="channelsLast",X=g.strides[0],j=U?g.strides[1]:g.strides[2],K=U?g.strides[2]:1,q=U?1:g.strides[1],J=d[0],Y=U?d[1]:d[2],ee=U?d[2]:1,ae=U?1:d[1];for(let le=0;le<N;++le)for(let oe=0;oe<$;++oe)for(let he=0;he<k;++he){const de=he-W,Ne=Math.max(0,Math.ceil(de/F)),Ee=Math.min(z,(v+de)/F);for(let Me=0;Me<E;++Me){const Ae=Me-_,Se=Math.max(0,Math.ceil(Ae/L)),ze=Math.min(V,(S+Ae)/L);let _e=0;for(let st=Ne;st<Ee;++st){const Bn=st*F-de;for(let Ot=Se;Ot<ze;++Ot){const hs=Ot*L-Ae,Kt=J*le+Y*st+ee*Ot,kn=C*(v-1-Bn)+w*(S-1-hs)+I*oe;for(let Mn=0;Mn<P;++Mn){const Wn=y[Kt+ae*Mn],Un=x[kn+Mn];_e+=Wn*Un}}}const $n=X*le+j*he+K*Me+q*oe;m[$n]=_e}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const vA={kernelName:hu,backendName:"cpu",kernelFunc:NA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s;ne([a,r],"conv3d");const u=_s(a.shape,r.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,y=m.front,x=m.left,C=m.top,w=new dt(u.outShape,a.dtype),I=t.data.get(a.dataId).values,N=t.data.get(r.dataId).values,v=w.values,S=ie(a.shape),$=ie(r.shape);for(let k=0;k<u.batchSize;++k){const E=k*S[0],P=k*w.strides[0];for(let z=0;z<u.outDepth;++z){const V=P+z*w.strides[1],F=z*u.strideDepth-y;for(let L=0;L<c;++L){const W=F+L*p;if(W<0||W>=u.inDepth)continue;const _=L*$[0],U=E+W*S[1];for(let X=0;X<u.outHeight;++X){const j=V+X*w.strides[2],K=X*u.strideHeight-C;for(let q=0;q<h;++q){const J=K+q*f;if(J<0||J>=u.inHeight)continue;const Y=_+q*$[1],ee=U+J*S[2];for(let ae=0;ae<u.outWidth;++ae){const le=j+ae*u.outChannels,oe=ae*u.strideWidth-x;for(let he=0;he<d;++he){const de=oe+he*g;if(de<0||de>=u.inWidth)continue;const Ne=Y+he*$[2],Ee=ee+de*u.inChannels;let Me=Ne;for(let Ae=0;Ae<u.inChannels;++Ae){const Se=I[Ee+Ae];for(let ze=0;ze<u.outChannels;++ze)v[le+ze]+=Se*N[Me+ze];Me+=u.outChannels}}}}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const TA={kernelName:pu,backendName:"cpu",kernelFunc:SA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,dy:r}=e,{strides:i,pad:o,filterShape:l}=s;ne([a,r],"conv3dBackpropFilterV2");const u=ie(a.shape),c=ie(r.shape),h=_s(a.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,y=h.filterWidth,x=new dt(h.filterShape,"float32"),C=x.values,[w,I,N,v]=x.strides,S=t.data.get(r.dataId).values,[$,k,E,P]=c,z=t.data.get(a.dataId).values,[V,F,L,W]=u,_=h.padInfo.front,U=h.padInfo.left,X=h.padInfo.top;for(let j=0;j<g;++j){const K=Math.max(0,Math.ceil((_-j)/d)),q=Math.min(h.outDepth,(h.inDepth+_-j)/d),J=j*w;for(let Y=0;Y<m;++Y){const ee=Math.max(0,Math.ceil((X-Y)/p)),ae=Math.min(h.outHeight,(h.inHeight+X-Y)/p),le=Y*I+J;for(let oe=0;oe<y;++oe){const he=Math.max(0,Math.ceil((U-oe)/f)),de=Math.min(h.outWidth,(h.inWidth+U-oe)/f),Ne=oe*N+le;for(let Ee=0;Ee<h.inChannels;++Ee){const Me=Ee*v+Ne;for(let Ae=0;Ae<h.outChannels;++Ae){let Se=0;for(let ze=0;ze<h.batchSize;++ze){const _e=ze*V,$n=ze*$;for(let st=K;st<q;++st){const Ot=(j+st*d-_)*F+_e,hs=st*k+$n;for(let Kt=ee;Kt<ae;++Kt){const Mn=(Y+Kt*p-X)*L+Ot,Wn=Kt*E+hs;for(let Un=he;Un<de;++Un){const qo=(oe+Un*f-U)*W+Mn,Ko=Un*P+Wn;Se+=z[qo+Ee]*S[Ko+Ae]}}}}C[Me+Ae]=Se}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const kA={kernelName:du,backendName:"cpu",kernelFunc:$A};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,filter:r}=e,{pad:i,strides:o,inputShape:l}=s;ne([a],"conv3dBackpropInputV2");const u=ie(a.shape),c=ie(r.shape),h=_s(l,r.shape,o,1,i),d=new dt(h.inShape,"float32"),p=d.values,[f,g,m,y]=d.strides,x=t.data.get(a.dataId).values,[C,w,I,N]=u,v=t.data.get(r.dataId).values,[S,$,k,E]=c,{batchSize:P,filterDepth:z,filterHeight:V,filterWidth:F,inChannels:L,inDepth:W,inHeight:_,inWidth:U,outChannels:X,outDepth:j,outHeight:K,outWidth:q,strideDepth:J,strideHeight:Y,strideWidth:ee}=h,ae=z-1-h.padInfo.front,le=V-1-h.padInfo.top,oe=F-1-h.padInfo.left;for(let he=0;he<P;++he)for(let de=0;de<L;++de)for(let Ne=0;Ne<W;++Ne){const Ee=Ne-ae,Me=Math.max(0,Math.ceil(Ee/J)),Ae=Math.min(j,(z+Ee)/J);for(let Se=0;Se<_;++Se){const ze=Se-le,_e=Math.max(0,Math.ceil(ze/Y)),$n=Math.min(K,(V+ze)/Y);for(let st=0;st<U;++st){const Bn=st-oe,Ot=Math.max(0,Math.ceil(Bn/ee)),hs=Math.min(q,(F+Bn)/ee);let Kt=0;for(let kn=Me;kn<Ae;++kn){const Mn=kn*J-Ee;for(let Wn=_e;Wn<$n;++Wn){const Un=Wn*Y-ze;for(let Ea=Ot;Ea<hs;++Ea){const qo=Ea*ee-Bn,Ko=C*he+w*kn+I*Wn+N*Ea,d0=S*(z-1-Mn)+$*(V-1-Un)+k*(F-1-qo)+E*de;for(let Nr=0;Nr<X;++Nr){const p0=x[Ko+Nr],f0=v[d0+Nr];Kt+=p0*f0}}}}p[f*he+g*Ne+m*Se+y*st+de]=Kt}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const EA={kernelName:km,backendName:"cpu",kernelFunc:RA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AA=ve($i,n=>Math.cos(n)),DA={kernelName:$i,backendName:"cpu",kernelFunc:AA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OA=ve(ki,n=>Math.cosh(n)),FA={kernelName:ki,backendName:"cpu",kernelFunc:OA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n){const{inputs:e,backend:t,attrs:s}=n,{image:a,boxes:r,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,p]=a.shape,f=r.shape[0],[g,m]=o,y=we([f,g,m,p],"float32"),x=t.data.get(r.dataId).values,C=t.data.get(i.dataId).values,w=t.data.get(a.dataId).values,I=ie(a.shape),N=ie(y.shape);for(let v=0;v<f;v++){const S=v*4,$=x[S],k=x[S+1],E=x[S+2],P=x[S+3],z=C[v];if(z>=c)continue;const V=g>1?(E-$)*(h-1)/(g-1):0,F=m>1?(P-k)*(d-1)/(m-1):0;for(let L=0;L<g;L++){const W=g>1?$*(h-1)+L*V:.5*($+E)*(h-1);if(W<0||W>h-1){for(let _=0;_<m;_++)for(let U=0;U<p;U++){const X=U+_*N[2]+L*N[1]+v*N[0];y.values[X]=u}continue}if(l==="bilinear"){const _=Math.floor(W),U=Math.ceil(W),X=W-_;for(let j=0;j<m;j++){const K=m>1?k*(d-1)+j*F:.5*(k+P)*(d-1);if(K<0||K>d-1){for(let ee=0;ee<p;ee++){const ae=ee+j*N[2]+L*N[1]+v*N[0];y.values[ae]=u}continue}const q=Math.floor(K),J=Math.ceil(K),Y=K-q;for(let ee=0;ee<p;ee++){let ae=ee+q*I[2]+_*I[1]+z*I[0];const le=w[ae];ae=ee+J*I[2]+_*I[1]+z*I[0];const oe=w[ae];ae=ee+q*I[2]+U*I[1]+z*I[0];const he=w[ae];ae=ee+J*I[2]+U*I[1]+z*I[0];const de=w[ae],Ne=le+(oe-le)*Y,Ee=he+(de-he)*Y;ae=ee+j*N[2]+L*N[1]+v*N[0],y.values[ae]=Ne+(Ee-Ne)*X}}}else for(let _=0;_<m;++_){const U=m>1?k*(d-1)+_*F:.5*(k+P)*(d-1);if(U<0||U>d-1){for(let K=0;K<p;K++){const q=K+_*N[2]+L*N[1]+v*N[0];y.values[q]=u}continue}const X=Math.round(U),j=Math.round(W);for(let K=0;K<p;K++){const q=K+X*I[2]+j*I[1]+z*I[0],J=K+_*N[2]+L*N[1]+v*N[0];y.values[J]=w[q]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const LA={kernelName:Rm,backendName:"cpu",kernelFunc:_A};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;ne(a,"cumprod");const l=Be([r],a.shape.length);let u=a;l!=null&&(u=Nt({inputs:{x:a},backend:t,attrs:{perm:l}}));const c=Ue(1,a.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Ht(u.dtype,"int32"),d=p1(B(u.shape),h),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<p.length;y+=f)for(let x=0;x<f;x++){const C=g(y,x);if(x===0)d[C]=i?1:p[C];else{const w=g(y,x-1);d[C]=i?p[w]*d[w]:p[C]*d[w]}}const m=t.makeTensorInfo(u.shape,h,d);if(l!=null){const y=is(l),x=Nt({inputs:{x:m},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(u),x}return m}const zA={kernelName:Em,backendName:"cpu",kernelFunc:PA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;ne(a,"cumsum");const l=Be([r],a.shape.length);let u=a;l!=null&&(u=Nt({inputs:{x:a},backend:t,attrs:{perm:l}}));const c=Ue(1,a.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Ht(u.dtype,"int32"),d=At(B(u.shape),h),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<p.length;y+=f)for(let x=0;x<f;x++){const C=g(y,x);if(x===0)d[C]=i?0:p[C];else{const w=g(y,x-1);d[C]=i?p[w]+d[w]:p[C]+d[w]}}const m=t.makeTensorInfo(u.shape,h,d);if(l!=null){const y=is(l),x=Nt({inputs:{x:m},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(u),x}return m}const BA={kernelName:fu,backendName:"cpu",kernelFunc:VA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,weights:r}=e,{size:i,binaryOutput:o}=s;if(a.shape.length===1){const l=t.data.get(a.dataId).values,u=t.data.get(r.dataId).values,c=zd(l,u,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,c)}else if(a.shape.length===2){const l=t.bufferSync(a),u=t.bufferSync(r),c=Fx(l,u,i,o);return t.makeTensorInfo(c.shape,r.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const WA={kernelName:Am,backendName:"cpu",kernelFunc:MA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{blockSize:r,dataFormat:i}=s;M(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const o=a.shape[0],l=a.shape[1],u=a.shape[2],c=a.shape[3],h=l*r,d=u*r,p=c/(r*r),f=t.data.get(a.dataId).values,g=new Float32Array(o*h*d*p);let m=0;for(let y=0;y<o;++y)for(let x=0;x<h;++x){const C=Math.floor(x/r),w=x%r;for(let I=0;I<d;++I){const N=Math.floor(I/r),v=I%r,S=(w*r+v)*p;for(let $=0;$<p;++$){const E=$+S+c*(N+u*(C+l*y));g[m++]=f[E]}}}return t.makeTensorInfo([o,h,d,p],a.dtype,g)}const GA={kernelName:Dm,backendName:"cpu",kernelFunc:UA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fb(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;ne([a,r],"depthwiseConv2DNative");const c=ie(a.shape),h=ie(r.shape);let d=l;d==null&&(d=[1,1]),M(vn(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=vt(a.shape,r.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:y,padInfo:x}=p,C=x.left,w=x.top,I=p.outChannels/p.inChannels,N=new dt(p.outShape,a.dtype),v=t.data.get(a.dataId).values,S=t.data.get(r.dataId).values,$=N.values;for(let k=0;k<p.batchSize;++k){const E=k*c[0],P=k*N.strides[0];for(let z=0;z<p.outHeight;++z){const V=P+z*N.strides[1],F=z*p.strideHeight-w;for(let L=0;L<f;++L){const W=F+L*m;if(W<0||W>=p.inHeight)continue;const _=L*h[0],U=E+W*c[1];for(let X=0;X<p.outWidth;++X){const j=V+X*N.strides[2],K=X*p.strideWidth-C;for(let q=0;q<g;++q){const J=K+q*y;if(J<0||J>=p.inWidth)continue;const Y=_+q*h[1],ee=U+J*p.inChannels;let ae=j,le=Y;for(let oe=0;oe<p.inChannels;++oe){const he=v[ee+oe];for(let de=0;de<I;++de)$[ae+de]+=he*S[le+de];ae+=I,le+=I}}}}}}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const HA={kernelName:mu,backendName:"cpu",kernelFunc:Fb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jA(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,dy:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;ne([a,r],"depthwiseConv2dNativeBackpropFilter");const h=vt(a.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new dt(h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,C=h.outChannels/h.inChannels,w=t.data.get(a.dataId).values,I=new dt(a.shape,a.dtype,w),N=t.data.get(r.dataId).values,v=new dt(r.shape,r.dtype,N);for(let S=0;S<f;++S){const $=Math.max(0,Math.ceil((x-S)/d)),k=Math.min(h.outHeight,(h.inHeight+x-S)/d);for(let E=0;E<g;++E){const P=Math.max(0,Math.ceil((y-E)/p)),z=Math.min(h.outWidth,(h.inWidth+y-E)/p);for(let V=0;V<h.outChannels;++V){const F=Math.trunc(V/C),L=V%C;let W=0;for(let _=0;_<h.batchSize;++_)for(let U=$;U<k;++U){const X=S+U*d-x;for(let j=P;j<z;++j){const K=E+j*p-y;W+=I.get(_,X,K,F)*v.get(_,U,j,V)}}m.set(W,S,E,F,L)}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const XA={kernelName:Om,backendName:"cpu",kernelFunc:jA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,filter:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;ne([a,r],"depthwiseConv2DNativeBackpropInput");const h=ie(a.shape),d=ie(r.shape),p=vt(c,r.shape,i,o,l,u,!0),f=new dt(p.inShape,"float32"),g=f.values,[m,y,x]=f.strides,C=t.data.get(a.dataId).values,[w,I,N]=h,v=t.data.get(r.dataId).values,[S,$,k]=d,{batchSize:E,filterHeight:P,filterWidth:z,inChannels:V,inHeight:F,inWidth:L,outChannels:W,outHeight:_,outWidth:U,strideHeight:X,strideWidth:j}=p,K=P-1-p.padInfo.top,q=z-1-p.padInfo.left,J=W/V;for(let Y=0;Y<E;++Y)for(let ee=0;ee<V;++ee)for(let ae=0;ae<F;++ae){const le=ae-K,oe=Math.max(0,Math.ceil(le/X)),he=Math.min(_,(P+le)/X);for(let de=0;de<L;++de){const Ne=de-q,Ee=Math.max(0,Math.ceil(Ne/j)),Me=Math.min(U,(z+Ne)/j);let Ae=0;for(let Se=oe;Se<he;++Se){const ze=Se*X-le;for(let _e=Ee;_e<Me;++_e){const $n=_e*j-Ne,st=w*Y+I*Se+N*_e,Bn=S*(P-1-ze)+$*(z-1-$n)+k*ee;for(let Ot=0;Ot<J;++Ot){const hs=ee*J+Ot,Kt=C[st+hs],kn=v[Bn+Ot];Ae+=Kt*kn}}}g[m*Y+y*ae+x*de+ee]=Ae}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const KA={kernelName:Fm,backendName:"cpu",kernelFunc:qA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(n){const{inputs:e,backend:t}=n,{x:s}=e,a=B(s.shape),r=t.data.get(s.dataId).values,i=we([a,a],s.dtype),o=i.values;for(let u=0;u<r.length;u++)o[u*a+u]=r[u];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,i.dtype,i.values)}const QA={kernelName:_m,backendName:"cpu",kernelFunc:YA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZA={kernelName:gu,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:a}=n,{strides:r,pad:i,dilations:o}=t,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:x,padInfo:C,strideHeight:w,strideWidth:I,filterHeight:N,filterWidth:v,dilationHeight:S,dilationWidth:$,outShape:k}=sr(s.shape,a.shape,r,i,"NHWC",o),E=B(k),P=k.length,z=je(s.dtype,E);for(let F=0;F<p;++F)for(let L=0;L<y;++L){const W=L*w-C.top;for(let _=0;_<x;++_){const U=_*I-C.left;for(let X=0;X<m;++X){let j=Number.MIN_SAFE_INTEGER;for(let q=0;q<N;++q){const J=W+q*S;if(J>=0&&J<f)for(let Y=0;Y<v;++Y){const ee=U+Y*$;if(ee>=0&&ee<g){const ae=xn([F,J,ee,X],c,ie(s.shape)),le=xn([q,Y,X],d,ie(a.shape)),oe=u[ae]+h[le];oe>j&&(j=oe)}}}const K=xn([F,L,_,X],P,ie(k));z[K]=j}}}return{dataId:l.write(mo(z,s.dtype),k,s.dtype),shape:k,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JA={kernelName:cl,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:a,dy:r}=n,{strides:i,pad:o,dilations:l}=t,u=e,c=Cs(s.shape,u.data.get(s.dataId).values),h=Cs(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:x,strideHeight:C,strideWidth:w,filterHeight:I,filterWidth:N,dilationHeight:v,dilationWidth:S,outShape:$}=sr(s.shape,a.shape,i,o,"NHWC",l);M(r.rank===$.length,()=>`Error in ${cl}, dy must have the same rank as output ${$.length}, but got ${r.rank}`);const k=Cs($,u.data.get(r.dataId).values),E=Lm(a.shape,a.dtype);for(let z=0;z<d;++z)for(let V=0;V<m;++V){const F=V*C-x.top;for(let L=0;L<y;++L){const W=L*w-x.left;for(let _=0;_<g;++_){let U=Number.MIN_SAFE_INTEGER,X=0,j=0;for(let K=0;K<I;++K){const q=F+K*v;if(q>=0&&q<p)for(let J=0;J<N;++J){const Y=W+J*S;if(Y>=0&&Y<f){const ee=c[z][q][Y][_]+h[K][J][_];ee>U&&(U=ee,X=K,j=J)}}}E[X][j][_]+=k[z][V][L][_]}}}return{dataId:u.write(mo(E,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eD={kernelName:ul,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:a,dy:r}=n,{strides:i,pad:o,dilations:l}=t,u=e,c=Cs(s.shape,u.data.get(s.dataId).values),h=Cs(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:x,strideHeight:C,strideWidth:w,filterHeight:I,filterWidth:N,dilationHeight:v,dilationWidth:S,outShape:$}=sr(s.shape,a.shape,i,o,"NHWC",l);M(r.rank===$.length,()=>`Error in ${ul}, dy must have the same rank as output ${$.length}, but got ${r.rank}`);const k=Cs($,u.data.get(r.dataId).values),E=Lm(s.shape,s.dtype);for(let z=0;z<d;++z)for(let V=0;V<m;++V){const F=V*C-x.top;for(let L=0;L<y;++L){const W=L*w-x.left;for(let _=0;_<g;++_){let U=Number.MIN_SAFE_INTEGER,X=F<0?0:F,j=W<0?0:W;for(let K=0;K<I;++K){const q=F+K*v;if(q>=0&&q<p)for(let J=0;J<N;++J){const Y=W+J*S;if(Y>=0&&Y<f){const ee=c[z][q][Y][_]+h[K][J][_];ee>U&&(U=ee,X=q,j=Y)}}}E[z][X][j][_]+=k[z][V][L][_]}}}return{dataId:u.write(mo(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(n){const{inputs:e,backend:t,attrs:s}=n,{image:a}=e,{canvas:r,options:i}=s,{contextOptions:o,imageOptions:l}=i||{},u=(l==null?void 0:l.alpha)||1,c=(o==null?void 0:o.contextType)||"2d";if(c!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=r.getContext(c,(o==null?void 0:o.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=a.shape.slice(0,2),f=a.shape.length===2?1:a.shape[2],g=t.data.get(a.dataId).values,m=a.dtype==="float32"?255:1,y=new Uint8ClampedArray(p*d*4);for(let C=0;C<d*p;++C){const w=[0,0,0,255*u];for(let N=0;N<f;N++){const v=g[C*f+N];if(a.dtype==="float32"){if(v<0||v>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${v}.`)}else if(a.dtype==="int32"&&(v<0||v>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${v}.`);f===1?(w[0]=v*m,w[1]=v*m,w[2]=v*m):w[N]=v*m}const I=C*4;y[I+0]=Math.round(w[0]),y[I+1]=Math.round(w[1]),y[I+2]=Math.round(w[2]),y[I+3]=Math.round(w[3])}r.width=p,r.height=d;const x=new ImageData(y,p,d);return h.putImageData(x,0,0),a}const nD={kernelName:zf,backendName:"cpu",kernelFunc:tD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xr(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,keepDims:i}=s;ne(a,"sum");let o;a.dtype==="bool"?o=ss({inputs:{x:a},backend:t,attrs:{dtype:"int32"}}):o=Nn({inputs:{x:a},backend:t});const l=o.shape.length,u=me(r,o.shape),c=Be(u,l);let h=u,d=o;c!=null&&(d=Nt({inputs:{x:o},backend:t,attrs:{perm:c}}),h=Ue(h.length,l)),lt("sum",h,d.shape.length);const[p,f]=nt(d.shape,h),g=Ht(d.dtype,"int32");let m=ii(t,p,g);const y=B(f),x=t.data.get(m.dataId).values,C=t.data.get(d.dataId).values;for(let w=0;w<x.length;++w){const I=w*y;let N=0;for(let v=0;v<y;++v)N+=C[I+v];x[w]=N}if(i){const w=ot(m.shape,u),I=m;m=De({inputs:{x:m},backend:t,attrs:{shape:w}}),t.disposeIntermediateTensorInfo(I)}return t.disposeIntermediateTensorInfo(o),c!=null&&t.disposeIntermediateTensorInfo(d),m}const sD={kernelName:nc,backendName:"cpu",kernelFunc:xr};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(n){const{inputs:e,backend:t,attrs:s}=n,{equation:a}=s,r=e,{allDims:i,summedDims:o,idDims:l}=Kc(a,r.length);Qc(i.length,l,r);const{path:u,steps:c}=Zc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let g=0;g<h;++g){for(const m of c[g]){const{permutationIndices:y,expandDims:x}=Yc(p,l[m]);let C;Jc(y)?C=r[m]:(C=Nt({inputs:{x:r[m]},backend:t,attrs:{perm:y}}),f.push(C));const w=C.shape.slice();for(let I=0;I<x.length;++I)w.splice(x[I],0,1);Ie(C.shape,w)||(C=De({inputs:{x:C},backend:t,attrs:{shape:w}}),f.push(C)),d===null?d=C:(d=Wo({inputs:{a:C,b:d},backend:t}),f.push(d))}g<h-1&&(u[g]>=0&&(d=xr({inputs:{x:d},backend:t,attrs:{axis:u[g]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&t.disposeIntermediateTensorInfo(g);return d}const rD={kernelName:Pm,backendName:"cpu",kernelFunc:aD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n){const{inputs:e,backend:t}=n,{dy:s,y:a}=e;ne([s,a],"eluGrad");const r=new Float32Array(B(a.shape)),i=t.data.get(a.dataId).values,o=t.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const u=i[l];u>=0?r[l]=o[l]:r[l]=o[l]*(u+1)}return t.makeTensorInfo(a.shape,"float32",r)}const oD={kernelName:yu,backendName:"cpu",kernelFunc:iD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lD=Wc,uD=Uc,cD=Gc,hD=Hc,dD=jc,pD=Xc,fD=ve(Ei,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+lD*t);return e*(1-((((pD*s+dD)*s+hD)*s+cD)*s+uD)*s*Math.exp(-t*t))}),mD={kernelName:Ei,backendName:"cpu",kernelFunc:fD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ui(n){const{inputs:e,backend:t,attrs:s}=n,{input:a}=e,{dim:r}=s,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(M(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),o.splice(l,0,1),De({inputs:{x:a},backend:t,attrs:{shape:o}})}const gD={kernelName:xu,backendName:"cpu",kernelFunc:ui};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yD=He((n,e)=>n/e),Gd=Qe(ji,yD),zl={kernelName:ji,backendName:"cpu",kernelFunc:Gd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _b(n,e,t){const s=n.shape,a=s[0],r=s[1],i=t.data.get(n.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,r],c=B(u),h=pt("float32",c),d=pt("float32",c);for(let m=0;m<a;m++){const y=Es({inputs:{x:o},backend:t,attrs:{begin:[m,0],size:[1,r]}}),x=Es({inputs:{x:l},backend:t,attrs:{begin:[m,0],size:[1,r]}}),C=Rt({inputs:{real:y,imag:x},backend:t}),{real:w,imag:I}=xD(C,e,t),N=Ln(w,I);for(let v=0;v<r;v++){const S=qc(N,v);h[m*r+v]=S.real,d[m*r+v]=S.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(C)}const p=t.makeTensorInfo(u,"float32",h),f=t.makeTensorInfo(u,"float32",d),g=Rt({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),g}function xD(n,e,t){const s=B(n.shape),a=t.data.get(n.dataId),r=t.data.get(a.complexTensorInfos.real.dataId).values,i=t.data.get(a.complexTensorInfos.imag.dataId).values;if(bD(s)){const o=Vl(r,i,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const u=t.makeTensorInfo(l,"float32",o.real),c=t.makeTensorInfo(l,"float32",o.imag),h=t.makeTensorInfo([],"float32",ls(s,"float32")),d=Nn({inputs:{x:h},backend:t}),p=zl.kernelFunc({inputs:{a:u,b:h},backend:t}),f=zl.kernelFunc({inputs:{a:c,b:d},backend:t}),g=t.data.get(p.dataId).values,m=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:g,imag:m}}return o}else{const o=Ln(r,i),l=wD(o,s,e);return Vg(l)}}function bD(n){return(n&n-1)===0}function Vl(n,e,t,s,a){if(t===1)return{real:n,imag:e};const r=Ln(n,e),i=t/2,o=Bg(r),l=o.real,u=o.imag,c=[l.length],h=a.makeTensorInfo(c,"float32",l),d=a.makeTensorInfo(c,"float32",u),p=Rt({inputs:{real:h,imag:d},backend:a}),f=Mg(r),g=f.real,m=f.imag,y=[g.length],x=a.makeTensorInfo(y,"float32",g),C=a.makeTensorInfo(y,"float32",m),w=Rt({inputs:{real:x,imag:C},backend:a}),I=Vl(l,u,i,s,a),N=I.real,v=I.imag,S=[N.length],$=a.makeTensorInfo(S,"float32",N),k=a.makeTensorInfo(S,"float32",v),E=Rt({inputs:{real:$,imag:k},backend:a}),P=Vl(g,m,i,s,a),z=P.real,V=P.imag,F=[z.length],L=a.makeTensorInfo(F,"float32",z),W=a.makeTensorInfo(F,"float32",V),_=Rt({inputs:{real:L,imag:W},backend:a}),U=Ug(t,s),X=[U.real.length],j=a.makeTensorInfo(X,"float32",U.real),K=a.makeTensorInfo(X,"float32",U.imag),q=Rt({inputs:{real:j,imag:K},backend:a}),J=Wo({inputs:{a:q,b:_},backend:a}),Y=ra({inputs:{a:E,b:J},backend:a}),ee=Wd({inputs:{a:E,b:J},backend:a}),ae=Rs({inputs:{input:Y},backend:a}),le=Rs({inputs:{input:ee},backend:a}),oe=ia({inputs:{input:Y},backend:a}),he=ia({inputs:{input:ee},backend:a}),de=oa({inputs:[ae,le],backend:a,attrs:{axis:0}}),Ne=oa({inputs:[oe,he],backend:a,attrs:{axis:0}}),Ee=a.data.get(de.dataId).values,Me=a.data.get(Ne.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(J),a.disposeIntermediateTensorInfo(Y),a.disposeIntermediateTensorInfo(ee),a.disposeIntermediateTensorInfo(ae),a.disposeIntermediateTensorInfo(oe),a.disposeIntermediateTensorInfo(le),a.disposeIntermediateTensorInfo(he),a.disposeIntermediateTensorInfo(de),a.disposeIntermediateTensorInfo(Ne),{real:Ee,imag:Me}}function wD(n,e,t){const s=new Float32Array(e*2);for(let a=0;a<e;a++){let r=0,i=0;for(let o=0;o<e;o++){const l=Gg(a*o,e,t),u=qc(n,o);r+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}t&&(r/=e,i/=e),Wg(s,r,i,a)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(n){const{inputs:e,backend:t}=n,{input:s}=e,a=B(s.shape),r=s.shape[s.shape.length-1],i=a/r,o=De({inputs:{x:s},backend:t,attrs:{shape:[i,r]}}),l=_b(o,!1,t),u=De({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),u}const ID={kernelName:zm,backendName:"cpu",kernelFunc:CD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hd(n){const{backend:e,attrs:t}=n,{shape:s,value:a,dtype:r}=t,i=r||Bm(a),o=je(i,B(s));return vD(o,a,i),e.makeTensorInfo(s,i,o)}const ND={kernelName:Vm,backendName:"cpu",kernelFunc:Hd};function vD(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SD={kernelName:Mm,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,a=t,r=pt(s.dtype,B(s.shape)),[i,o,l,u]=s.shape,c=a.data.get(s.dataId).values;for(let d=0;d<i;d++){const p=d*l*o*u;for(let f=0;f<o;f++){const g=f*(l*u);for(let m=0;m<l;m++){const y=m*u;for(let x=0;x<u;x++){const C=Math.round(l-m-1),w=p+g+y+x;let I=c[w];if(C>=0&&C<l){const N=C*u,v=p+g+N+x;I=c[v]}r[w]=I}}}}return{dataId:a.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TD(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=Ob({inputs:{x:a,filter:r},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const m=g;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const y=De({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});g=ra({inputs:{a:g,b:y},backend:t}),t.disposeIntermediateTensorInfo(y)}else g=ra({inputs:{a:g,b:i},backend:t});t.disposeIntermediateTensorInfo(m)}if(p){const m=g;if(c==="NCHW"&&p==="prelu"&&o.shape.length===1&&o.shape[0]!==1){const y=De({inputs:{x:o},backend:t,attrs:{shape:[o.shape[0],1,1]}});g=li(t,g,p,y,f),t.disposeIntermediateTensorInfo(y)}else g=li(t,g,p,o,f);t.disposeIntermediateTensorInfo(m)}return g}const $D={kernelName:Wm,backendName:"cpu",kernelFunc:TD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=Fb({inputs:{x:a,filter:r},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const m=g;g=ra({inputs:{a:g,b:i},backend:t}),t.disposeIntermediateTensorInfo(m)}if(p){const m=g;g=li(t,g,p,o,f),t.disposeIntermediateTensorInfo(m)}return g}const RD={kernelName:Um,backendName:"cpu",kernelFunc:kD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ED(n){const{inputs:e,backend:t}=n,{params:s,indices:a}=e,r=B(s.shape),i=a.shape,o=i[i.length-1],[l,u,c,h]=go(s,a);if(u===0)return t.makeTensorInfo(l,s.dtype,[]);const d=t.data.get(a.dataId).values,p=t.bufferSync(s),f=Hx(d,p,s.dtype,u,o,c,h,s.shape,r);return t.makeTensorInfo(l,s.dtype,f.values)}const AD={kernelName:Gm,backendName:"cpu",kernelFunc:ED};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DD(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,indices:r}=e,{axis:i,batchDims:o}=s;ne([a,r],"gatherV2");const l=me(i,a.shape)[0],u=t.data.get(r.dataId).values,c=a.shape[l];for(let w=0;w<u.length;++w){const I=u[w];M(I<=c-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${c-1}]`)}let h=o;o==null&&(h=0);const d=B(r.shape),p=th(a,r,l,h),f=De({inputs:{x:a},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=De({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=t.bufferSync(g),x=t.bufferSync(f),C=jx(x,y,m);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),t.makeTensorInfo(p.outputShape,C.dtype,C.values)}const OD={kernelName:wu,backendName:"cpu",kernelFunc:DD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FD(n){const{inputs:e,backend:t}=n,{input:s}=e,a=B(s.shape),r=s.shape[s.shape.length-1],i=a/r,o=De({inputs:{x:s},backend:t,attrs:{shape:[i,r]}}),l=_b(o,!0,t),u=De({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),u}const _D={kernelName:Hm,backendName:"cpu",kernelFunc:FD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LD=ve(Li,n=>Number.isFinite(n)?1:0,"bool"),PD={kernelName:Li,backendName:"cpu",kernelFunc:LD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zD=ve(Pi,n=>Math.abs(n)===1/0?1:0,"bool"),VD={kernelName:Pi,backendName:"cpu",kernelFunc:zD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BD=ve(zi,n=>Number.isNaN(n)?1:0,"bool"),MD={kernelName:zi,backendName:"cpu",kernelFunc:BD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WD(n){const{backend:e,attrs:t}=n,{start:s,stop:a,num:r}=t,i=Qx(s,a,r);return e.makeTensorInfo([i.length],"float32",i)}const UD={kernelName:jm,backendName:"cpu",kernelFunc:WD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GD=ve(Vi,n=>Math.log1p(n)),HD={kernelName:Vi,backendName:"cpu",kernelFunc:GD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jD=He((n,e)=>n&&e),XD=Qe(Sc,jD,null,"bool"),qD={kernelName:Sc,backendName:"cpu",kernelFunc:XD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KD=ve(Tc,n=>n?0:1,"bool"),YD={kernelName:Tc,backendName:"cpu",kernelFunc:KD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QD=He((n,e)=>n||e),ZD=Qe($c,QD,null,"bool"),JD={kernelName:$c,backendName:"cpu",kernelFunc:ZD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{depthRadius:r,bias:i,alpha:o,beta:l}=s;ne(a,"LRN");const u=a.shape[3],c=u-1,h=t.data.get(a.dataId).values,d=B(a.shape),p=new Float32Array(d);function f(g){const m=g%u;let y=g-m+Math.max(0,m-r);const x=g-m+Math.min(m+r,c);let C=0;for(;y<=x;y++){const w=h[y];C+=w*w}return C}for(let g=0;g<d;g++){const m=f(g),y=h[g]*Math.pow(i+o*m,-l);p[g]=y}return t.makeTensorInfo(a.shape,a.dtype,p)}const tO={kernelName:vu,backendName:"cpu",kernelFunc:eO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,y:r,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s;ne(i,"LRNGrad");const h=B(i.shape),d=i.shape[3],p=t.data.get(i.dataId).values,f=t.data.get(a.dataId).values,g=t.data.get(r.dataId).values,m=new Float32Array(h),y=h;for(let x=0;x<y;x++){const C=x%d,w=x-C+Math.max(0,C-o),I=x-C+Math.min(d,C+o+1);let N=0;for(let v=w;v<I;v++)N+=Math.pow(f[v],2);N=u*N+l;for(let v=w;v<I;v++){let S=-2*u*c*f[v]*g[x]/N;x===v&&(S+=Math.pow(N,-c)),S*=p[x],m[v]+=S}}return t.makeTensorInfo(i.shape,a.dtype,m)}const sO={kernelName:Nu,backendName:"cpu",kernelFunc:nO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lb(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{reductionIndices:r,keepDims:i}=s,o=t;let l=a.shape;const u=l.length,c=me(r,l);let h=c;const d=Be(h,u);let p=o.data.get(a.dataId).values;if(d!=null){const w=new Array(u);for(let I=0;I<w.length;I++)w[I]=l[d[I]];p=Bd(p,l,a.dtype,d,w),h=Ue(h.length,u),l=w}ne(a,"max"),lt("max",h,u);const[f,g]=nt(l,h),m=B(g),y=Jx(p,m,f,a.dtype),x=o.write(y,f,a.dtype);let C=f;return i&&(C=ot(f,c)),{dataId:x,shape:C,dtype:a.dtype}}const aO={kernelName:Su,backendName:"cpu",kernelFunc:Lb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e;ne(a,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;M(vn(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ln(a.shape,r,i,u,o,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Ie(c.inShape,c.outShape))h=Nn({inputs:{x:a},backend:t});else{const d=t.data.get(a.dataId).values,p=ie(a.shape),f=Ud(d,a.shape,a.dtype,p,c,"max");h=t.makeTensorInfo(c.outShape,a.dtype,f.values)}return h}const iO={kernelName:Ru,backendName:"cpu",kernelFunc:rO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;ne(a,"maxPool3d");const c=zn(a.shape,r,i,1,o,l,u),h=t.data.get(a.dataId).values,d=Db(h,a.shape,a.dtype,ie(a.shape),c,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const lO={kernelName:$u,backendName:"cpu",kernelFunc:oO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,input:r}=e,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;ne([a,r],"maxPool3DGrad");const c=zn(r.shape,i,o,1,l,u),h=t.bufferSync(r),d=QE(h,c),p=c.strideDepth,f=c.strideHeight,g=c.strideWidth,m=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,C=c.effectiveFilterDepth,w=c.effectiveFilterHeight,I=c.effectiveFilterWidth,N=C-1-c.padInfo.front,v=I-1-c.padInfo.left,S=w-1-c.padInfo.top,$=we(r.shape,"float32"),k=t.bufferSync(a);for(let E=0;E<c.batchSize;++E)for(let P=0;P<c.inChannels;++P)for(let z=0;z<c.inDepth;++z)for(let V=0;V<c.inHeight;++V)for(let F=0;F<c.inWidth;++F){const L=z-N,W=V-S,_=F-v;let U=0;for(let X=0;X<C;X+=m){const j=(L+X)/p;if(!(j<0||j>=c.outDepth||Math.floor(j)!==j))for(let K=0;K<w;K+=y){const q=(W+K)/f;if(!(q<0||q>=c.outHeight||Math.floor(q)!==q))for(let J=0;J<I;J+=x){const Y=(_+J)/g;if(Y<0||Y>=c.outWidth||Math.floor(Y)!==Y)continue;const ee=C*w*I-1-d.get(E,j,q,Y,P),ae=X*w*I+K*I+J,le=ee===ae?1:0;if(le===0)continue;const oe=k.get(E,j,q,Y,P);U+=oe*le}}}$.set(U,E,z,V,F,P)}return t.makeTensorInfo($.shape,$.dtype,$.values)}const cO={kernelName:Tu,backendName:"cpu",kernelFunc:uO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,input:r,output:i}=e,o=r;ne([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ln(o.shape,l,u,1,c,h),p=t.data.get(o.dataId).values,f=we(d.outShape,o.dtype,Ab(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,C=d.effectiveFilterHeight,w=d.effectiveFilterWidth,I=w-1-d.padInfo.left,N=C-1-d.padInfo.top,v=we(o.shape,"float32"),S=t.data.get(a.dataId).values,$=we(a.shape,"float32",S);for(let k=0;k<d.batchSize;++k)for(let E=0;E<d.inChannels;++E)for(let P=0;P<d.inHeight;++P)for(let z=0;z<d.inWidth;++z){const V=P-N,F=z-I;let L=0;for(let W=0;W<C;W+=y){const _=(V+W)/g;if(!(_<0||_>=d.outHeight||Math.floor(_)!==_))for(let U=0;U<w;U+=x){const X=(F+U)/m;if(X<0||X>=d.outWidth||Math.floor(X)!==X)continue;const j=C*w-1-f.get(k,_,X,E),K=W*w+U,q=j===K?1:0;if(q===0)continue;const J=$.get(k,_,X,E);L+=J*q}}v.set(L,k,P,z,E)}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const dO={kernelName:ku,backendName:"cpu",kernelFunc:hO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(n,e,t,s,a){const r=ie(e),i=Ud(n,e,t,r,a,"max"),o=Ab(n,e,t,a,!0,s);return[i.values,o.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fO={kernelName:Xm,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:a,strides:r,pad:i,includeBatchInIndex:o}=e,l=t;ne(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=ln(s.shape,a,r,[1,1],i),[h,d]=pO(u,s.shape,s.dtype,o,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mO(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,keepDims:i}=s,o=me(r,a.shape),u=nt(a.shape,o)[1],c=B(u),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=ss({inputs:{x:a},backend:t,attrs:{dtype:"float32"}});h.push(p);const f=Gd({inputs:{a:p,b:d},backend:t});h.push(f);const g=xr({inputs:{x:f},backend:t,attrs:{axis:r,keepDims:i}});return h.forEach(m=>t.disposeIntermediateTensorInfo(m)),g}const gO={kernelName:Eu,backendName:"cpu",kernelFunc:mO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,keepDims:i}=s;ne(a,"min");const o=me(r,a.shape);let l=o;const u=Be(l,a.shape.length);let c=a;u!=null&&(c=Nt({inputs:{x:a},backend:t,attrs:{perm:u}}),l=Ue(l.length,a.shape.length)),lt("min",l,c.shape.length);const[h,d]=nt(c.shape,l),p=B(d),f=At(B(h),c.dtype),g=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let C=g[x];for(let w=0;w<p;++w){const I=g[x+w];(Number.isNaN(I)||I<C)&&(C=I)}f[y]=C}u!=null&&t.disposeIntermediateTensorInfo(c);const m=t.makeTensorInfo(h,c.dtype,f);if(i){const y=ot(h,o),x=De({inputs:{x:m},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(m),x}return m}const xO={kernelName:Au,backendName:"cpu",kernelFunc:yO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{paddings:r,mode:i}=s;ne(a,"mirrorPad");const o=r.map((C,w)=>C[0]+a.shape[w]+C[1]),l=r.map(C=>C[0]),u=r.map((C,w)=>C[0]+a.shape[w]),c=i==="reflect"?0:1,h=t.data.get(a.dataId).values,d=a.shape.length,p=ie(a.shape),f=B(o),g=o.length,m=ie(o),y=pt(a.dtype,f);for(let C=0;C<f;C++){let w=fa(C,g,m);for(let N=0;N<g;N++)w[N]<l[N]?w[N]=l[N]*2-w[N]-c:w[N]>=u[N]&&(w[N]=(u[N]-1)*2-w[N]+c);w=w.map((N,v)=>N-l[v]);const I=xn(w,d,p);y[C]=h[I]}return{dataId:t.write(y,o,a.dtype),shape:o,dtype:a.dtype}}const wO={kernelName:Du,backendName:"cpu",kernelFunc:bO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CO=He((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),IO=Qe(Ui,CO),NO={kernelName:Ui,backendName:"cpu",kernelFunc:IO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pb(n){const{inputs:e,backend:t,attrs:s}=n,{logits:a}=e,{dim:r}=s,i=a.shape.length;let o=r;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=me([o],a.shape),u=Lb({inputs:{x:a},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),c=ot(u.shape,l),h=De({inputs:{x:u},backend:t,attrs:{shape:c}}),d=Wd({inputs:{a,b:h},backend:t}),p=Mx({inputs:{x:d},backend:t}),f=xr({inputs:{x:p},backend:t,attrs:{axis:l,keepDims:!1}}),g=De({inputs:{x:f},backend:t,attrs:{shape:c}}),m=Gd({inputs:{a:p,b:g},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),m}const vO={kernelName:Zu,backendName:"cpu",kernelFunc:Pb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(n){const{inputs:e,backend:t,attrs:s}=n,{logits:a}=e,{numSamples:r,seed:i,normalized:o}=s;ne(a,"multinomial");const l=o?a:Pb({inputs:{logits:a},backend:t,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=t.data.get(l.dataId).values,d=[u,r],p=At(B(d),"int32");for(let f=0;f<u;++f){const g=f*c,m=new Float32Array(c-1);m[0]=h[g];for(let C=1;C<m.length;++C)m[C]=m[C-1]+h[g+C];const y=yc.alea(i.toString()),x=f*r;for(let C=0;C<r;++C){const w=y();p[x+C]=m.length;for(let I=0;I<m.length;I++)if(w<m[I]){p[x+C]=I;break}}}return o||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(d,"int32",p)}const TO={kernelName:qm,backendName:"cpu",kernelFunc:SO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $O=Xl;function kO(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;ne(a,"NonMaxSuppression");const u=t.data.get(a.dataId).values,c=t.data.get(r.dataId).values,{selectedIndices:h}=$O(u,c,i,o,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const RO={kernelName:Km,backendName:"cpu",kernelFunc:kO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EO=ql;function AO(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;ne(a,"NonMaxSuppressionPadded");const c=t.data.get(a.dataId).values,h=t.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=EO(c,h,i,o,l,u);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const DO={kernelName:Ym,backendName:"cpu",kernelFunc:AO};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OO=Kl;function FO(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;ne(a,"NonMaxSuppressionWithScore");const c=t.data.get(a.dataId).values,h=t.data.get(r.dataId).values,d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:y}=OO(c,h,d,p,f,g);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const _O={kernelName:Qm,backendName:"cpu",kernelFunc:FO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(n){const{inputs:e,backend:t,attrs:s}=n,{indices:a}=e,{dtype:r,depth:i,onValue:o,offValue:l}=s;ne(a,"oneHot");const u=B(a.shape),c=new Float32Array(u*i);c.fill(l);const h=t.data.get(a.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(c[d*i+h[d]]=o);return t.makeTensorInfo([...a.shape,i],r,c)}const PO={kernelName:_u,backendName:"cpu",kernelFunc:LO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ci(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const a=Rs({inputs:{input:s},backend:t}),r=ci({inputs:{x:a},backend:t}),i=ia({inputs:{input:s},backend:t}),o=ci({inputs:{x:i},backend:t}),l=Rt({inputs:{real:r,imag:o},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),l}else return Hd({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const zO={kernelName:lc,backendName:"cpu",kernelFunc:ci};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zb(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const a=Rs({inputs:{input:s},backend:t}),r=zb({inputs:{x:a},backend:t}),i=ia({inputs:{input:s},backend:t}),o=ci({inputs:{x:i},backend:t}),l=Rt({inputs:{real:r,imag:o},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),l}else return Hd({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const VO={kernelName:Lu,backendName:"cpu",kernelFunc:zb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vb(n){const{inputs:e,backend:t,attrs:s}=n,{axis:a}=s;if(e.length===1)return ui({inputs:{input:e[0]},backend:t,attrs:{dim:a}});const r=e[0].shape,i=e[0].dtype;e.forEach(c=>{Zm(r,c.shape,"All tensors passed to stack must have matching shapes"),M(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const h=ui({inputs:{input:c},backend:t,attrs:{dim:a}});return o.push(h),h}),u=oa({inputs:l,backend:t,attrs:{axis:a}});return o.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const BO={kernelName:Pu,backendName:"cpu",kernelFunc:Vb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{paddings:r,constantValue:i}=s;ne(a,"pad");const o=r.map((x,C)=>x[0]+a.shape[C]+x[1]),l=r.map(x=>x[0]),u=t.data.get(a.dataId).values,c=B(a.shape),h=a.shape.length,d=ie(a.shape),p=B(o),f=o.length,g=ie(o),m=pt(a.dtype,p);i!==0&&m.fill(i);for(let x=0;x<c;x++){const w=fa(x,h,d).map((N,v)=>N+l[v]),I=xn(w,f,g);m[I]=u[x]}return{dataId:t.write(m,o,a.dtype),shape:o,dtype:a.dtype}}const Bb={kernelName:zu,backendName:"cpu",kernelFunc:MO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WO=He((n,e)=>Math.pow(n,e)),UO=Qe(Hi,WO),GO={kernelName:Hi,backendName:"cpu",kernelFunc:UO};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HO(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=e,o=a.map(m=>t.data.get(m.dataId).values),l=a.map(m=>m.shape),u=t.data.get(r.dataId).values,c=t.data.get(i.dataId).values,[h,d,p]=rb(o,l,u,r.shape,r.dtype,c,i.shape),f=h.map(m=>t.makeTensorInfo([m.length],"int32",m)),g=t.makeTensorInfo(p,r.dtype,d);return f.concat([g])}const jO={kernelName:Jm,backendName:"cpu",kernelFunc:HO};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XO(n){const{inputs:e,backend:t}=n,{starts:s,limits:a,deltas:r}=e,i=t.data.get(s.dataId).values,o=t.data.get(a.dataId).values,l=t.data.get(r.dataId).values,[u,c]=ib(i,s.shape,s.dtype,o,a.shape,l,r.shape),h=t.makeTensorInfo([u.length],"int32",u),d=t.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const qO={kernelName:eg,backendName:"cpu",kernelFunc:XO};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KO(n){const{inputs:e,backend:t,attrs:s}=n,{shape:a,values:r,defaultValue:i,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,u=t.data.get(a.dataId).values,c=t.data.get(r.dataId).values,h=t.data.get(i.dataId).values,d=o.map(m=>t.data.get(m.dataId).values),p=o.map(m=>m.shape),[f,g]=ob(u,a.shape,c,r.shape,r.dtype,h,i.shape,d,p,l);return t.makeTensorInfo(f,r.dtype,g)}const YO={kernelName:tg,backendName:"cpu",kernelFunc:KO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QO(n){const{backend:e,attrs:t}=n,{start:s,stop:a,dtype:r,step:i}=t,o=lb(s,a,i,r);return e.makeTensorInfo([o.length],r,o)}const ZO={kernelName:ng,backendName:"cpu",kernelFunc:QO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JO=ve(Xi,n=>1/n),eF={kernelName:Xi,backendName:"cpu",kernelFunc:JO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tF(n){const{inputs:e,backend:t,attrs:s}=n,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s;ne(a,"resizeBilinear");const l=ie(a.shape),[u,c]=o,[h,d,p,f]=a.shape,g=t.data.get(a.dataId).values,m=new Float32Array(B([h,u,c,f])),y=[r&&u>1?d-1:d,r&&c>1?p-1:p],x=[r&&u>1?u-1:u,r&&c>1?c-1:c];let C=0;const w=y[0]/x[0],I=y[1]/x[1];for(let N=0;N<h;N++)for(let v=0;v<u;v++){let S;i?S=w*(v+.5)-.5:S=w*v;const $=Math.max(0,Math.floor(S)),k=S-$,E=Math.min(d-1,Math.ceil(S)),P=N*l[0]+$*l[1],z=N*l[0]+E*l[1];for(let V=0;V<c;V++){let F;i?F=I*(V+.5)-.5:F=I*V;const L=Math.max(0,Math.floor(F)),W=F-L,_=Math.min(p-1,Math.ceil(F)),U=P+L*l[2],X=z+L*l[2],j=P+_*l[2],K=z+_*l[2];for(let q=0;q<f;q++){const J=g[U+q],Y=g[X+q],ee=g[j+q],ae=g[K+q],le=J+(ee-J)*W,oe=Y+(ae-Y)*W,he=le+(oe-le)*k;m[C++]=he}}}return t.makeTensorInfo([h,u,c,f],"float32",m)}const nF={kernelName:Uu,backendName:"cpu",kernelFunc:tF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sF(n){const{inputs:e,backend:t,attrs:s}=n,{images:a,dy:r}=e,{alignCorners:i}=s;ne([r,a],"resizeBilinearGrad");const o=ie(a.shape),[l,u,c,h]=a.shape,[,d,p]=r.shape,f=new Float32Array(l*u*c*h),g=[i&&d>1?u-1:u,i&&p>1?c-1:c],m=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=g[0]/m[0],x=g[1]/m[1],C=t.data.get(r.dataId).values;let w=0;for(let I=0;I<l;I++){const N=I*o[0];for(let v=0;v<d;v++){const S=v*y,$=Math.floor(S),k=Math.min(Math.ceil(S),u-1),E=N+$*o[1],P=N+k*o[1],z=S-$,V=1-z;for(let F=0;F<p;F++){const L=F*x,W=Math.floor(L),_=Math.min(Math.ceil(L),c-1),U=L-W,X=1-U,j=E+W*o[2],K=E+_*o[2],q=P+W*o[2],J=P+_*o[2],Y=V*X,ee=V*U,ae=z*X,le=z*U;for(let oe=0;oe<h;oe++){const he=C[w++];f[j+oe]+=he*Y,f[K+oe]+=he*ee,f[q+oe]+=he*ae,f[J+oe]+=he*le}}}}return t.makeTensorInfo([l,c,u,h],"float32",f)}const aF={kernelName:Gu,backendName:"cpu",kernelFunc:sF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF(n){const{inputs:e,backend:t,attrs:s}=n,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s;ne(a,"resizeNearestNeighbor");const l=ie(a.shape),[u,c]=o,[h,d,p,f]=a.shape,g=t.data.get(a.dataId).values,m=new Float32Array(h*u*c*f),y=[r&&u>1?d-1:d,r&&c>1?p-1:p],x=[r&&u>1?u-1:u,r&&c>1?c-1:c],C=y[0]/x[0],w=y[1]/x[1];let I=0;for(let N=0;N<h;N++){const v=N*l[0];for(let S=0;S<u;S++){const $=i?C*(S+.5):C*S;let k=Math.min(d-1,r?Math.round($):Math.floor($));i&&(k=Math.max(0,k));const E=v+k*l[1];for(let P=0;P<c;P++){const z=i?w*(P+.5):w*P;let V=Math.min(p-1,r?Math.round(z):Math.floor(z));i&&(V=Math.max(0,V));const F=E+V*l[2];for(let L=0;L<f;L++){const W=g[F+L];m[I++]=W}}}}return t.makeTensorInfo([h,u,c,f],a.dtype,m)}const iF={kernelName:Hu,backendName:"cpu",kernelFunc:rF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(n){const{inputs:e,backend:t,attrs:s}=n,{images:a,dy:r}=e,{alignCorners:i}=s;ne([r,a],"resizeNearestNeighborGrad");const o=ie(a.shape),l=ie(r.shape),[u,c,h,d]=a.shape,[,p,f]=r.shape,g=new Float32Array(u*c*h*d),m=t.data.get(r.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],x=[i&&p>1?p-1:p,i&&f>1?f-1:f],C=y[0]/x[0],w=y[1]/x[1],I=1/C,N=1/w,v=Math.ceil(I)*2+2,S=Math.ceil(N)*2+2;for(let $=0;$<u;$++){const k=$*o[0];for(let E=0;E<c;E++){const P=k+E*o[1],z=Math.floor(E*I),V=Math.floor(z-v/2);for(let F=0;F<h;F++){const L=P+F*o[2],W=Math.floor(F*N),_=Math.floor(W-S/2);for(let U=0;U<d;U++){let X=0;for(let j=0;j<v;j++){const K=j+V;if(K<0||K>=p)continue;const q=k+K*l[1],J=K*C,Y=Math.min(c-1,i?Math.round(J):Math.floor(J));if(E===Y)for(let ee=0;ee<S;ee++){const ae=ee+_;if(ae<0||ae>=f)continue;const le=q+ae*l[2],oe=ae*w,he=Math.min(h-1,i?Math.round(oe):Math.floor(oe));F===he&&(X+=m[le+U])}}g[L+U]=X}}}}return t.makeTensorInfo(a.shape,a.dtype,g)}const lF={kernelName:ju,backendName:"cpu",kernelFunc:oF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{dims:r}=s;ne(a,"reverse");const i=a.shape.length,o=me(r,a.shape);if(i===0)return Nn({inputs:{x:a},backend:t});const l=new dt(a.shape,a.dtype),u=t.bufferSync(a);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();o.forEach(p=>d[p]=a.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const cF={kernelName:Xu,backendName:"cpu",kernelFunc:uF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hF={kernelName:sg,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:a,fillValue:r,center:i}=e,o=t,l=pt(s.dtype,B(s.shape)),[u,c,h,d]=s.shape,[p,f]=Vc(i,c,h),g=255,m=Math.sin(a),y=Math.cos(a),x=o.data.get(s.dataId).values;for(let w=0;w<u;w++){const I=w*h*c*d;for(let N=0;N<c;N++){const v=N*(h*d);for(let S=0;S<h;S++){const $=S*d;for(let k=0;k<d;k++){const E=[u,N,S,k],P=E[2],z=E[1];let V=(P-p)*y-(z-f)*m,F=(P-p)*m+(z-f)*y;V=Math.round(V+p),F=Math.round(F+f);let L=r;if(typeof r!="number"&&(k===3?L=g:L=r[k]),V>=0&&V<h&&F>=0&&F<c){const _=F*(h*d),U=V*d,X=I+_+U+k;L=x[X]}const W=I+v+$+k;l[W]=L}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dF=ve(Yi,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),pF={kernelName:Yi,backendName:"cpu",kernelFunc:dF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(n){const{inputs:e,backend:t,attrs:s}=n,{indices:a,updates:r}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Fs(r,a,i),d=!0,p=t.bufferSync(a),f=t.bufferSync(r),g=bs(p,f,i,h,u,l,o,c,0,d);return t.makeTensorInfo(i,g.dtype,g.values)}const mF={kernelName:ag,backendName:"cpu",kernelFunc:fF};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(n,e){let t=0,s=n.length,a=0;for(;t<s;)a=Math.floor((t+s)/2),n[a]<e?t=a+1:s=a;return s}function yF(n,e){let t=0,s=n.length,a=0;for(;t<s;)a=Math.floor((t+s)/2),n[a]<=e?t=a+1:s=a;return s}function xF(n,e,t,s,a,r){const i=je("int32",t*a);for(let o=0;o<t;++o){const l=n.slice(o*s,(o+1)*s),u=o*a;for(let c=0;c<a;++c)i[u+c]=r==="left"?gF(l,e[c+u]):yF(l,e[c+u])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:a,values:r}=e,{side:i}=s,o=t.data.get(a.dataId).values,l=t.data.get(r.dataId).values,u=xF(o,l,a.shape[0],a.shape[1],r.shape[1],i);return t.makeTensorInfo(r.shape,"int32",u)}const wF={kernelName:rg,backendName:"cpu",kernelFunc:bF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CF(n){const{inputs:e,backend:t}=n,{condition:s,t:a,e:r}=e;ne([s,a,r],"select");const i=s.shape.length,o=t.data.get(s.dataId).values,l=t.data.get(a.dataId).values,u=t.data.get(r.dataId).values,c=Ht(a.dtype,r.dtype),h=At(B(a.shape),c);let d=0;const p=i===0||i>1||a.shape.length===1?1:B(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let g=0;g<p;g++)o[f]===1?h[d++]=l[f]:h[d++]=u[f];return t.makeTensorInfo(a.shape,c,h)}const IF={kernelName:qu,backendName:"cpu",kernelFunc:CF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NF=bo,vF=wo,SF=ve(Zi,n=>n>=0?vF*n:NF*(Math.exp(n)-1)),TF={kernelName:Zi,backendName:"cpu",kernelFunc:SF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F=ve(eo,n=>n<0?-1:n>0?1:0),kF={kernelName:eo,backendName:"cpu",kernelFunc:$F};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF=ve(to,n=>Math.sin(n)),EF={kernelName:to,backendName:"cpu",kernelFunc:RF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AF=ve(no,n=>Math.sinh(n)),DF={kernelName:no,backendName:"cpu",kernelFunc:AF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OF=11920928955078125e-23,df=Math.log(OF)+2,FF=ve(so,n=>{const e=n>-df,t=n<df,s=Math.exp(n);let a;return t?a=s:e?a=n:a=Math.log(1+s),a}),_F={kernelName:so,backendName:"cpu",kernelFunc:FF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{blockShape:r,paddings:i}=s;ne([a],"spaceToBatchND");const o=B(r),l=[[0,0]];l.push(...i);for(let N=1+r.length;N<a.shape.length;++N)l.push([0,0]);const u=Bb.kernelFunc({inputs:{x:a},backend:t,attrs:{paddings:l,constantValue:0}}),c=ir(u.shape,r,o,!1),h=or(c.length,r.length,!1),d=lr(u.shape,r,o,!1),g=De({inputs:{x:u},backend:t,attrs:{shape:c}}),x=Nt({inputs:{x:g},backend:t,attrs:{perm:h}}),I=De({inputs:{x},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),I}const PF={kernelName:Ju,backendName:"cpu",kernelFunc:LF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zF(n){const{inputs:e,backend:t}=n,{indices:s,values:a,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const o=t.data.get(s.dataId).values,l=t.data.get(a.dataId).values,u=t.data.get(r.dataId).values,c=t.data.get(i.dataId).values[0],[h,d,p,f,g]=db(o,s.shape,s.dtype,l,a.dtype,u,c);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],a.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(m=>Number(m)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const VF={kernelName:ig,backendName:"cpu",kernelFunc:zF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:a,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(t.data.get(a.dataId).values),o=t.data.get(s.dataId).values,l=Array.from(t.data.get(r.dataId).values),[u,c,h]=pb(o,s.shape,s.dtype,i,l);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const MF={kernelName:og,backendName:"cpu",kernelFunc:BF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WF(n){const{inputs:e,backend:t}=n,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,o=t.data.get(a.dataId).values,l=t.data.get(r.dataId).values,[u,c]=Md(i,s.shape,s.dtype,o,l,!0);return t.makeTensorInfo(c,s.dtype,u)}const UF={kernelName:lg,backendName:"cpu",kernelFunc:WF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(n){const{inputs:e,backend:t}=n,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,o=t.data.get(a.dataId).values,l=t.data.get(r.dataId).values,[u,c]=Md(i,s.shape,s.dtype,o,l);return t.makeTensorInfo(c,s.dtype,u)}const HF={kernelName:ug,backendName:"cpu",kernelFunc:GF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jF(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:a,sparseValues:r,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Fs(r,a,o),p=!1,f=t.bufferSync(a);let g;switch(r.dtype){case"bool":{const m=t.bufferSync(r),y=!!t.data.get(i.dataId).values[0];g=bs(f,m,o,d,c,u,l,h,y,p);break}case"float32":{const m=t.bufferSync(r),y=t.data.get(i.dataId).values[0];g=bs(f,m,o,d,c,u,l,h,y,p);break}case"int32":{const m=t.bufferSync(r),y=t.data.get(i.dataId).values[0];g=bs(f,m,o,d,c,u,l,h,y,p);break}case"string":{const m=t.bufferSync(r),y=la(t.data.get(i.dataId).values[0]);g=bs(f,m,o,d,c,u,l,h,y,p);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return t.makeTensorInfo(o,g.dtype,g.values)}const XF={kernelName:cg,backendName:"cpu",kernelFunc:jF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{numOrSizeSplits:r,axis:i}=s,o=me(i,a.shape)[0],l=eh(a,r,o),u=new Array(a.shape.length).fill(0),c=a.shape.slice();return l.map(h=>{const d=[...c];d[o]=h;const p=Es({inputs:{x:a},backend:t,attrs:{begin:u,size:d}});return u[o]+=h,p})}const KF={kernelName:ec,backendName:"cpu",kernelFunc:qF};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YF={kernelName:tc,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;ne(t,"square");const a=s.data.get(t.dataId).values,r=new Float32Array(a.length);for(let o=0;o<a.length;++o){const l=a[o];r[o]=l*l}return{dataId:s.write(r,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QF=ve(oo,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),ZF={kernelName:oo,backendName:"cpu",kernelFunc:QF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JF(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;ne(a,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:x,end:C,strides:w}=Lc(a.shape,r,i,o,l,u,c,h,d);let I;if(g)I=De({inputs:{x:a},backend:t,attrs:{shape:f}});else if(m||y){M(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const N=Oc(x,C,w),v=Es({inputs:{x:a},backend:t,attrs:{begin:x,size:N}});I=De({inputs:{x:v},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(v)}else{const N=t.bufferSync(a),v=gb(p,N,w,x);I=t.makeTensorInfo(f,v.dtype,v.values)}return I}const e_={kernelName:hg,backendName:"cpu",kernelFunc:JF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t_(n){const{inputs:e,backend:t,attrs:s}=n,{separator:a,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.data.get(c.dataId).values,p=t.data.get(h.dataId).values,[f,g]=yb(d,p,a,r,i,o,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",g)]}const n_={kernelName:dg,backendName:"cpu",kernelFunc:t_};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:a}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values[0],[u,c,h]=xb(o,l,a),d=c.length;return[t.makeTensorInfo([d,2],"int32",u),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const a_={kernelName:pg,backendName:"cpu",kernelFunc:s_};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r_(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:a}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=t.data.get(r.dataId).values,o=bb(i,a);return t.makeTensorInfo(r.shape,"int32",o)}const i_={kernelName:fg,backendName:"cpu",kernelFunc:r_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o_=ve(uo,n=>Math.tan(n)),l_={kernelName:uo,backendName:"cpu",kernelFunc:o_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u_=ve(co,n=>Math.tanh(n)),c_={kernelName:co,backendName:"cpu",kernelFunc:u_};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h_(n){const{inputs:e,backend:t}=n,{tensor:s,indices:a,updates:r}=e,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=Fs(r,a,s.shape),h=!1,d=t.bufferSync(a),p=t.bufferSync(r),f=t.bufferSync(s),g=bs(d,p,s.shape,c,l,o,i,u,f,h);return t.makeTensorInfo(s.shape,g.dtype,g.values)}const d_={kernelName:mg,backendName:"cpu",kernelFunc:h_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p_(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{reps:r}=s;ne(a,"tile");const i=Cb(t.bufferSync(a),r);return t.makeTensorInfo(i.shape,i.dtype,i.values)}const f_={kernelName:sc,backendName:"cpu",kernelFunc:p_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m_(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{k:r,sorted:i}=s;ne(a,"topk");const o=t.data.get(a.dataId).values,[l,u]=Nb(o,a.shape,a.dtype,r,i);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}const g_={kernelName:gg,backendName:"cpu",kernelFunc:m_};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_(n){const{inputs:e,attrs:t,backend:s}=n,{image:a,transforms:r}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=t,[c,h,d,p]=a.shape,[f,g]=u??[h,d],m=[c,f,g,p],y=ie(a.shape),x=y[0],C=y[1],w=y[2],I=ie(m),N=I[0],v=I[1],S=I[2],$=pt(a.dtype,B(m));$.fill(l);const k=s.data.get(a.dataId).values,E=s.data.get(r.dataId).values;for(let z=0;z<c;++z){const V=r.shape[0]===1?E:E.subarray(z*8,z*8+8);for(let F=0;F<f;++F)for(let L=0;L<g;++L)for(let W=0;W<p;++W){let _;const U=V[6]*L+V[7]*F+1;if(U===0)continue;const X=(V[0]*L+V[1]*F+V[2])/U,j=(V[3]*L+V[4]*F+V[5])/U,K=pf(X,d,o),q=pf(j,h,o);switch(i){case"nearest":_=N_(k,h,d,x,C,w,z,q,K,W,l);break;case"bilinear":_=v_(k,h,d,x,C,w,z,q,K,W,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const J=z*N+F*v+L*S+W;$[J]=_}return s.makeTensorInfo(m,a.dtype,$)}return{dataId:s.write($,m,a.dtype),shape:a.shape,dtype:a.dtype}}const x_={kernelName:yg,backendName:"cpu",kernelFunc:y_};function pf(n,e,t){switch(t){case"reflect":return b_(n,e);case"wrap":return w_(n,e);case"nearest":return I_(n,e);case"constant":default:return C_(n)}}function b_(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return vs(0,t,e-1)}function w_(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return vs(0,t,e-1)}function C_(n,e){return n}function I_(n,e){return vs(0,n,e-1)}function za(n,e,t,s,a,r,i,o,l,u,c){const h=i*s+o*a+l*r+u;return 0<=o&&o<e&&0<=l&&l<t?n[h]:c}function N_(n,e,t,s,a,r,i,o,l,u,c){const h=Math.round(o),d=Math.round(l);return za(n,e,t,s,a,r,i,h,d,u,c)}function v_(n,e,t,s,a,r,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1,g=(f-l)*za(n,e,t,s,a,r,i,h,d,u,c)+(l-d)*za(n,e,t,s,a,r,i,h,f,u,c),m=(f-l)*za(n,e,t,s,a,r,i,p,d,u,c)+(l-d)*za(n,e,t,s,a,r,i,p,f,u,c);return(p-o)*g+(o-h)*m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_(n){const{inputs:e,attrs:t,backend:s}=n,{axis:a}=t,{x:r}=e;ne(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:o,outputShape:l,indices:u}=vb(i,a,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const T_={kernelName:xg,backendName:"cpu",kernelFunc:S_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_(n){const{inputs:e,backend:t,attrs:s}=n,{value:a}=e;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a.shape.length,o=a.shape[r],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==r&&(l[u++]=a.shape[p]);const c=new Array(i).fill(0),h=a.shape.slice();h[r]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[r]=p;const f=Es({inputs:{x:a},backend:t,attrs:{begin:c,size:h}});d[p]=De({inputs:{x:f},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(f)}return d}const k_={kernelName:rc,backendName:"cpu",kernelFunc:$_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R_(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,segmentIds:r}=e,{numSegments:i}=s;ne(a,"unsortedSegmentSum");const o=a.shape.length,l=r.shape.length,u=[],c=[],h=o-l;let d=r;for(let f=0;f<h;++f){const g=ui({inputs:{input:d},backend:t,attrs:{dim:f+1}});d=g,c.push(g)}for(let f=0;f<i;++f){const g=ls(f,"int32"),m=t.makeTensorInfo([],"int32",g),y=Vx({inputs:{a:m,b:d},backend:t}),x=ss({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),C=Wo({inputs:{a:x,b:a},backend:t}),w=xr({inputs:{x:C},backend:t,attrs:{axis:0,keepDims:!1}});u.push(w),c.push(m),c.push(y),c.push(x),c.push(C),c.push(w)}const p=Vb({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const E_={kernelName:ic,backendName:"cpu",kernelFunc:R_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A_=[SE,aR,$E,RE,cR,AE,OE,_E,PE,VE,ME,UE,HE,qE,YE,JE,tA,sA,rA,NE,oA,uA,hA,dR,pA,lR,fR,mA,rR,yA,bA,wA,IA,vA,TA,kA,EA,DA,FA,LA,zA,BA,WA,GA,HA,XA,KA,QA,ZA,JA,eD,nD,rD,gE,oD,mR,mD,gR,gD,xR,ID,ND,SD,wR,IR,$D,RD,AD,OD,vR,TR,iR,_D,xA,PD,VD,MD,yE,kR,ER,UD,DR,HD,qD,YD,JD,tO,sO,aO,FR,iO,lO,cO,dO,fO,gO,xO,LR,wO,NO,TO,zR,BR,RO,DO,_O,WR,PO,VO,BO,Bb,GO,bE,HR,jO,qO,YO,ZO,oR,zl,eF,wE,CE,IE,nF,aF,iF,lF,cF,hF,pF,JR,mF,wF,IF,TF,tE,kF,EF,DF,nE,vO,_F,PF,VF,MF,UF,HF,XF,KF,rE,YF,oE,uE,ZF,e_,n_,a_,i_,pE,sD,l_,c_,d_,f_,g_,x_,UR,T_,k_,E_,zO];for(const n of A_)bg(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ys={},Dr={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function D_(n,e){ys[n]=e}function on(n,e){if(!(n in ys)||e!=null){const s=F_(n,e);if(s!==null)ys[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=ys[n];return t==null||t.isContextLost()?(delete ys[n],on(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),ys[n])}function O_(n){if(!O().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function F_(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??O_(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete ys[n]},!1),O().getBool("SOFTWARE_WEBGL_ENABLED")&&(Dr.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Dr)||t.getContext("experimental-webgl",Dr):t.getContext("webgl2",Dr)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qa;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Qa||(Qa={}));var Lt;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Lt||(Lt={}));var rt;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(rt||(rt={}));function br(n,e){return[e,n]}function __(n,e){return n*e}function Or(n){const e=B(n),t=Math.ceil(e/4);return fl(t)}function Ca(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function L_(n,e){const[t,s]=Ca(n,e);return t*s*4}function jd(n,e){const t=n;let s,a,r,i,o,l,u,c,h,d;return O().getNumber("WEBGL_VERSION")===2?(s=t.R32F,a=t.R16F,r=t.RGBA16F,i=t.RGBA32F,o=t.RED,u=4,c=1,h=t.HALF_FLOAT,d=t.FLOAT,l=t.RGBA8):(s=n.RGBA,a=n.RGBA,r=n.RGBA,i=t.RGBA,o=n.RGBA,u=4,c=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z(n,e){const t=e();return O().getBool("DEBUG")&&P_(n),t}function P_(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+Wb(n,e))}const z_=596e-10,V_=65504;function Mb(n){return!!(O().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||z_<Math.abs(n)&&Math.abs(n)<V_)}function Wb(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Va(n,e){return Vn(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Ub(n,e){const t=Vn(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Z(n,()=>n.shaderSource(t,e)),Z(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function Gb(n,e){const t=Vn(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Z(n,()=>n.shaderSource(t,e)),Z(n,()=>n.compileShader(t)),O().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw Xd(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const B_=/ERROR: [0-9]+:([0-9]+):/g;function Xd(n,e){const t=B_.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],a=n.split(`
`),r=a.length.toString().length+2,i=a.map((h,d)=>fp((d+1).toString(),r)+h);let o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${fp(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function Hb(n){return Vn(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function jb(n,e){if(Z(n,()=>n.linkProgram(e)),!O().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function zr(n,e){if(Z(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Xb(n,e){const t=Vn(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Z(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Z(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function qb(n,e){const t=Vn(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Z(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),Z(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function M_(){return O().getNumber("WEBGL_VERSION")===2?1:4}function Kb(n){return Vn(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function Yb(n,e){const t=O().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,a=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+a+".")}}function Qb(n){return Vn(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Bl(n,e,t,s,a,r,i){const o=n.getAttribLocation(e,t);return o===-1?!1:(Z(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Z(n,()=>n.vertexAttribPointer(o,a,n.FLOAT,!1,r,i)),Z(n,()=>n.enableVertexAttribArray(o)),!0)}function Zb(n,e,t){sw(n,t),Z(n,()=>n.activeTexture(n.TEXTURE0+t)),Z(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function W_(n,e){sw(n,e),Z(n,()=>n.activeTexture(n.TEXTURE0+e)),Z(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Jb(n,e,t){return Vn(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function ew(n,e,t){return n.getUniformLocation(e,t)}function tw(n,e,t,s){Z(n,()=>Zb(n,e,s)),Z(n,()=>n.uniform1i(t,s))}function U_(n){Z(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,null)),Z(n,()=>n.viewport(0,0,n.canvas.width,n.canvas.height)),Z(n,()=>n.scissor(0,0,n.canvas.width,n.canvas.height))}function Vr(n,e,t){Z(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Z(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Ml(n,e){Z(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Z(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Ba(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+nw(n,e))}function nw(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Vn(n,e,t){const s=Z(n,()=>e());if(s==null)throw new Error(t);return s}function sw(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const a=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${a}.`)}}function As(n,e=2){return B(n.slice(0,n.length-e))}function Ds(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Ma(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[As(n),...Ds(n)]),e}function aw(n,e=!1){let t=O().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=O().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&O().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((o,l)=>l>=n.length-2?kc(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Vs(n).newShape);let a=B(n),r=null;n.length<=1&&a<=t?r=[1,a]:n.length===2&&n[0]<=t&&n[1]<=t?r=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?r=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?r=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?r=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(r=[n[0],n[1]*n[2]*n[3]]);const i=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(e?2:1)&&Math.min(...r)>0;if(r==null||i)if(e){const o=As(n);let l=2,u=2;n.length&&([l,u]=Ds(n)),a=o*(l/2)*(u/2),r=fl(a).map(c=>c*2)}else r=fl(a);return r}function Fr(n){return n%2===0}function Za(n,e){if(n=n.slice(-2),e=e.slice(-2),Ie(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||Fr(t)&&Fr(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Fr(n[0])&&Fr(e[0])}let Br,Mr;function rw(n){if(Br==null){const e=on(n);Br=e.getParameter(e.MAX_TEXTURE_SIZE)}return Br}function G_(){Br=null}function H_(){Mr=null}function iw(n){if(Mr==null){const e=on(n);Mr=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Mr)}function ow(n){if(n===0)return 0;let e;const t=on(n);return Pt(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Pt(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Pt(n,e){return n.getExtension(e)!=null}function Wl(n){try{if(on(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function lw(n){if(n===0)return!1;const e=on(n);if(n===1){if(!Pt(e,"OES_texture_float"))return!1}else if(!Pt(e,"EXT_color_buffer_float"))return!1;return Ul(e)}function uw(n){if(n===0)return!1;const e=on(n);if(n===1){if(!Pt(e,"OES_texture_float")||!Pt(e,"WEBGL_color_buffer_float"))return!1}else{if(Pt(e,"EXT_color_buffer_float"))return Ul(e);const s="EXT_color_buffer_half_float";if(Pt(e,s)){const a=e.getExtension(s);return j_(e,a)}return!1}return Ul(e)}function Ul(n){const e=jd(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t);const s=1,a=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,s,a,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(r),i}function j_(n,e){const t=jd(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s);const a=1,r=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,a,r,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),o}function cw(n){return n!==2?!1:on(n).fenceSync!=null}function Ia(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&M(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}const gH=Object.freeze(Object.defineProperty({__proto__:null,assertNotComplex:Ia,bindCanvasToFramebuffer:U_,bindColorTextureToFramebuffer:Vr,bindTextureToProgramUniformSampler:tw,bindTextureUnit:Zb,bindVertexBufferToProgramAttribute:Bl,callAndCheck:Z,canBeRepresented:Mb,createFragmentShader:Gb,createFramebuffer:Qb,createProgram:Hb,createStaticIndexBuffer:qb,createStaticVertexBuffer:Xb,createTexture:Kb,createVertexShader:Ub,getBatchDim:As,getExtensionOrThrow:Va,getFramebufferErrorMessage:nw,getMaxTexturesInShader:iw,getNumChannels:M_,getProgramUniformLocation:ew,getProgramUniformLocationOrThrow:Jb,getRowsCols:Ds,getShapeAs3D:Ma,getTextureShapeFromLogicalShape:aw,getWebGLDisjointQueryTimerVersion:ow,getWebGLErrorMessage:Wb,getWebGLMaxTextureSize:rw,hasExtension:Pt,isCapableOfRenderingToFloatTexture:lw,isDownloadFloatTextureEnabled:uw,isReshapeFree:Za,isWebGLFenceEnabled:cw,isWebGLVersionEnabled:Wl,linkProgram:jb,logShaderSourceAndInfoLog:Xd,resetMaxTextureSize:G_,resetMaxTexturesInShader:H_,unbindColorTextureFromFramebuffer:Ml,unbindTextureUnit:W_,validateFramebuffer:Ba,validateProgram:zr,validateTextureSize:Yb},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const se=O();se.registerFlag("HAS_WEBGL",()=>se.getNumber("WEBGL_VERSION")>0);se.registerFlag("WEBGL_VERSION",()=>Wl(2)?2:Wl(1)?1:0);se.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);se.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>se.get("WEBGL_VERSION")===2);se.registerFlag("WEBGL_CPU_FORWARD",()=>!0);se.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);se.registerFlag("WEBGL_PACK",()=>se.getBool("HAS_WEBGL"));se.registerFlag("WEBGL_PACK_NORMALIZATION",()=>se.getBool("WEBGL_PACK"));se.registerFlag("WEBGL_PACK_CLIP",()=>se.getBool("WEBGL_PACK"));se.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>se.getBool("WEBGL_PACK"));se.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>se.getBool("WEBGL_PACK"));se.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>se.getBool("WEBGL_PACK"));se.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>se.getBool("WEBGL_PACK"));se.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>se.getBool("WEBGL_PACK"));se.registerFlag("WEBGL_PACK_REDUCE",()=>se.getBool("WEBGL_PACK"));se.registerFlag("WEBGL_LAZILY_UNPACK",()=>se.getBool("WEBGL_PACK"));se.registerFlag("WEBGL_CONV_IM2COL",()=>se.getBool("WEBGL_PACK"));se.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>rw(se.getNumber("WEBGL_VERSION")));se.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>iw(se.getNumber("WEBGL_VERSION")));se.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=se.getNumber("WEBGL_VERSION");return n===0?0:ow(n)});se.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>se.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!wg());se.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>lw(se.getNumber("WEBGL_VERSION")));se.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>se.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:se.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));se.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>uw(se.getNumber("WEBGL_VERSION")));se.registerFlag("WEBGL_FENCE_API_ENABLED",()=>cw(se.getNumber("WEBGL_VERSION")));se.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>se.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);se.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});se.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>wg()?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});se.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);se.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);se.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);se.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);se.registerFlag("WEBGL_EXP_CONV",()=>!1);se.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>se.getBool("IS_TEST"));se.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);se.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);se.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);se.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bt(){let n,e,t,s,a,r,i,o,l,u;return O().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",a="texture",r="outputColor",i="out vec4 outputColor;",o=O().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",a="texture2D",r="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:a,output:r,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Us(n,e,t="index"){const s=ie(e);return s.map((a,r)=>{const i=`int ${n[r]} = ${t} / ${a}`,o=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * ${a}`:`index -= ${n[r]} * ${a}`;return`${i}; ${o};`}).join("")}function Uo(n,e,t="index"){const s=ie(e);return s.map((a,r)=>{const i=`int ${n[r]} = ${t} / outShapeStrides[${r}]`,o=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * outShapeStrides[${r}]`:`index -= ${n[r]} * outShapeStrides[${r}]`;return`${i}; ${o};`}).join("")}function X_(n,e){const t=n.length,s=n.map(r=>`${e}[${r}]`),a=new Array(t-1);a[t-2]=s[t-1];for(let r=t-3;r>=0;--r)a[r]=`(${a[r+1]} * ${s[r+1]})`;return a}function q_(n,e,t="index"){const s=n.map((r,i)=>i),a=X_(s,e);return a.map((r,i)=>{const o=`int ${n[i]} = ${t} / ${a[i]}`,l=i===a.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${a[i]}`:`index -= ${n[i]} * ${a[i]}`;return`${o}; ${l};`}).join("")}function qd(n){const e=ie(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Kd(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const hw=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:dw}=q1;function K_(n,e,t){const s=[];if(n.forEach(p=>{const f=B(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:g}=Yd(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(g.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const a=s.join(`
`),r=n.map(p=>Y_(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,o=bt(),l=J_(o);let u,c,h=nL(o);return e.isPacked?(u=Q_(e.logicalShape,i,t.enableShapeUniforms),c=tL(o)):(u=Z_(e.logicalShape,i,t.enableShapeUniforms),c=eL(o)),t.packedInputs&&(h+=iL),[h,l,c,a,u,r,t.userCode].join(`
`)}function Na(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return xL(n,e);case 1:return wL(n,e);case 2:return IL(n,e);case 3:return vL(n,e);case 4:return TL(n,e);case 5:return $L(n);case 6:return kL(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function pw(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return yL(n);case 1:return bL(n,e);case 2:return CL(n,e);case 3:return NL(n,e);default:return SL(n,e)}}function Y_(n,e,t=!1,s){let a="";t?a+=pw(n,s):a+=Na(n,s);const r=n.shapeInfo.logicalShape,i=e.logicalShape;return r.length<=i.length&&(t?a+=RL(n,e):a+=EL(n,e)),a}function Q_(n,e,t){switch(n.length){case 0:return fw();case 1:return oL(n,e,t);case 2:return mL(n,e,t);case 3:return uL(n,e,t);default:return hL(n,e,t)}}function Z_(n,e,t){switch(n.length){case 0:return fw();case 1:return lL(n,e,t);case 2:return gL(n,e,t);case 3:return cL(n,e,t);case 4:return dL(n,e,t);case 5:return pL(n,e);case 6:return fL(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function J_(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function eL(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function tL(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function nL(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${sL}
    ${aL}
    ${rL}
  `}const sL=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,aL=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,rL=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,iL=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function fw(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function oL(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function lL(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function uL(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(n[2]/2),r=a*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function cL(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Uo(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Us(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function hL(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(n[n.length-1]/2),r=a*Math.ceil(n[n.length-2]/2);let i=r,o="",l="b, r, c";for(let u=2;u<n.length-1;u++)i*=n[n.length-u-1],o=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+o,l=`b${u}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${n.length}(${l});
    }
  `}function dL(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Uo(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Us(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function pL(n,e){const t=Us(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function fL(n,e){const t=Us(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function mL(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ie(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const a=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function gL(n,e,t){return Ie(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Gs(n){return`offset${n}`}function yL(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=bt();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function xL(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[a,r]=n.shapeInfo.texShape;if(a===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Gs(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;const[o,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function bL(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),a=n.shapeInfo.texShape,r=bt();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${t}, uv);
    }
  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${r.texture2D}(${t}, uv);
    }
  `}function wL(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${va(n)}
      }
    `;const a=n.shapeInfo.texShape,r=a[0],i=a[1];if(i===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=Gs(t);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${o});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${o});
      return sampleTexture(${t}, uv);
    }
  `}function CL(n,e){const t=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=r[0],o=r[1],l=bt();if(r!=null&&Ie(t,r))return e?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function IL(n,e){const t=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape;if(r!=null&&Ie(t,r)){if(e)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=r[0],p=r[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:o}=Vs(t),l=i;if(l.length<t.length){const d=Sa(n,l),p=["row","col"];return`
      ${Na(d,e)}
      float ${a}(int row, int col) {
        return ${a}(${Ta(p,o)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${va(n)}
      }
    `;const u=r[0],c=r[1],h=Gs(s);return c===1?e?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function NL(n,e){const t=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=Sa(n,d),g=["b","row","col"];return`
        ${pw(f,e)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${Ta(g,p)});
        }
      `}const o=bt();if(e)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `;const l=i[0],u=i[1],c=Math.ceil(t[2]/2),h=c*Math.ceil(t[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${c}, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `}function vL(n,e){const t=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[1]*t[2],i=t[2],{newShape:o,keptDims:l}=Vs(t),u=o;if(u.length<t.length){const g=Sa(n,u),m=["row","col","depth"];return`
        ${Na(g,e)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${Ta(m,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${va(n)}
      }
    `;const c=n.shapeInfo.texShape,h=c[0],d=c[1],p=n.shapeInfo.flatOffset;if(d===r&&p==null)return e?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&p==null)return e?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Gs(s);return e?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function SL(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),a=bt();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${t}, uv);
    }
  `;const r=n.shapeInfo.logicalShape,i=r.length,o=n.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(r[i-1]/2);let d=h*Math.ceil(r[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<i-1;g++)p=`int b${g}, `+p,d*=r[i-g-1],f=`b${g} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${a.texture2D}(${t}, uv);
    }
  `}function TL(n,e){const t=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[3],i=t[2]*r,o=t[1]*i,{newShape:l,keptDims:u}=Vs(t);if(l.length<t.length){const x=Sa(n,l),C=["row","col","depth","depth2"];return`
      ${Na(x,e)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${Ta(C,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${r}, 1)));
        ${va(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,m=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&c==null)return e?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${f}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===r&&c==null)return e?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const y=Gs(s);return e?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${g}
      ${m}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function $L(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),a=e[4],r=e[3]*a,i=e[2]*r,o=e[1]*i,{newShape:l,keptDims:u}=Vs(e);if(l.length<e.length){const g=Sa(n,l),m=["row","col","depth","depth2","depth3"];return`
      ${Na(g)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Ta(m,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${r}, ${a})) +
          depth3;
        ${va(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${r}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===a&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Gs(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${r} +
          depth2 * ${a} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function kL(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:a,keptDims:r}=Vs(e);if(a.length<e.length){const m=Sa(n,a),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Na(m)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Ta(y,r)});
      }
    `}const i=e[5],o=e[4]*i,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${va(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=Gs(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${g};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function va(n){const e=n.name,t=B(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function RL(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),a="get"+s+"AtOutCoords",r=n.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=dw(n.shapeInfo.logicalShape,e.logicalShape),l=$e(i),u=i-r;let c;const h=["x","y","z","w","u","v"];r===0?c="":i<2&&o.length>=1?c="coords = 0;":c=o.map(x=>`coords.${h[x+u]} = 0;`).join(`
`);let d="";i<2&&r>0?d="coords":d=n.shapeInfo.logicalShape.map((x,C)=>`coords.${h[C+u]}`).join(", ");let p="return outputValue;";const g=B(n.shapeInfo.logicalShape)===1,y=B(e.logicalShape)===1;if(r===1&&!g&&!y)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!y)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(o.length){const x=r-2,C=r-1;o.indexOf(x)>-1&&o.indexOf(C)>-1?p="return vec4(outputValue.x);":o.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(C)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function EL(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),a="get"+s+"AtOutCoords",r=e.texShape,i=n.shapeInfo.texShape,o=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&o===l&&n.shapeInfo.flatOffset==null&&Ie(i,r))return`
      float ${a}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=$e(l),c=dw(n.shapeInfo.logicalShape,e.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];o===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${p[g+h]} = 0;`).join(`
`);let f="";return l<2&&o>0?f="coords":f=n.shapeInfo.logicalShape.map((g,m)=>`coords.${p[m+h]}`).join(", "),`
    float ${a}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function $e(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Yd(n,e,t){const{newShape:s,keptDims:a}=Vs(e),r=e.length,i=n&&r===3&&e[0]===1,o=i?e.slice(1):s,l=!n&&r>1&&!Ie(e,t)&&s.length<r||i;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:a}}function Sa(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Ta(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(n,e,t,s){const a=t.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),r=a.map(c=>c.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=K_(a,i,e),l=Gb(n.gl,o),u=n.createProgram(l);return O().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:r,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:r,outShapeInfo:i},mw(n,e,u)))}function mw(n,e,t){const s=[],a=[];let r,i,o,l=null,u=null;u=n.getUniformLocation(t,"NAN",!1),O().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const c=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,c),offset:n.getUniformLocation(t,`offset${h}`,c)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,c),d.texShape=n.getUniformLocation(t,`${h}TexShape`,c)),s.push(d)}if(e.enableShapeUniforms&&(r=n.getUniformLocation(t,"outShape",c),o=n.getUniformLocation(t,"outShapeStrides",c),i=n.getUniformLocation(t,"outTexShape",c)),e.customUniforms)for(const h of e.customUniforms)a.push(n.getUniformLocation(t,h.name,c));return{variablesLocations:s,customUniformLocations:a,infLoc:l,nanLoc:u,outShapeLocation:r,outShapeStridesLocation:o,outTexShapeLocation:i}}function ff(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const a=t.logicalShape,r=e[s],i=r.shape;if(!Ie(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(t.isUniform&&r.isUniform)return;const o=t.texShape,l=r.isUniform?null:r.texData.texShape;if(!Ie(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function DL(n,e,t,s,a){e.program.enableShapeUniforms||(ff(e.inShapeInfos,t),ff([e.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):n.setOutputMatrixTexture(r.texture,i[0],i[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),O().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const u=t[l],{uniform:c,offset:h,shape:d,texShape:p}=e.variablesLocations[l];if(d){const{uniformShape:f}=Yd(e.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(B(u.shape)<2)n.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const o=e.outShapeLocation;if(o)switch(s.shape.length){case 1:n.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(o,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=ie(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&a)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],c=e.customUniformLocations[l],h=a[l];if(u.type==="float")n.gl.uniform1fv(c,h);else if(u.type==="vec2")n.gl.uniform2fv(c,h);else if(u.type==="vec3")n.gl.uniform3fv(c,h);else if(u.type==="vec4")n.gl.uniform4fv(c,h);else if(u.type==="int")n.gl.uniform1iv(c,h);else if(u.type==="ivec2")n.gl.uniform2iv(c,h);else if(u.type==="ivec3")n.gl.uniform3iv(c,h);else if(u.type==="ivec4")n.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}n.executeProgram()}function OL(n,e,t){let s="";e.concat(t).forEach(i=>{const o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=Yd(n.packedInputs,i.shape,l);let d="",p="",f="";if(c.length===1&&n.packedInputs){const I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${I[0]>1}_${I[1]>1}`}else if(c.length===2&&!n.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!n.packedInputs){const I=ie(c);f=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}const g=i.shape.length,m=c.length===2&&Ie(i.shape,l),y=B(i.shape)===1,x=Zs(i.shape,t.shape),C=!n.packedInputs&&g===t.shape.length&&Ie(l,t.texData.texShape),w=n.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${g}_${C}_${u?h:""}_${c.length}_${y}_${x}_${m}_${d}_${p}_${f}_${w}_${o}`}else{const l=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${l}_${o}`}});const a=n.userCode;let r=n.constructor.name;return r+="_"+s+"_"+a+`${O().getNumber("WEBGL_VERSION")}`,r}function ft(n){return O().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Qa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=bt();this.outputShape=e,this.enableShapeUniforms=ft(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Uo(["r","c","d"],e):Us(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _L{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Qa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=bt();this.outputShape=e,this.enableShapeUniforms=ft(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Uo(["r","c","d"],e):Us(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LL{constructor(e){this.variableNames=["A"],this.outTexUsage=Lt.DOWNLOAD;const t=bt();this.outputShape=e,this.userCode=`
      ${hw}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Lt.DOWNLOAD;const t=bt();this.outputShape=e,this.userCode=`
      ${hw}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zL={R:0,G:1,B:2,A:3};class mf{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=bt();this.outputShape=e,this.enableShapeUniforms=ft(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let i="";for(let o=0;o<s.length;o++){const l=s[o];i+=`
          if(offset == ${o}) {
            result = values[${zL[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Kd():qd(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${a.texture2D}(A, uv);
          ${i}
        }
        ${a.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VL{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=bt();this.outputShape=e,this.enableShapeUniforms=ft(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let o=0;o<=1;o++){const l=i*2+o;a+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Kd():qd(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gw(n){const e=bt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Ub(n,t)}function yw(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Xb(n,e)}function xw(n){const e=new Uint16Array([0,1,2,2,1,3]);return qb(n,e)}function wr(n,e,t,s,a,r){Yb(e,t);const i=Kb(n),o=n.TEXTURE_2D;return Z(n,()=>n.bindTexture(o,i)),Z(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Z(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Z(n,()=>n.texParameteri(o,n.TEXTURE_MIN_FILTER,n.NEAREST)),Z(n,()=>n.texParameteri(o,n.TEXTURE_MAG_FILTER,n.NEAREST)),O().getNumber("WEBGL_VERSION")===1?Z(n,()=>n.texImage2D(o,0,s,e,t,0,a,r,null)):Z(n,()=>n.texStorage2D(o,1,s,e,t)),Z(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function Qd(n){return n.internalFormatFloat}function bw(n,e,t,s){const[a,r]=br(e,t);return wr(n,a,r,Qd(s),s.textureFormatFloat,n.FLOAT)}function Zd(n){return n.internalFormatHalfFloat}function ww(n,e,t,s){const[a,r]=br(e,t);return wr(n,a,r,Zd(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function Jd(n){return n.downloadTextureFormat}function Cw(n,e,t,s){const[a,r]=br(e,t);return wr(n,a,r,Jd(s),n.RGBA,n.UNSIGNED_BYTE)}function ep(n){return n.internalFormatPackedFloat}function Iw(n,e,t,s){const[a,r]=Ca(e,t);return wr(n,a,r,ep(s),n.RGBA,n.FLOAT)}function tp(n){return n.internalFormatPackedHalfFloat}function Nw(n,e,t,s){const[a,r]=Ca(e,t);return wr(n,a,r,tp(s),n.RGBA,s.textureTypeHalfFloat)}function vw(n,e,t){return Z(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Bl(n,e,"clipSpacePos",t,3,20,0)&&Bl(n,e,"uv",t,2,20,12)}function Sw(n,e,t,s,a,r){Z(n,()=>n.bindTexture(n.TEXTURE_2D,e));let i,o,l;a instanceof Uint8Array?(i=new Uint8Array(t*s*4),o=n.UNSIGNED_BYTE,l=n.RGBA):(i=new Float32Array(t*s*4),o=n.FLOAT,l=r.internalFormatPackedFloat),i.set(a),O().getNumber("WEBGL_VERSION")===2?Z(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,o,i)):Z(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,o,i)),Z(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Tw(n,e,t){Z(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?O().getNumber("WEBGL_VERSION")===2?Z(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):Z(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):O().getNumber("WEBGL_VERSION")===2?Z(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):Z(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),Z(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function $w(n,e,t,s){const a=n.createBuffer();Z(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,a));const o=4*4*e*t;return Z(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,o,n.STREAM_READ)),Z(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),Z(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),a}function kw(n,e,t){const s=n,a=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,a),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),a}function Rw(n,e,t,s){const[a,r]=br(e,t),i=4,o=new Uint8Array(__(e*t,i));return Z(n,()=>n.readPixels(0,0,a,r,s.downloadTextureFormat,n.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function Ew(n,e,t,s,a,r,i,o){const l=n,u=new Float32Array(L_(r,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function Aw(n,e,t){const s=new Float32Array(e*t*4);return Z(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}const yH=Object.freeze(Object.defineProperty({__proto__:null,bindVertexProgramAttributeStreams:vw,createBufferFromOutputTexture:$w,createFloat16MatrixTexture:ww,createFloat16PackedMatrixTexture:Nw,createFloat32MatrixTexture:bw,createIndexBuffer:xw,createPackedMatrixTexture:Iw,createUnsignedBytesMatrixTexture:Cw,createVertexBuffer:yw,createVertexShader:gw,downloadByteEncodedFloatMatrixFromOutputTexture:Rw,downloadFloat32MatrixFromBuffer:kw,downloadMatrixFromPackedOutputTexture:Aw,downloadPackedMatrixFromBuffer:Ew,getInternalFormatForFloat16MatrixTexture:Zd,getInternalFormatForFloat16PackedMatrixTexture:tp,getInternalFormatForFloat32MatrixTexture:Qd,getInternalFormatForPackedMatrixTexture:ep,getInternalFormatForUnsignedBytesMatrixTexture:Jd,uploadDenseMatrixToTexture:Sw,uploadPixelDataToTexture:Tw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rl{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=O().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,D_(t,e)):this.gl=on(t),e=this.gl,O().getNumber("WEBGL_VERSION")===2){const r=e;this.createVertexArray=()=>Z(r,()=>r.createVertexArray()),this.bindVertexArray=i=>Z(r,()=>r.bindVertexArray(i)),this.deleteVertexArray=i=>Z(r,()=>r.deleteVertexArray(i)),this.getVertexArray=()=>Z(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(e!=null){const r=e.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Z(e,()=>r.createVertexArrayOES()),this.bindVertexArray=i=>Z(e,()=>r.bindVertexArrayOES(i)),this.deleteVertexArray=i=>Z(e,()=>r.deleteVertexArrayOES(i)),this.getVertexArray=()=>Z(e,()=>e.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),O().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Va(this.gl,r),Pt(this.gl,i))this.textureHalfFloatExtension=Va(this.gl,i);else if(O().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Pt(this.gl,a))this.colorBufferHalfFloatExtension=Va(this.gl,a);else if(O().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Pt(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Pt(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=yw(this.gl),this.indexBuffer=xw(this.gl),this.framebuffer=Qb(this.gl),this.textureConfig=jd(this.gl,this.textureHalfFloatExtension)}get debug(){return O().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Z(e,()=>e.finish()),Z(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Z(e,()=>e.deleteFramebuffer(this.framebuffer)),Z(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Z(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Z(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),bw(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),ww(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Cw(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Tw(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,a){this.throwIfDisposed(),Sw(this.gl,e,t,s,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Nw(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Iw(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Ml(this.gl,this.framebuffer),this.outputTexture=null),Z(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>Rw(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,a,r,i){return Ew(this.gl,e,t,s,a,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return kw(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const a=$w(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(O().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=a.clientWaitSync(r,0,0);return i===a.ALREADY_SIGNALED||i===a.CONDITION_SATISFIED},t=r}else O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>Aw(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=gw(t));const s=Hb(t);Z(t,()=>t.attachShader(s,this.vertexShader)),Z(t,()=>t.attachShader(s,e)),jb(t,s);const a=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&zr(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Z(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),vw(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Z(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&zr(this.gl,this.program),Z(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?Jb(this.gl,e,t):ew(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Z(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),tw(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[a,r]=Ca(t,s);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,s,a){this.setOutputMatrixWriteRegionDriver(s,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,s,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&zr(this.gl,this.program),Ba(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Z(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Z(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Va(this.gl,O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(a.TIME_ELAPSED_EXT,r),r}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await mp(()=>this.disposed||this.isQueryAvailable(e,O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),a=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=BL(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in O().platform&&(s=O().platform.setTimeoutCustom.bind(O().platform)),mp(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Vr(this.gl,e,this.framebuffer),this.debug&&Ba(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Vr(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ba(this.gl)):Ml(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const a=this.gl;Vr(a,e,this.framebuffer),this.debug&&Ba(a),this.outputTexture=e,Z(a,()=>a.viewport(0,0,t,s)),Z(a,()=>a.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,a){this.throwIfDisposed(),Z(this.gl,()=>this.gl.scissor(e,t,s,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function BL(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:ML,bincountImpl:Dw,bincountReduceImpl:WL,bitwiseAndImpl:UL,castImpl:GL,ceilImpl:HL,concatImpl:jL,equalImpl:XL,expImpl:qL,expm1Impl:KL,floorImpl:YL,gatherNdImpl:QL,gatherV2Impl:ZL,greaterImpl:JL,greaterEqualImpl:eP,lessImpl:tP,lessEqualImpl:nP,linSpaceImpl:sP,logImpl:aP,maxImpl:rP,maximumImpl:iP,minimumImpl:oP,multiplyImpl:lP,negImpl:uP,notEqualImpl:cP,prodImpl:hP,raggedGatherImpl:dP,raggedRangeImpl:pP,raggedTensorToTensorImpl:fP,rangeImpl:mP,rsqrtImpl:gP,scatterImpl:yP,sigmoidImpl:xP,simpleAbsImpl:Ow,sliceImpl:bP,sparseFillEmptyRowsImpl:wP,sparseReshapeImpl:CP,sparseSegmentReductionImpl:Fw,sqrtImpl:IP,staticRegexReplaceImpl:NP,stridedSliceImpl:vP,stringNGramsImpl:SP,stringSplitImpl:TP,stringToHashBucketFastImpl:$P,subImpl:kP,tileImpl:RP,topKImpl:EP,transposeImpl:np,uniqueImpl:AP}=fE;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _w(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function mt(n,e){return e===1?[n]:_w(n,e)}function DP(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OP{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ft(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=mt("rc",this.rank),s=$e(this.rank),a=this.getOutOfBoundsCondition(t),r=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){let r=`${s===0?"r":"rp1"}, ${a===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)r=`${e[e.length-1-i]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${a};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lw{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ft(this.outputShape.length);let s="";for(let a=0;a<4;a++){let r="thisRC = rc;";a%2===1&&(r+="thisRC.z += 1;"),a>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${FP(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Kd():qd(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function FP(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?q_(["r","c","d"],"inputShape"):Us(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _P{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const a=yf(t,s),r=xf(e,a,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=gf(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[r].pop();return this.usedTextures[r].push(l),l}let o;return a===rt.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===rt.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===rt.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===rt.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===rt.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),o}releaseTexture(e,t,s,a){if(this.freeTextures==null)return;const r=yf(s,a),i=xf(t,r,a);i in this.freeTextures||(this.freeTextures[i]=[]);const o=gf(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),l=O().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[i],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function LP(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function gf(n,e,t,s,a){const r=PP(e,s);let i;if(a){const[l,u]=Ca(n[0],n[1]);i=l*u}else{const[l,u]=br(n[0],n[1]);i=l*u}const o=LP(t,r);return i*o}function PP(n,e){switch(n){case rt.PACKED_2X2_FLOAT32:return ep(e);case rt.PACKED_2X2_FLOAT16:return tp(e);case rt.UNPACKED_FLOAT32:return Qd(e);case rt.UNPACKED_FLOAT16:return Zd(e);case rt.PACKED_4X1_UNSIGNED_BYTE:return Jd(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function zP(n){return O().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?rt.PACKED_2X2_FLOAT32:rt.UNPACKED_FLOAT32:n?rt.PACKED_2X2_FLOAT16:rt.UNPACKED_FLOAT16}function yf(n,e){if(n===Lt.UPLOAD)return rt.PACKED_2X2_FLOAT32;if(n===Lt.RENDER||n==null)return zP(e);if(n===Lt.DOWNLOAD||n===Lt.PIXELS)return rt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function xf(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ft(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const qt="if (isnan(x)) return x;",VP="return x;",bf="return abs(x);",BP="return (x >= 0.0) ? x : (exp(x) - 1.0);",MP=qt+`
  return (x < 0.0) ? 0.0 : x;
`,WP=qt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Hn="return x;",UP="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GP="return x;",HP=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,jP=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,XP=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qP="return 1.0 / (1.0 + exp(-1.0 * x));";class qn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ft(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ft(this.outputShape.length);const t=e.length,s=mt("rc",t),a=$e(t),r=DP(t,s),i=s.slice(-2),o=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YP=Yl,QP=1e-7,ZP=1e-4,_r={};function JP(n){return n in _r||(_r[n]={}),_r[n]}const ez=O().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),tz=600;function nz(){return O().global.screen==null?1024:O().global.screen.height*O().global.screen.width*window.devicePixelRatio*tz/1024/1024}class Go extends fm{nextDataId(){return Go.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!O().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof rl)t=e;else{const s=on(O().getNumber("WEBGL_VERSION"),e);t=new rl(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=on(O().getNumber("WEBGL_VERSION"));t=new rl(s),this.binaryCache=JP(O().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new _P(this.gpgpu),this.numMBBeforeWarning=nz(),this.texData=new mm(this,hn())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,a,r,i){const o=this.makeTensorInfo(t,s),l=this.texData.get(o.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[a,r]},l.texShape=[a,r];const u=Ma(t),c=new mf(u,!1,i),h=this.runWebGLProgram(c,[o],s,[[a,r]]);return h.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(o),h.dataId}write(e,t,s){if((O().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||O().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:s,values:e,usage:Lt.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,a,r){if(O().getBool("DEBUG")&&this.checkNumericalProblems(t),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:a,values:t,usage:Lt.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:a,complexTensorInfos:r,slice:i,shape:o,isPacked:l}=t;if(i!=null){let d;l?d=new qn(o,Hn):d=new yn(o,Hn);const p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:a}],a),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(a==="string")return s;const u=this.activeTimers!=null;let c;u&&(c=_t());let h;if(a==="complex64"){const d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);h=Ln(d,p)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=_t()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(g=>f.push(g))}const t=this.texData.get(e),{values:s,shape:a,slice:r,dtype:i,complexTensorInfos:o,isPacked:l}=t;if(r!=null){let f;l?f=new qn(a,Hn):f=new yn(a,Hn);const g=this.runWebGLProgram(f,[{dataId:e,shape:a,dtype:i}],i),m=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),m}if(s!=null)return this.convertAndCacheOnCPU(e);if(O().getBool("DEBUG")&&!O().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&O().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(i!=="complex64"&&O().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...Or(a))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){const f=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),g=f[0],m=f[1];h=Ln(g,m)}else if(u==null)h=this.getValuesFromTexture(e);else{const f=B(a);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const f=this.gpgpu.gl;Z(f,()=>f.deleteBuffer(u))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&hn().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const s=this.texData.get(e),{values:a,shape:r,slice:i,dtype:o,isPacked:l,texture:u}=s;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let p;l?p=new qn(r,Hn):p=new yn(r,Hn);const f=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:o}],o),g=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),g}if(u==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),h=hn().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(a=>la(a));return we(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!Mb(s))throw O().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:a}=this.texData.get(e),r=B(t);if(O().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Or(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),f}const i=O().getBool("WEBGL_PACK")&&a===!0,o=i?Ma(t):t,l=i?new PL(o):new LL(o),u=this.runWebGLProgram(l,[{shape:o,dtype:s,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let a=!1;this.programTimersStack==null?(this.programTimersStack=s,a=!0):this.activeTimers.push(s),this.activeTimers=s,e();const r=Ur(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=Ur(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);o.kernelMs=f1(l),o.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:_t(),endMs:null}}endTimer(e){return O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=_t(),e)}async getQueryTime(e){if(O().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:a,usage:r,isPacked:i,slice:o}=this.texData.get(e),l=o&&o.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(a,s),this.textureManager.releaseTexture(t,a,r,i)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=ez){return O().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&B(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){ua("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return YP(e.shape,t)}packedUnaryOp(e,t,s){const a=new qn(e.shape,t),r=this.compileAndRun(a,[e],s);return hn().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const a=Ow(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,a)}if(O().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,bf,e.dtype);const t=new yn(e.shape,bf),s=this.compileAndRun(t,[e]);return hn().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let a;if(t==="string"&&s!=null&&s.length>0&&Ys(s[0])){const r=s.map(i=>ws(i));a=this.write(r,e,t)}else a=this.write(s,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,s){return hn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new KP(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new OP(e.shape),s=!0;return this.runWebGLProgram(t,[e],e.dtype,null,s)}packedReshape(e,t){const s=[As(e.shape),...Ds(e.shape)],a={dtype:e.dtype,shape:s,dataId:e.dataId},r=[As(t),...Ds(t)],i=new Lw(r,s),o=!0,l=[s],u=this.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:a,shape:r,dtype:i}=s;if(t!=null){const d=B(r),p=t[0]*t[1]*4;M(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=Ma(r);let l;a?l=new _L(o):l=new FL(o);const u=!0,c=[t??Or(o)],h=this.runWebGLProgram(l,[{shape:o,dtype:i,dataId:e}],i,c,u,t);return{dtype:i,shape:r,dataId:h.dataId}}runWebGLProgram(e,t,s,a,r=!1,i){const o=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Qa.DENSE){const y=i??Or(e.outputShape);l.texShape=y.map(x=>x*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),B(o.shape)===0)return l.values=pt(o.dtype,0),o;const u=[],c=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(y.dataId);if(x.texture==null){if(!e.packedInputs&&B(y.shape)<=O().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!x.isPacked!=!!e.packedInputs)y=x.isPacked?this.unpackTensor(y):this.packTensor(y),u.push(y),x=this.texData.get(y.dataId);else if(x.isPacked&&!Za(x.shape,y.shape)){const C=y,w=y.shape;y.shape=x.shape,y=this.packedReshape(y,w),u.push(y),x=this.texData.get(y.dataId),C.shape=w}return{shape:y.shape,texData:x,isUniform:!1}});this.uploadToGPU(o.dataId);const h={shape:o.shape,texData:l,isUniform:!1},d=OL(e,c,h),p=this.getAndSaveBinary(d,()=>AL(this.gpgpu,e,c,h)),f=this.activeTimers!=null;let g;f&&(g=this.startTimer()),O().get("ENGINE_COMPILE_ONLY")||DL(this.gpgpu,p,c,h,a),u.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const m=O().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const y=_t();y-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!O().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const y=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),y}return o}compileAndRun(e,t,s,a,r=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(O().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=R(()=>{if(!O().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=O().getBool("DEBUG");O().set("DEBUG",!1);const t=this.abs(ke(1e-8)).dataSync()[0];if(O().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?QP:ZP}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:a,values:r,texture:i,usage:o,isPacked:l}=t;if(i!=null)return;const u=this.activeTimers!=null;let c;u&&(c=_t());let h=t.texShape;if(h==null&&(h=aw(s,l),t.texShape=h),r!=null){const d=Ma(s);let p,f=h[1],g=h[0];const m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!m)&&([f,g]=Ca(h[0],h[1])),l?p=new VL(d,m):p=new mf(d,m);const y=m?[g,f]:h,x=this.makeTensorInfo(y,a),C=this.texData.get(x.dataId);m?C.usage=Lt.PIXELS:C.usage=Lt.UPLOAD,C.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,g,r);const w=[[g,f]],I=!0,N=this.runWebGLProgram(p,[x],a,w,I),v=this.texData.get(N.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,O().get("ENGINE_COMPILE_ONLY")?this.disposeData(N.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(N.dataId)),this.disposeIntermediateTensorInfo(x),u&&(this.uploadWaitMs+=_t()-c)}else{const d=this.acquireTexture(h,o,a,l);t.texture=d}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:a}=s;return t!=null&&(s.values=sz(t,a)),s.values}acquireTexture(e,t,s,a){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*m1(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(a=>{try{this.checkCompletion_(t),a(!0)}catch(r){throw r}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Fg(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Xd(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:a,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:l}=mw(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=i,e.outShapeStridesLocation=o,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:i,channels:o}=e,l=hn().backend;if(!l.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(a,t,s,r,i,o);return hn().makeTensorFromDataId(u,t,s,l)}}Go.nextDataId=0;function sz(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/** @license See the LICENSE file. */const az="4.6.0";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(){O().set("WEBGL_FORCE_F16_TEXTURES",!0)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */g1()&&bm("webgl",()=>new Go,2);const xH={forceHalfFloat:rz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sp=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Os{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Fe(t,s),this.enableShapeUniforms=ft(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hs=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class $a{constructor(e,t,s,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Fe(t,s);const r=this.outputShape.length;this.enableShapeUniforms=ft(r);let i="";if(a)if(r===0||B(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${$e(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=mt("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const iz={kernelName:Cu,backendName:"webgl",kernelFunc:Dt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(n){const{inputs:e,backend:t}=n,{real:s,imag:a}=e,r=t.makeTensorInfo(s.shape,"complex64"),i=t.texData.get(r.dataId),o=Dt({inputs:{x:s},backend:t}),l=Dt({inputs:{x:a},backend:t});return i.complexTensorInfos={real:o,imag:l},r}const oz={kernelName:gm,backendName:"webgl",kernelFunc:cs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pw="return (a < 0.) ? b * a : a;",zw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function lz(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{alpha:r}=s,i=t.makeTensorInfo([],"float32",ls(r,"float32")),o=O().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $a(zw,a.shape,i.shape):new Os(Pw,a.shape,i.shape),l=t.runWebGLProgram(o,[a,i],"float32");return t.disposeIntermediateTensorInfo(i),l}const uz={kernelName:Iu,backendName:"webgl",kernelFunc:lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vw="return (a < 0.) ? b * a : a;",Bw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function cz(n){const{inputs:e,backend:t}=n,{x:s,alpha:a}=e,r=O().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $a(Bw,s.shape,a.shape):new Os(Vw,s.shape,a.shape);return t.runWebGLProgram(r,[s,a],"float32")}const hz={kernelName:Bu,backendName:"webgl",kernelFunc:cz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka="if (isnan(x)) return x;";function ye({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:a,backend:r})=>{const{x:i}=a,o=r,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&t!=null){const h=o.texData.get(i.dataId),d=t(h.values,l);return o.makeTensorInfo(i.shape,l,d)}const u=O().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new qn(i.shape,e):c=new yn(i.shape,n),o.runWebGLProgram(c,[i],l)}}function ct({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:r}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&l.dtype==="complex64"){const f=c.texData.get(l.dataId),g=c.texData.get(u.dataId),[m,y]=[[f.complexTensorInfos.real,g.complexTensorInfos.real],[f.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(C=>{const[w,I]=C,N={dataId:w.dataId,dtype:w.dtype,shape:l.shape},v={dataId:I.dataId,dtype:I.dtype,shape:u.shape},S=new Os(n,l.shape,u.shape);return c.runWebGLProgram(S,[N,v],Ht(w.dtype,I.dtype))}),x=cs({inputs:{real:m,imag:y},backend:c});return c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo(y),x}const h=r||Ht(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&a!=null){const f=c.texData.get(l.dataId).values,g=c.texData.get(u.dataId).values,m=l.dtype==="string"?Pn(f):f,y=l.dtype==="string"?Pn(g):g,[x,C]=a(l.shape,u.shape,m,y,h),w=c.makeTensorInfo(C,h),I=c.texData.get(w.dataId);return I.values=x,w}const d=O().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new $a(e,l.shape,u.shape,t):p=new Os(n,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function Ja(n,e=!1){if(n==="linear")return e?GP:VP;if(n==="relu")return e?jP:MP;if(n==="elu")return e?HP:BP;if(n==="relu6")return e?XP:WP;if(n==="prelu")return e?Bw:Vw;if(n==="leakyrelu")return e?zw:Pw;if(n==="sigmoid")return e?qP:UP;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mw{constructor(e,t,s,a=!1,r=!1,i=!1,o=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=ft(this.outputShape.length);const c=a?e[1]:e[2],h=Math.ceil(c/2),d=a?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",f=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",y="";o&&(l?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:u?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,y="result = activation(result);");const x=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let C="rc.x",w="rc.x";e[0]<t[0]?C=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(w=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${C};
        int batchB = ${w};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${g[0]});
          result += (${f[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${y}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wf={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Cf{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Fe(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const If="return a * b;";function ap(n){const{inputs:e,backend:t}=n,{a:s,b:a}=e,r=Ht(s.dtype,a.dtype);if(s.dtype==="complex64"){const o=t.texData.get(s.dataId),l=t.texData.get(a.dataId),u=new Cf(wf.REAL,s.shape,a.shape),c=new Cf(wf.IMAG,s.shape,a.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:s.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:a.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:a.shape}],d=t.runWebGLProgram(u,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),f=cs({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,a])){const o=t.texData.get(s.dataId),l=t.texData.get(a.dataId),[u,c]=lP(s.shape,a.shape,o.values,l.values,r),h=t.makeTensorInfo(c,r),d=t.texData.get(h.dataId);return d.values=u,h}let i;return O().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new $a(If,s.shape,a.shape):i=new Os(If,s.shape,a.shape),t.runWebGLProgram(i,[s,a],r)}const dz={kernelName:Gi,backendName:"webgl",kernelFunc:ap};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(n,e,t){const s=[As(n.shape),...Ds(n.shape)],a={dtype:n.dtype,shape:s,dataId:n.dataId},r=[As(e),...Ds(e)],i=new Lw(r,s),o=!0,l=[s],u=t.runWebGLProgram(i,[a],n.dtype,l,o);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{shape:r}=s,i=t,o=B(a.shape),l=wm(r,o),u=B(l);M(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(a.dataId);return c.isPacked&&!Za(a.shape,l)&&!(c.texture!==null&&Za(c.shape,l))?pz(a,l,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype})}const fz={kernelName:Wu,backendName:"webgl",kernelFunc:Q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nf{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];const o=Math.floor(s/4)*4,l=s%4;let u="sumValue += dot(values, ones);";if(t!=null){const h=1/t;u=`sumValue += dot(values * ${y1(h)?h.toPrecision(2):h}, ones);`}let c="";r%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mz{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];let o="0.0",l="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",l="min"):t==="max"&&(o="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const c=Math.floor(s/4)*4,h=s%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=xo(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function js(n,e,t,s){const a=gz(n.shape);let r=n;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:l,outSize:u}=a[i];let c,h;t==="mean"?c=i===0?new Nf({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:u},o):new Nf({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:u}):c=new mz({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:u},t),h=r,r=s.runWebGLProgram(c,[r],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yz{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[t[i]];this.outputShape=s,this.rank=s.length;const a=$e(this.rank),r=xz(t);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function xz(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let a=0;a<n.length;a++)s[n[a]]=t[a];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let c=0;c<s.length;c++)s[c]=e[t[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=$e(this.rank),r=_w("rc",this.rank),i=new Array(this.rank);for(let c=0;c<t.length;c++)i[t[c]]=r[c];const o=`vec2(${i.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${o})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ho(n,e,t){const s=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bz(n.shape,e):new yz(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(n,e,t,s){const a=e,r=n.shape.length,i=me(a,n.shape);let o=i;const l=Be(o,r),u=l!=null;let c=n;u&&(c=Ho(n,l,s),o=Ue(o.length,r)),lt("sum",o,r);const[h,d]=nt(c.shape,o);let p=h;t&&(p=ot(h,i));const f=B(d),m=B(n.shape)/f,y=Q({inputs:{x:c},attrs:{shape:[m,f]},backend:s}),x=Rc(n.dtype),C=js(y,x,"sum",s),w=Q({inputs:{x:C},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(C),u&&s.disposeIntermediateTensorInfo(c),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jo(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,keepDims:i}=s;return wz(a,r,i,t)}const Cz={kernelName:nc,backendName:"webgl",kernelFunc:jo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yt(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{perm:r}=s,i=t,o=a.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=a.shape[r[c]];let u;if(i.shouldExecuteOnCPU([a])){const h=i.texData.get(a.dataId).values,d=np(h,a.shape,a.dtype,r,l);u=i.makeTensorInfo(l,a.dtype);const p=i.texData.get(u.dataId);p.values=d}else u=Ho(a,r,i);return u}const Iz={kernelName:ac,backendName:"webgl",kernelFunc:yt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ww=1e3;function hi({a:n,b:e,transposeA:t,transposeB:s,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=n.shape.length,c=e.shape.length,h=t?n.shape[u-2]:n.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],p=t?n.shape[u-1]:n.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],g=n.shape.slice(0,-2),m=e.shape.slice(0,-2),y=B(g),x=B(m),w=Fe(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);M(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const I=t?[y,h,p]:[y,p,h],N=s?[x,f,d]:[x,d,f],v=Q({inputs:{x:n},backend:a,attrs:{shape:I}}),S=Q({inputs:{x:e},backend:a,attrs:{shape:N}}),$=[v,S],k=Math.max(y,x),E=t?v.shape[1]:v.shape[2],P=r!=null,z=i!=null,V=l==="leakyrelu",F=l!=null?Ja(l,!0):null,L=P||z||V||F!=null;let W;if((p===1||f===1)&&E>Ww&&L===!1){let U=v,X=S;t&&(U=yt({inputs:{x:v},backend:a,attrs:{perm:[0,2,1]}}),$.push(U)),s&&(X=yt({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),$.push(X));const j=f!==1,K=f===1;let q=U;j&&(q=Q({inputs:{x:U},backend:a,attrs:{shape:[k,E,1]}}),$.push(q));const J=f===1?2:1;let Y=X;K&&(Y=Q({inputs:{x:X},backend:a,attrs:{shape:[k,1,E]}}),$.push(Y));const ee=ap({inputs:{a:q,b:Y},backend:a});W=jo({inputs:{x:ee},backend:a,attrs:{axis:J,keepDims:!0}}),$.push(ee)}else{const U=Ht(n.dtype,e.dtype),X=new Mw(I,N,[k,p,f],t,s,P,F,z,V),j=[v,S];if(r!=null&&j.push(r),z&&j.push(i),V){const K=a.makeTensorInfo([],"float32",ls(o,"float32"));j.push(K),$.push(K)}W=a.runWebGLProgram(X,j,U)}const _=Q({inputs:{x:W},backend:a,attrs:{shape:w}});$.push(W);for(const U of $)a.disposeIntermediateTensorInfo(U);return _}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(n){const{inputs:e,backend:t,attrs:s}=n,{a,b:r,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return hi({a,b:r,transposeA:l,transposeB:u,backend:t,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}const vz={kernelName:Cm,backendName:"webgl",kernelFunc:Nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vf="return abs(x);";function Sz(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=t.texData.get(s.dataId),i=Ow(r.values);return t.makeTensorInfo(s.shape,s.dtype,i)}let a;return O().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new qn(s.shape,vf):a=new yn(s.shape,vf),t.runWebGLProgram(a,[s],s.dtype)}const Tz={kernelName:Ql,backendName:"webgl",kernelFunc:Sz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $z=qt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,kz=ye({opSnippet:$z}),Rz={kernelName:gi,backendName:"webgl",kernelFunc:kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ez=qt+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Az=ye({opSnippet:Ez}),Dz={kernelName:yi,backendName:"webgl",kernelFunc:Az};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sf="return a + b;",Oz=ct({opSnippet:Sf,packedOpSnippet:Sf,supportsComplex:!0,cpuKernelImpl:ML}),Fz={kernelName:xi,backendName:"webgl",kernelFunc:Oz};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _z{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lz{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wr(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Dt({inputs:{x:s[0]},backend:t});if(s.length>O().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=Wr({inputs:s.slice(0,l),backend:t}),c=Wr({inputs:s.slice(l),backend:t});return Wr({inputs:[u,c],backend:t})}const a=s.map(l=>l.dtype).reduce((l,u)=>Ht(l,u)),r=s.map(l=>l.shape),o=O().getBool("WEBGL_PACK")?new Lz(s[0].shape,r):new _z(s[0].shape,r);return t.runWebGLProgram(o,s,a)}const Pz={kernelName:Zl,backendName:"webgl",kernelFunc:Wr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zz(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=me(r,a.shape);let u=l;const c=Be(u,o);let h=a;c!=null&&(h=yt({inputs:{x:a},backend:t,attrs:{perm:c}}),u=Ue(u.length,o)),lt("all",u,o);const[d,p]=nt(h.shape,u),f=B(p),g=Q({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),m=js(g,g.dtype,"all",t);let y;if(i){const x=ot(d,l);y=Q({inputs:{x:m},backend:t,attrs:{shape:x}})}else y=Q({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(m),c!=null&&t.disposeIntermediateTensorInfo(h),y}const Vz={kernelName:Im,backendName:"webgl",kernelFunc:zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=me(r,a.shape);let u=l;const c=Be(u,o);let h=a;c!=null&&(h=yt({inputs:{x:a},backend:t,attrs:{perm:c}}),u=Ue(u.length,o)),lt("any",u,o);const[d,p]=nt(h.shape,u),f=B(p),g=Q({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),m=js(g,g.dtype,"any",t);let y;if(i){const x=ot(d,l);y=Q({inputs:{x:m},backend:t,attrs:{shape:x}})}else y=Q({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(m),c!=null&&t.disposeIntermediateTensorInfo(h),y}const Mz={kernelName:Nm,backendName:"webgl",kernelFunc:Bz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wz{constructor(e,t,s){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const o=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uz{constructor(e,t,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,M(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=e[e.length-1],i=Math.ceil(r/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=$e(l),c=mt("coords",l);let h,d;if(i===1){d=l+1;const S=$e(d);h=`
        ${S} sourceLocR = ${S}(${c.join()}, 0);
        ++${c[l-1]};
        ${S} sourceLocG = ${S}(${c.join()}, 0);
        ++${c[l-2]};
        ${S} sourceLocA = ${S}(${c.join()}, 0);
        --${c[l-1]};
        ${S} sourceLocB = ${S}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,h=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],g=p.map(S=>"int "+S),m=mt("sourceLocR",d-1).concat("inIdx.r"),y=mt("sourceLocG",d-1).concat("inIdx.g"),x=mt("sourceLocB",d-1).concat("inIdx.b"),C=mt("sourceLocA",d-1).concat("inIdx.a"),w=s==="max"?"greaterThan":"lessThan",I=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${C.join()})));`,N=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${C.join()}) : 0.)`,v=a?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${v}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${o[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${N};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${N};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uw(n,e,t,s=null){let a=e.shape[0],r=e.shape[1];s!=null&&(a=s.shape[0],r=s.shape[1]);const i=xo(r),o={windowSize:i,inSize:r,batchSize:a,outSize:Math.ceil(r/i)},l=new Wz(o,t,s==null),u=[e];s!=null&&u.push(s);const c=n.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const h=Uw(n,e,t,c);return n.disposeIntermediateTensorInfo(c),h}function Gw(n,e,t,s=null){const a=s!=null?s.shape:e.shape,r=a[a.length-1],i=xo(r),o=new Uz(a,i,t,s==null),l=s==null?[e]:[e,s],u=n.runWebGLProgram(o,l,"int32");if(u.shape.length===e.shape.length){const c=Gw(n,e,t,u);return n.disposeIntermediateTensorInfo(u),c}return u}function Hw(n,e,t,s){const a=[t];if(lt("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,e.shape.length),!O().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const r=[],i=n.texData.get(e.dataId),o=i!==null&&i.isPacked;let l=e;o&&(l=n.unpackTensor(e),r.push(l));const[u,c]=nt(l.shape,a),h=B(c),d=Q({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});r.push(d);const p=Uw(n,d,s);r.push(p);const f=Q({inputs:{x:p},backend:n,attrs:{shape:u}});return r.forEach(g=>n.disposeIntermediateTensorInfo(g)),f}return Gw(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r}=s;let i=me(r,a.shape);const o=Be(i,a.shape.length);let l=a;const u=[];o!=null&&(l=yt({inputs:{x:a},backend:t,attrs:{perm:o}}),u.push(l),i=Ue(i.length,l.shape.length)),lt("argMax",[i[0]],l.shape.length);const c=Hw(t,l,i[0],"max");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const Hz={kernelName:Jl,backendName:"webgl",kernelFunc:Gz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r}=s;let i=me(r,a.shape);const o=Be(i,a.shape.length);let l=a;const u=[];o!=null&&(l=yt({inputs:{x:a},backend:t,attrs:{perm:o}}),u.push(l),i=Ue(i.length,l.shape.length)),lt("argMin",[i[0]],l.shape.length);const c=Hw(t,l,i[0],"min");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const Xz={kernelName:eu,backendName:"webgl",kernelFunc:jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qz=qt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Kz=ye({opSnippet:qz}),Yz={kernelName:bi,backendName:"webgl",kernelFunc:Kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qz=qt+"return log(x + sqrt(x * x + 1.0));",Zz=ye({opSnippet:Qz}),Jz={kernelName:wi,backendName:"webgl",kernelFunc:Zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eV=qt+`
  return atan(x);
`,tV=ye({opSnippet:eV}),nV={kernelName:Ii,backendName:"webgl",kernelFunc:tV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sV=sp+`
  return atan(a, b);
`,aV=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Hs+`
  return result;
`,rV=ct({opSnippet:sV,packedOpSnippet:aV}),iV={kernelName:Ci,backendName:"webgl",kernelFunc:rV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oV=qt+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,lV=ye({opSnippet:oV}),uV={kernelName:Ni,backendName:"webgl",kernelFunc:lV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class er{constructor(e,t,s,a=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const g=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(g||(x="-1.0 / 1e-20"),s){const S=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?r?m:y:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / max(count, 1.0)");const I=Math.floor(i/4)*4,N=i%4,v=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${v}
          }

          int xC = xCCorner + ${I};
          if (${N===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${v}
          } else if (${N===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${v}
          } else if (${N===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${v}
          }
        }
        setOutput(${w});
      }
    `}}class rp{constructor(e,t,s,a=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,o=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,g=e.effectiveFilterWidth,m=e.padInfo.front,y=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const C=t==="avg";let w="0.0";if(C||(w="-1.0 / 1e-20"),s){const k=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${l}, ${u});
        const ivec3 pads = ivec3(${m}, ${y}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${k} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(N="avgValue / max(count, 1.0)");const v=Math.floor(i/4)*4,S=i%4,$=`
      if (${C}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${l}, ${u});
      const ivec3 pads = ivec3(${m}, ${y}, ${x});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${v}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${$}
            }

            int xC = xCCorner + ${v};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${$}
            }
          }
        }
        setOutput(${N});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e;Ia(a,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;M(vn(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ln(a.shape,r,i,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&Ie(c.inShape,c.outShape))return Dt({inputs:{x:a},backend:t});const h=new er(c,"avg",!1);return t.runWebGLProgram(h,[a],"float32")}const hV={kernelName:au,backendName:"webgl",kernelFunc:cV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],h=zn(a.shape,r,i,c,o,l,u),d=new rp(h,"avg",!1);return t.runWebGLProgram(d,[a],"float32")}const pV={kernelName:nu,backendName:"webgl",kernelFunc:dV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fV{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,h=u-1-e.padInfo.left,d=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class mV{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,g=d-1-e.padInfo.top,m=p-1-e.padInfo.left,y=1/(t*s*a);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${g}, ${m});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,input:r}=e,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=zn(i.shape,o,l,h,u,c),p=new mV(d);return t.runWebGLProgram(p,[a],i.dtype)}const yV={kernelName:tu,backendName:"webgl",kernelFunc:gV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,input:r}=e,i=r;Ia([a,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=ln(i.shape,o,l,1,u),h=new fV(c);return t.runWebGLProgram(h,[a],i.dtype)}const bV={kernelName:su,backendName:"webgl",kernelFunc:xV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(n){const{inputs:e,backend:t,attrs:s}=n,{a,b:r}=e,{transposeA:i,transposeB:o}=s;return hi({a,b:r,transposeA:i,transposeB:o,backend:t})}const CV={kernelName:ru,backendName:"webgl",kernelFunc:wV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IV{constructor(e,t,s,a,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Fe(e,t),Fe(e,s);let o="0.0";a!=null&&(Fe(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";r!=null&&(Fe(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NV{constructor(e,t,s,a,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Fe(e,t),Fe(e,s);let o="vec4(0.0)";a!=null&&(Fe(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(Fe(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vV=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:a,variance:r,offset:i,scale:o}=n;M(a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const u=[s,a,r];let c=null;i!=null&&(c=i.shape,u.push(i));let h=null;o!=null&&(h=o.shape,u.push(o));const d=O().getBool("WEBGL_PACK_NORMALIZATION")?new NV(s.shape,a.shape,r.shape,c,h,l):new IV(s.shape,a.shape,r.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)},SV={kernelName:bu,backendName:"webgl",kernelFunc:vV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TV{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=$e(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=$V(this.rank);let a;const r=e.map((i,o)=>`sourceLoc.${Gl[o]} = start[${o}] + coords.${Gl[o]};`);a=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${a}
        setOutput(getSource(${s}));
      }
    `}}const Gl=["x","y","z","w","u","v"];function $V(n){if(n===1)return"sourceLoc";if(n<=6)return Gl.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kV{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=$e(this.rank),s=mt("coords",this.rank),a=mt("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,i=`getChannel(getSource(${a.join()}), ${r})`,o=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${i};
        --${a[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,h)=>`start[${h}]`).join()});`:e.map((c,h)=>`${a[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${o}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n,e,t,s){const a=s.texData.get(n.dataId),r=s.makeTensorInfo(t,n.dtype),i=s.texData.get(r.dataId);Object.assign(i,a),i.refCount=1,i.shape=t,i.dtype=n.dtype;let o=_c(e,ie(n.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||n.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),r}function Ra(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{begin:r,size:i}=s,[o,l]=yo(a,r,i);if(Dc(a,o,l),B(l)===0)return t.makeTensorInfo(l,a.dtype,[]);if(t.shouldExecuteOnCPU([a])||a.dtype==="string"){const h=t.texData.get(a.dataId),d=bP(h.values,o,l,a.shape,a.dtype);return t.makeTensorInfo(l,a.dtype,d)}const{isPacked:u}=t.texData.get(a.dataId),c=Fc(a.shape,o,l);if(u||!c){const h=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kV(l):new TV(l),d=[o];return t.runWebGLProgram(h,[a],a.dtype,d)}return t.uploadToGPU(a.dataId),RV(a,o,l,t)}const EV={kernelName:Yu,backendName:"webgl",kernelFunc:Ra};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AV=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{blockShape:r,crops:i}=s;M(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=r.reduce((x,C)=>x*C),l=ir(a.shape,r,o),u=or(l.length,r.length),c=lr(a.shape,r,o),h=Bc(i,r.length),d=Mc(c,i,r.length),p=[],f=Q({inputs:{x:a},backend:t,attrs:{shape:l}}),g=yt({inputs:{x:f},backend:t,attrs:{perm:u}}),m=Q({inputs:{x:g},backend:t,attrs:{shape:c}}),y=Ra({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach(x=>t.disposeIntermediateTensorInfo(x)),y},DV={kernelName:iu,backendName:"webgl",kernelFunc:AV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,weights:r}=e,{size:i}=s,o=t.readSync(a.dataId),l=t.readSync(r.dataId),u=Dw(o,l,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,u)}const FV={kernelName:vm,backendName:"webgl",kernelFunc:OV};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,LV=`
  return float(int(a.r) & int(b.r));
`;function PV(n){const{inputs:e,backend:t}=n,{a:s,b:a}=e,r=O().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=O().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,a])||i===1){const l=t.texData.get(s.dataId).values,u=t.texData.get(a.dataId).values,[c,h]=UL(s.shape,a.shape,l,u,s.dtype),d=t.makeTensorInfo(h,s.dtype),p=t.texData.get(d.dataId);return p.values=c,d}let o;return r?o=new $a(_V,s.shape,a.shape,!1):o=new Os(LV,s.shape,a.shape),t.runWebGLProgram(o,[s,a],s.dtype)}const zV={kernelName:xc,backendName:"webgl",kernelFunc:PV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(n){const{inputs:e,backend:t}=n,{s0:s,s1:a}=e,r=t.readSync(s.dataId),i=t.readSync(a.dataId),o=Fe(Array.from(r),Array.from(i));return t.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const BV={kernelName:Sm,backendName:"webgl",kernelFunc:VV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MV="return float(a != b);",jw=ct({opSnippet:MV,cpuKernelImpl:cP,dtype:"bool"}),WV={kernelName:Nc,backendName:"webgl",kernelFunc:jw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cr(n){const{inputs:e,backend:t}=n,{input:s}=e,a=t.texData.get(s.dataId);return Dt({inputs:{x:a.complexTensorInfos.real},backend:t})}const UV={kernelName:ym,backendName:"webgl",kernelFunc:Cr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GV="return float(int(x));";function HV(n,e){const t=new yn(n.shape,GV),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hl(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return Dt({inputs:{x:a},backend:t});const i=kt(a.shape),o=Hl({inputs:{x:a},backend:t,attrs:{dtype:"float32"}}),l=cs({inputs:{real:o,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(o),l}if(a.dtype==="complex64"){const i=Cr({inputs:{input:a},backend:t}),o=Hl({inputs:{x:i},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(i),o}if(!xm(a.dtype,r)){const i=Dt({inputs:{x:a},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(t.shouldExecuteOnCPU([a])){const i=t.texData.get(a.dataId).values,[o,l,u]=GL(i,a.shape,a.dtype,r);return t.makeTensorInfo(o,l,u)}if(r==="int32")return HV(a,t);if(r==="bool"){const i=t.makeTensorInfo([],"bool",pt("bool",1)),l=jw({inputs:{a,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${r}`)}const jV={kernelName:ou,backendName:"webgl",kernelFunc:Hl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tf="return ceil(x);",XV=ye({opSnippet:Tf,packedOpSnippet:Tf,cpuKernelImpl:HL}),qV={kernelName:vi,backendName:"webgl",kernelFunc:XV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KV{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YV{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{clipValueMin:r,clipValueMax:i}=s;let o;O().getBool("WEBGL_PACK_CLIP")?o=new YV(a.shape):o=new KV(a.shape);const l=[[r],[i]];return t.runWebGLProgram(o,[a],a.dtype,l)}const ZV={kernelName:Si,backendName:"webgl",kernelFunc:QV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JV{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $f(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function eB(n){const{inputs:e,backend:t}=n,{x:s}=e,a=t.texData.get(s.dataId),r=new JV(s.shape),i=[$f(s,a.complexTensorInfos.real),$f(s,a.complexTensorInfos.imag)];return t.runWebGLProgram(r,i,i[0].dtype)}const tB={kernelName:lu,backendName:"webgl",kernelFunc:eB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nB{constructor(e){this.outputShape=[],this.outputShape=bn(e,1),this.variableNames=e.map((i,o)=>`T${o}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const o=t[i-1];s.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${o}));`)}const a=t.length,r=t[t.length-1];s.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sB{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=bn(e,t);const s=this.outputShape,a=s.length,r=$e(a),i=mt("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((g,m)=>`T${m}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let g=1;g<l.length;g++)l[g]=l[g-1]+e[g][t];const u=o[t],c=o.slice(-2),h=o.join();let d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let g=1;g<l.length;g++){const m=l[g-1];d+=`
        if (${u} < ${l[g]}  && ${u} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${Lr(o,u,m)}),
            vec2(${Lr(c,u,m)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${Lr(o,u,f)}),
          vec2(${Lr(c,u,f)}));`,this.userCode=`
      float getValue(${o.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[a-1]} = ${i[a-1]} + 1;
        if (${i[a-1]} < ${s[a-1]}) {
          result.g = getValue(${i});
        }

        ${i[a-2]} = ${i[a-2]} + 1;
        if (${i[a-2]} < ${s[a-2]}) {
          result.a = getValue(${i});
        }

        ${i[a-1]} = ${i[a-1]} - 1;
        if (${i[a-2]} < ${s[a-2]} &&
            ${i[a-1]} < ${s[a-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Lr(n,e,t){const s=n.indexOf(e);return n.map((r,i)=>i===s?`${r} - ${t}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xo(n){const{inputs:e,backend:t}=n,{input:s}=e,a=t.texData.get(s.dataId);return Dt({inputs:{x:a.complexTensorInfos.imag},backend:t})}const aB={kernelName:Tm,backendName:"webgl",kernelFunc:Xo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wa(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(x=>Cr({inputs:{input:x},backend:t})),f=n.map(x=>Xo({inputs:{input:x},backend:t})),g=Wa(p,e,t),m=Wa(f,e,t),y=cs({inputs:{real:g,imag:m},backend:t});return p.forEach(x=>t.disposeIntermediateTensorInfo(x)),f.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(m),y}let a=t.shouldExecuteOnCPU(n);if(s==="string"&&(a=!0),a){const p=n.map(w=>{const N=[-1,B(w.shape.slice(e))];return Q({inputs:{x:w},backend:t,attrs:{shape:N}})}),f=p.map(w=>({vals:t.readSync(w.dataId),shape:w.shape})),g=bn(p.map(w=>w.shape),1),m=p[0].shape[0]===1,y=jL(f,g,s,m),x=bn(n.map(w=>w.shape),e),C=t.makeTensorInfo(x,s,y);return p.forEach(w=>t.disposeIntermediateTensorInfo(w)),C}const r=n.filter(p=>B(p.shape)>0),i=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const p=i?new yn(n[0].shape,Hn):new qn(n[0].shape,Hn);return t.runWebGLProgram(p,n,s)}const o=O().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>o){const p=[];for(let g=0;g<r.length;g+=o){const m=r.slice(g,g+o);p.push(Wa(m,e,t))}const f=Wa(p,e,t);for(const g of p)t.disposeIntermediateTensorInfo(g);return f}if(i){const p=new sB(r.map(f=>f.shape),e);return t.runWebGLProgram(p,r,s)}const{tensors2D:l,outShape:u}=rB(r,e,t),c=new nB(l.map(p=>p.shape)),h=t.runWebGLProgram(c,l,s);l.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=Q({inputs:{x:h},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(h),d}function rB(n,e,t){const s=bn(n.map(r=>r.shape),e);return{tensors2D:n.map(r=>Q({inputs:{x:r},attrs:{shape:[-1,B(r.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xw(n){const{inputs:e,backend:t,attrs:s}=n,{axis:a}=s,r=me(a,e[0].shape)[0],i=e.map(u=>u.shape);Pc(i,r);const o=bn(e.map(u=>u.shape),r);if(B(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(u=>B(u.shape)>0);return l.length===1?Dt({inputs:{x:l[0]},backend:t}):Wa(l,r,t)}const iB={kernelName:uu,backendName:"webgl",kernelFunc:Xw};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qw{constructor(e,t=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,o=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,g=e.inChannels%4,m=e.dataFormat==="channelsLast",y=m?1:2,x=m?2:3,C=m?3:1;let w="",I="";s&&(a?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,I="result = activation(result);");const N=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${C}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${N}
        ${I}
        setOutput(result);
      }
    `}}class oB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,g=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${o});
      const ivec3 pads = ivec3(${t}, ${s}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kw{constructor(e,t=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ft(this.outputShape.length);const i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<c;m++)d+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<c;m++)d+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(h+1)/2;m++){const y=m*2;if(d+=`
           xC = xCCorner + ${y*l};
           `,o===1){if(y<c&&(i%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?d+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<c)){const x=i%2===0?kc(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:d+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):x===1?d+=`
                     xC${y+1} = xTexelC${y};
                     `:d+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<c&&(i%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<c&&(d+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<c&&(d+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<c&&(d+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(a?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lB{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ft(this.outputShape.length);const{dataFormat:s}=t,a=bt(),r=s==="channelsLast",i=r?1:2,o=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${a.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function di(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function Yw({x:n,filter:e,convInfo:t,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const l=n.shape,u=s.texData.get(n.dataId),c=t.inChannels,h=l[0]*l[1]*l[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,g=!1;let m;const y=[];if(r!=null){const w=di(r.shape,p);w!=null&&(r=Q({inputs:{x:r},backend:s,attrs:{shape:w}}),y.push(r))}if(a!=null){const w=di(a.shape,p);w!=null&&(a=Q({inputs:{x:a},backend:s,attrs:{shape:w}}),y.push(a))}if(!((h===1||d===1)&&c>Ww)&&u.isPacked&&p&&u.texture!=null&&l[2]%2!==0&&Ie(u.shape.slice(-3),l.slice(-3))){const w=l[0]*l[1]*(l[2]+1),I={dataId:n.dataId,shape:[1,w,t.inChannels],dtype:n.dtype},N=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,M(Za(u.shape,I.shape),()=>`packed reshape ${u.shape} to ${I.shape} isn't free`);const v=Q({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(v);const S=hi({a:I,b:v,backend:s,transposeA:f,transposeB:g,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i}),$=s.texData.get(S.dataId);M($.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=N,$.shape=t.outShape,m=Dt({inputs:{x:S},backend:s}),m.shape=t.outShape,y.push(S)}else{const w=t.outHeight*t.outWidth,I=Q({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,w,t.inChannels]:[t.batchSize,t.inChannels,w]}}),N=Q({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),v=hi({a:p?I:N,b:p?N:I,transposeA:!p,transposeB:g,backend:s,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i});m=Q({inputs:{x:v},backend:s,attrs:{shape:t.outShape}}),y.push(I),y.push(N),y.push(v)}for(const w of y)s.disposeIntermediateTensorInfo(w);return m}function Qw({x:n,filter:e,convInfo:t,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",g=l*u*c,m=d*h,y=[t.batchSize,g,m],x=!0,C=!1,w=[];if(r!=null){const _=di(r.shape,f);_!=null&&(r=Q({inputs:{x:r},backend:s,attrs:{shape:_}}),w.push(r))}if(a!=null){const _=di(a.shape,f);_!=null&&(a=Q({inputs:{x:a},backend:s,attrs:{shape:_}}),w.push(a))}const I=Q({inputs:{x:e},backend:s,attrs:{shape:[1,g,B(e.shape)/g]}});w.push(I);const N=new lB(y,t),v=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],S=s.runWebGLProgram(N,[n],"float32",v),$=Q({inputs:{x:S},backend:s,attrs:{shape:y}});w.push(S),w.push($);const k=a!=null,E=r!=null,P=o==="leakyrelu",z=o?Ja(o,!0):null,V=new Mw(f?$.shape:I.shape,f?I.shape:$.shape,f?[t.batchSize,m,t.outChannels]:[t.batchSize,t.outChannels,m],x,C,k,z,E,P),F=f?[$,I]:[I,$];if(a&&F.push(a),E&&F.push(r),P){const _=s.makeTensorInfo([],"float32",ls(i,"float32"));F.push(_),w.push(_)}const L=s.runWebGLProgram(V,F,"float32"),W=Q({inputs:{x:L},backend:s,attrs:{shape:t.outShape}});w.push(L);for(const _ of w)s.disposeIntermediateTensorInfo(_);return W}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,filter:r}=e,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=rs(l),d=vt(a.shape,r.shape,i,u,o,c,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=Yw({x:a,filter:r,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&O().getBool("WEBGL_EXP_CONV")){const g=new Kw(d),m=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(g,[a,r],"float32",m)}else if(O().getBool("WEBGL_CONV_IM2COL"))p=Qw({x:a,filter:r,convInfo:d,backend:t});else{const g=new qw(d);p=t.runWebGLProgram(g,[a,r],"float32")}const f=Q({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const cB={kernelName:cu,backendName:"webgl",kernelFunc:uB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class dB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,l=s-1-e.padInfo.left,u=i?1:2,c=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class pB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class fB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,o=e.strideWidth,l=t-1-e.padInfo.front,u=s-1-e.padInfo.top,c=a-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,dy:r}=e,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=rs(l),d=vt(a.shape,c,i,1,o,u,!1,h),p=new hB(d);return t.runWebGLProgram(p,[a,r],"float32")}const gB={kernelName:$m,backendName:"webgl",kernelFunc:mB};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yB{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=ft(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,a=t-1-e.padInfo.top,r=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xB(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,filter:r}=e,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=rs(u),d=vt(i,r.shape,o,1,l,c,!1,h);if(O().getBool("WEBGL_PACK")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new yB(d);return t.runWebGLProgram(f,[a,r],"float32",p)}else{const p=new dB(d);return t.runWebGLProgram(p,[a,r],"float32")}}const bB={kernelName:hu,backendName:"webgl",kernelFunc:xB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s,u=_s(a.shape,r.shape,i,l,o),c=new oB(u);return t.runWebGLProgram(c,[a,r],"float32")}const CB={kernelName:pu,backendName:"webgl",kernelFunc:wB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,dy:r}=e,{strides:i,pad:o,filterShape:l}=s,u=_s(a.shape,l,i,1,o),c=new pB(u);return t.runWebGLProgram(c,[a,r],"float32")}const NB={kernelName:du,backendName:"webgl",kernelFunc:IB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,filter:r}=e,{pad:i,strides:o,inputShape:l}=s,u=_s(l,r.shape,o,1,i),c=new fB(u);return t.runWebGLProgram(c,[a,r],"float32")}const SB={kernelName:km,backendName:"webgl",kernelFunc:vB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TB=ka+`
  return cos(x);
`,$B=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Hs}
  return result;
`,kB=ye({opSnippet:TB,packedOpSnippet:$B}),RB={kernelName:$i,backendName:"webgl",kernelFunc:kB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EB=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,AB=ye({opSnippet:EB}),DB={kernelName:ki,backendName:"webgl",kernelFunc:AB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OB{constructor(e,t,s,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,o,l,u]=e,[c]=t,[h,d]=s;this.outputShape=[c,h,d,u];const p=a==="bilinear"?1:0,[f,g]=[`${o-1}.0`,`${l-1}.0`],[m,y,x]=h>1?[`${(o-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[C,w,I]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${C});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${w};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:a,boxes:r,boxInd:i}=e,{cropSize:o,method:l,extrapolationValue:u}=s,c=new OB(a.shape,r.shape,o,l,u);return t.runWebGLProgram(c,[a,r,i],"float32")},_B={kernelName:Rm,backendName:"webgl",kernelFunc:FB};var tr;(function(n){n.Prod="*",n.Sum="+"})(tr||(tr={}));class kf{constructor(e,t,s,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===tr.Prod?"1.0":"0.0",o=s?i:`getX(${Rf(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=a?`end != ${l-1}`:"end != 0",c=a?"end + 1":"end - 1"):(u=a?`end + pow2 < ${l}`:"end >= pow2",c=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${$e(r)} coords = getOutputCoords();
        int end = ${Ef(r,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${Ef(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${Rf(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Rf(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function Ef(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zw(n,e,t,s,a,r){const i=e.shape.length,o=Be([s],i);let l=e;o!=null&&(l=yt({inputs:{x:e},backend:t,attrs:{perm:o}}));const u=Ue(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=Dt({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new kf(n,l.shape,!1,r),f=[[d]],g=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(g)}if(a){const d=new kf(n,l.shape,a,r),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(o!=null){const d=is(o),p=yt({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(l),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;return Zw(tr.Prod,a,t,r,i,o)}const PB={kernelName:Em,backendName:"webgl",kernelFunc:LB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,exclusive:i,reverse:o}=s;return Zw(tr.Sum,a,t,r,i,o)}const VB={kernelName:fu,backendName:"webgl",kernelFunc:zB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,weights:r}=e,{size:i,binaryOutput:o}=s;if(a.shape.length===1){const l=t.readSync(a.dataId),u=t.readSync(r.dataId),c=Dw(l,u,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,c)}else if(a.shape.length===2){const l=t.bufferSync(a),u=t.bufferSync(r),c=WL(l,u,i,o);return t.makeTensorInfo(c.shape,r.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const MB={kernelName:Am,backendName:"webgl",kernelFunc:BB};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WB{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{blockSize:r,dataFormat:i}=s,o=a.shape[0],l=i==="NHWC"?a.shape[1]:a.shape[2],u=i==="NHWC"?a.shape[2]:a.shape[3],c=i==="NHWC"?a.shape[3]:a.shape[1],h=l*r,d=u*r,p=c/(r*r),f=i==="NHWC"?[o,h,d,p]:[o,p,h,d],g=new WB(f,r,i);return t.runWebGLProgram(g,[a],a.dtype)}const GB={kernelName:Dm,backendName:"webgl",kernelFunc:UB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jw{constructor(e,t=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ft(this.outputShape.length);const i=e.filterHeight,o=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";s&&(a?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e0{constructor(e,t=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ft(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<h;y++)p+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let y=0;y<h;y++)p+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(d+1)/2;y++){const x=y*2;if(p+=`
          xC = xCCorner + ${x*u};
          `,l===1){if(x<h&&(o%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,u===1&&x>0?p+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<h)){const C=o%2===0?kc(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${C};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:p+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):C===1?p+=`
                    xC${x+1} = xTexelC${x};
                    `:p+=`
                    xCOffset = xC + ${C};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<h&&(o%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<h&&(p+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<h&&(p+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<h&&(p+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",g="";s&&(a?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,g="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;c==null&&(c=[1,1]),M(vn(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=vt(a.shape,r.shape,i,c,o,u,!0);let d;O().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new e0(h):d=new Jw(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[a,r],"float32",p)}const jB={kernelName:mu,backendName:"webgl",kernelFunc:HB};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class qB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=t-1-e.padInfo.top,o=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,dy:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=vt(a.shape,c,i,o,l,u,!0),d=new XB(h);return t.runWebGLProgram(d,[a,r],"float32")}const YB={kernelName:Om,backendName:"webgl",kernelFunc:KB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,filter:r}=e,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=vt(c,r.shape,i,o,l,u,!0),d=new qB(h);return t.runWebGLProgram(d,[a,r],"float32")}const ZB={kernelName:Fm,backendName:"webgl",kernelFunc:QB};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JB{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(n){const{inputs:e,backend:t}=n,{x:s}=e,a=[...s.shape,...s.shape],r=B(s.shape),i=Q({inputs:{x:s},backend:t,attrs:{shape:[r]}}),o=new JB(r),l=t.runWebGLProgram(o,[i],i.dtype),u=Q({inputs:{x:l},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}const tM={kernelName:_m,backendName:"webgl",kernelFunc:eM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:a,strideHeight:r,strideWidth:i,filterHeight:o,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:h,left:d}=a;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,filter:r}=e,{strides:i,pad:o,dilations:l}=s,u=sr(a.shape,r.shape,i,o,"NHWC",l);let c;const h=new nM(u);c=t.runWebGLProgram(h,[a,r],"float32");const d=Q({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),d}const aM={kernelName:gu,backendName:"webgl",kernelFunc:sM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(n){const{inputs:e,backend:t,attrs:s}=n,{equation:a}=s,r=e,{allDims:i,summedDims:o,idDims:l}=Kc(a,r.length);Qc(i.length,l,r);const{path:u,steps:c}=Zc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let g=0;g<h;++g){for(const m of c[g]){const{permutationIndices:y,expandDims:x}=Yc(p,l[m]);let C;Jc(y)?C=r[m]:(C=yt({inputs:{x:r[m]},backend:t,attrs:{perm:y}}),f.push(C));const w=C.shape.slice();for(let I=0;I<x.length;++I)w.splice(x[I],0,1);Ie(C.shape,w)||(C=Q({inputs:{x:C},backend:t,attrs:{shape:w}}),f.push(C)),d===null?d=C:(d=ap({inputs:{a:C,b:d},backend:t}),f.push(d))}g<h-1&&(u[g]>=0&&(d=jo({inputs:{x:d},backend:t,attrs:{axis:u[g]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&t.disposeIntermediateTensorInfo(g);return d}const iM={kernelName:Pm,backendName:"webgl",kernelFunc:rM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oM="return (x >= 0.0) ? x : (exp(x) - 1.0);",lM=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,uM=ye({opSnippet:oM,packedOpSnippet:lM}),cM={kernelName:Ri,backendName:"webgl",kernelFunc:uM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hM="return (b >= 0.0) ? a : a * (b + 1.0);",dM=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,pM=n=>{const{inputs:e,backend:t}=n,{dy:s,y:a}=e,r=O().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $a(dM,s.shape,a.shape):new Os(hM,s.shape,a.shape);return t.runWebGLProgram(r,[s,a],s.dtype)},fM={kernelName:yu,backendName:"webgl",kernelFunc:pM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mM=`
  return vec4(equal(a, b));
`,gM="return float(a == b);",yM=ct({opSnippet:gM,packedOpSnippet:mM,dtype:"bool",cpuKernelImpl:XL}),xM={kernelName:bc,backendName:"webgl",kernelFunc:yM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bM=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Wc};
  float a1 = ${Uc};
  float a2 = ${Gc};
  float a3 = ${Hc};
  float a4 = ${jc};
  float a5 = ${Xc};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,wM=ye({opSnippet:bM}),CM={kernelName:Ei,backendName:"webgl",kernelFunc:wM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IM=ka+`
  return exp(x);
`,NM=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,t0=ye({opSnippet:IM,packedOpSnippet:NM,cpuKernelImpl:qL,dtype:"float32"}),vM={kernelName:Ai,backendName:"webgl",kernelFunc:t0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jl(n){const{inputs:e,attrs:t,backend:s}=n,{dim:a}=t,{input:r}=e,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(M(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),Q({inputs:{x:r},backend:s,attrs:{shape:o}})}const SM={kernelName:xu,backendName:"webgl",kernelFunc:jl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Af="return exp(x) - 1.0;",TM=ye({opSnippet:Af,packedOpSnippet:Af,cpuKernelImpl:KL}),$M={kernelName:Di,backendName:"webgl",kernelFunc:TM};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Df{constructor(e,t,s){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${a}.0`:"1.0";let o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n0(n,e,t){const s=t.texData.get(n.dataId),a=B(n.shape),r=n.shape[n.shape.length-1],i=a/r,o=Q({inputs:{x:n},backend:t,attrs:{shape:[i,r]}}),l=o.shape,u=new Df("real",l,e),c=new Df("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=t.runWebGLProgram(u,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),f=cs({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const g=Q({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(f),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(n){const{inputs:e,backend:t}=n,{input:s}=e;return n0(s,!1,t)}const RM={kernelName:zm,backendName:"webgl",kernelFunc:kM};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EM{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ir(n){const{backend:e,attrs:t}=n,{shape:s,value:a}=t;let{dtype:r}=t;if(r=r||Bm(a),r==="string"){const i=je(r,B(s));return i.fill(a),e.makeTensorInfo(s,r,i)}else{const i=new EM(s,a),o=[[a]];return e.runWebGLProgram(i,[],r,o)}}const AM={kernelName:Vm,backendName:"webgl",kernelFunc:Ir};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DM{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OM={kernelName:Mm,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,a=new DM(t.shape);return s.runWebGLProgram(a,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Of="return floor(x);",FM=ye({opSnippet:Of,packedOpSnippet:Of,cpuKernelImpl:YL}),_M={kernelName:Oi,backendName:"webgl",kernelFunc:FM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LM=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,PM=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,zM=ct({opSnippet:LM,packedOpSnippet:PM,dtype:"int32"}),VM={kernelName:Fi,backendName:"webgl",kernelFunc:zM};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BM{constructor(e){this.variableNames=["A"];const t=bt(),[s,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=bt(),[s,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WM={kernelName:ol,backendName:"webgl",kernelFunc:UM};let Ks,il=O().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function UM(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:a}=e;const{numChannels:r}=s,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[u,l],h=[u,l,r];if(o||i){const g=O().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Ks==null||g!==il)&&(il=g,Ks=document.createElement("canvas").getContext("2d",{willReadFrequently:il})),Ks.canvas.width=l,Ks.canvas.height=u,Ks.drawImage(a,0,0,l,u),a=Ks.canvas}const d=t.makeTensorInfo(c,"int32");t.texData.get(d.dataId).usage=Lt.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),a);const p=O().getBool("WEBGL_PACK")?new MM(h):new BM(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,g=rs(c),m=vt(a.shape,r.shape,l,h,u,d,!1,g);let y;const x=[],C=i!=null,w=o!=null,I=p==="leakyrelu",N=()=>{const S=[a,r],$=(k,E)=>{if(E==="NCHW"&&k.shape.length===1&&k.shape[0]!==1){const P=Q({inputs:{x:k},backend:t,attrs:{shape:[k.shape[0],1,1]}});return x.push(P),P}return k};if(C&&S.push($(i,c)),w&&S.push($(o,c)),I){const k=t.makeTensorInfo([],"float32",ls(f,"float32"));S.push(k),x.push(k)}return S};if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))y=Yw({x:a,filter:r,convInfo:m,backend:t,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else if(m.strideWidth<=2&&g==="channelsLast"&&O().getBool("WEBGL_EXP_CONV")){const S=p?Ja(p,!0):null,$=new Kw(m,C,S,w,I),k=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],E=N();y=t.runWebGLProgram($,E,"float32",k)}else if(O().getBool("WEBGL_CONV_IM2COL"))y=Qw({x:a,filter:r,convInfo:m,backend:t,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const S=p?Ja(p,!1):null,$=new qw(m,C,S,w,I),k=N();y=t.runWebGLProgram($,k,"float32")}const v=Q({inputs:{x:y},backend:t,attrs:{shape:m.outShape}});return x.push(y),x.forEach(S=>t.disposeIntermediateTensorInfo(S)),v}const HM={kernelName:Wm,backendName:"webgl",kernelFunc:GM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let g=c;g==null&&(g=[1,1]),M(vn(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const m=vt(a.shape,r.shape,l,g,u,h,!0),y=O().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,x=d?Ja(d,y):null,C=[a,r],w=i!=null,I=o!=null,N=d==="leakyrelu";if(w&&C.push(i),I&&C.push(o),N){const k=t.makeTensorInfo([],"float32",ls(p,"float32"));C.push(k),f.push(k)}let v;y?v=new e0(m,w,x,I,N):v=new Jw(m,w,x,I,N);const S=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],$=t.runWebGLProgram(v,C,"float32",S);return f.forEach(k=>t.disposeIntermediateTensorInfo(k)),$}const XM={kernelName:Um,backendName:"webgl",kernelFunc:jM};class qM{constructor(e,t,s,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=s;const r=$e(s.length);let i=`
    int index;`;for(let o=0;o<this.sliceDim;o++)i+=`
          index = round(getIndices(coords[0], ${o}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};
          flattenIndex += index * ${this.strides[o]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(n){const{inputs:e,backend:t}=n,{params:s,indices:a}=e,r=a.shape,i=r[r.length-1],o=B(s.shape),[l,u,c,h]=go(s,a),d=Q({inputs:{x:a},backend:t,attrs:{shape:[u,i]}}),p=Q({inputs:{x:s},backend:t,attrs:{shape:[B(s.shape)/c,c]}});if(t.shouldExecuteOnCPU([s,a])||s.dtype==="string"){const y=t.readSync(a.dataId),x=t.bufferSync(s),C=QL(y,x,s.dtype,u,i,c,h,s.shape,o);return t.makeTensorInfo(l,s.dtype,C.values)}const f=new qM(i,h,[u,c],s.shape),g=t.runWebGLProgram(f,[p,d],p.dtype),m=Q({inputs:{x:g},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),m}const YM={kernelName:Gm,backendName:"webgl",kernelFunc:KM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QM{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=$e(this.rank),a=ZM(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${a}));
      }
    `}}function ZM(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<n.length;a++)a===2?s.push("index"):s.push(`${t[a]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s0(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,indices:r}=e,{axis:i,batchDims:o}=s,l=me(i,a.shape)[0];if(O().get("DEBUG")){const x=t.readSync(r.dataId),C=a.shape[l];for(let w=0;w<x.length;++w){const I=x[w];M(I<=C-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${C-1}]`)}}const u=th(a,r,l,o),c=B(r.shape),h=[],d=Q({inputs:{x:a},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=Q({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([a,r])||a.dtype==="string"){const x=t.bufferSync(p),C=t.bufferSync(d),w=ZL(C,x,f);return h.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.makeTensorInfo(u.outputShape,w.dtype,w.values)}const g=new QM(d.shape,f),m=t.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const y=Q({inputs:{x:m},backend:t,attrs:{shape:u.outputShape}});return h.forEach(x=>t.disposeIntermediateTensorInfo(x)),y}const JM={kernelName:wu,backendName:"webgl",kernelFunc:s0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e3="return float(a > b);",t3=`
  return vec4(greaterThan(a, b));
`,n3=ct({opSnippet:e3,packedOpSnippet:t3,cpuKernelImpl:JL,dtype:"bool"}),s3={kernelName:wc,backendName:"webgl",kernelFunc:n3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a3="return float(a >= b);",r3=`
  return vec4(greaterThanEqual(a, b));
`,i3=ct({opSnippet:a3,packedOpSnippet:r3,dtype:"bool",cpuKernelImpl:eP}),o3={kernelName:_i,backendName:"webgl",kernelFunc:i3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(n){const{inputs:e,backend:t}=n,{input:s}=e;return n0(s,!0,t)}const u3={kernelName:Hm,backendName:"webgl",kernelFunc:l3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c3="return float(!isnan(x) && !isinf(x));",h3=ye({opSnippet:c3,dtype:"bool"}),d3={kernelName:Li,backendName:"webgl",kernelFunc:h3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p3="return float(isinf(x));",f3=ye({opSnippet:p3,dtype:"bool"}),m3={kernelName:Pi,backendName:"webgl",kernelFunc:f3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g3="return float(isnan(x));",y3=ye({opSnippet:g3,dtype:"bool"}),x3={kernelName:zi,backendName:"webgl",kernelFunc:y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b3="return float(a < b);",w3=`
  return vec4(lessThan(a, b));
`,C3=ct({opSnippet:b3,packedOpSnippet:w3,cpuKernelImpl:tP,dtype:"bool"}),I3={kernelName:Cc,backendName:"webgl",kernelFunc:C3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N3="return float(a <= b);",v3=`
  return vec4(lessThanEqual(a, b));
`,S3=ct({opSnippet:N3,packedOpSnippet:v3,cpuKernelImpl:nP,dtype:"bool"}),T3={kernelName:Ic,backendName:"webgl",kernelFunc:S3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $3(n){const{backend:e,attrs:t}=n,{start:s,stop:a,num:r}=t,i=sP(s,a,r);return e.makeTensorInfo([i.length],"float32",i)}const k3={kernelName:jm,backendName:"webgl",kernelFunc:$3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R3=ka+`
  return x < 0.0 ? 0./0. : log(x);
`,E3=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,A3=ye({opSnippet:R3,packedOpSnippet:E3,cpuKernelImpl:aP}),D3={kernelName:Bi,backendName:"webgl",kernelFunc:A3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O3=ka+`
  return log(1.0 + x);
`,F3=ye({opSnippet:O3}),_3={kernelName:Vi,backendName:"webgl",kernelFunc:F3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L3="return float(a >= 1.0 && b >= 1.0);",P3=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,z3=ct({opSnippet:L3,packedOpSnippet:P3,dtype:"bool"}),V3={kernelName:Sc,backendName:"webgl",kernelFunc:z3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B3="return float(!(x >= 1.0));",M3=ye({opSnippet:B3}),W3={kernelName:Tc,backendName:"webgl",kernelFunc:M3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U3="return float(a >= 1.0 || b >= 1.0);",G3=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,H3=ct({opSnippet:U3,packedOpSnippet:G3,dtype:"bool"}),j3={kernelName:$c,backendName:"webgl",kernelFunc:H3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X3{constructor(e,t,s,a,r){this.variableNames=["x"],this.outputShape=[];const i=t,o=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${a}) * sum`;r===.5?l=`inversesqrt(${u})`:r===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q3{constructor(e,t,s,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,o=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${a}) * sum`;r===.5?l=`inversesqrt(${u})`:r===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K3=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{depthRadius:r,bias:i,alpha:o,beta:l}=s,u=O().getBool("WEBGL_PACK_NORMALIZATION")?new q3(a.shape,r,i,o,l):new X3(a.shape,r,i,o,l);return t.runWebGLProgram(u,[a],a.dtype)},Y3={kernelName:vu,backendName:"webgl",kernelFunc:K3};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q3{constructor(e,t,s,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=a,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z3=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:a,y:r,dy:i}=e,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new Q3(a.shape,o,l,u,c);return t.runWebGLProgram(h,[a,r,i],a.dtype)},J3={kernelName:Nu,backendName:"webgl",kernelFunc:Z3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(n,e,t,s){const a=B(e),i=B(n.shape)/a,o=Q({inputs:{x:n},attrs:{shape:[i,a]},backend:s}),l=js(o,n.dtype,"max",s),u=Q({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a0(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{reductionIndices:r,keepDims:i}=s,o=a.shape.length,l=me(r,a.shape);let u=l;const c=Be(u,o),h=c!=null,d=t.shouldExecuteOnCPU([a]);let p=a;if(h){if(d){const C=t.texData.get(p.dataId).values,w=new Array(o);for(let v=0;v<w.length;v++)w[v]=a.shape[c[v]];const I=np(C,a.shape,a.dtype,c,w);p=t.makeTensorInfo(w,a.dtype);const N=t.texData.get(p.dataId);N.values=I}else p=Ho(a,c,t);u=Ue(u.length,o)}lt("max",u,o);const[f,g]=nt(p.shape,u);let m=f;i&&(m=ot(f,l));let y;if(d){const C=t.texData.get(p.dataId).values,w=rP(C,B(g),m,a.dtype);y=t.makeTensorInfo(m,a.dtype);const I=t.texData.get(y.dataId);I.values=w}else y=eW(p,g,m,t);return h&&t.disposeIntermediateTensorInfo(p),y}const tW={kernelName:Su,backendName:"webgl",kernelFunc:a0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW=sp+`
  return max(a, b);
`,sW=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Hs+`
  return result;
`,aW=ct({opSnippet:nW,packedOpSnippet:sW,cpuKernelImpl:iP}),rW={kernelName:Mi,backendName:"webgl",kernelFunc:aW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e;Ia(a,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;M(vn(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ln(a.shape,r,i,u,o,l);if(c.filterWidth===1&&c.filterHeight===1&&Ie(c.inShape,c.outShape))return Dt({inputs:{x:a},backend:t});const h=new er(c,"max",!1);return t.runWebGLProgram(h,[a],a.dtype)}const oW={kernelName:Ru,backendName:"webgl",kernelFunc:iW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lW(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{filterSize:r,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=zn(a.shape,r,i,c,o,u,l),d=new rp(h,"max",!1);return t.runWebGLProgram(d,[a],a.dtype)}const uW={kernelName:$u,backendName:"webgl",kernelFunc:lW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cW{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,o=r-1-e.padInfo.top,l=i-1-e.padInfo.left,u=r*i-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class hW{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,input:r}=e,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=zn(i.shape,o,l,h,u,c),p=new rp(d,"max",!0),f=t.runWebGLProgram(p,[i],i.dtype),g=new hW(d),m=t.runWebGLProgram(g,[a,f],i.dtype);return t.disposeIntermediateTensorInfo(f),m}const pW={kernelName:Tu,backendName:"webgl",kernelFunc:dW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:a,input:r,output:i}=e,o=r;Ia([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ln(o.shape,l,u,1,c,h),p=!0,f=new er(d,"max",p),g=t.runWebGLProgram(f,[o],o.dtype),m=new cW(d),y=t.runWebGLProgram(m,[a,g],o.dtype);return t.disposeIntermediateTensorInfo(g),y}const mW={kernelName:ku,backendName:"webgl",kernelFunc:fW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(n,e,t,s){let a=new er(t,"max",!1);const r=s.runWebGLProgram(a,[n],"float32");a=new er(t,"max",!0,!0,e);const i=s.runWebGLProgram(a,[n],"float32");return[r,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW={kernelName:Xm,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:a,strides:r,pad:i,includeBatchInIndex:o}=e,l=t;M(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];M(vn(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const c=ln(s.shape,a,r,u,i),[h,d]=gW(s,o,c,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xW(n,e,t,s){const a=B(e),i=B(n.shape)/a,o=Q({inputs:{x:n},attrs:{shape:[i,a]},backend:s}),l=js(o,"float32","mean",s),u=Q({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bW={kernelName:Eu,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:a,axis:r}=e,i=t,o=s.shape.length,l=me(r,s.shape);let u=l;const c=Be(u,o),h=c!=null,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const w=i.texData.get(f.dataId).values,I=new Array(o);for(let S=0;S<I.length;S++)I[S]=s.shape[c[S]];const N=np(w,s.shape,s.dtype,c,I);f=i.makeTensorInfo(I,s.dtype);const v=i.texData.get(f.dataId);v.values=N}else f=Ho(s,c,i);p.push(f),u=Ue(u.length,o)}lt("sum",u,o);const[g,m]=nt(f.shape,u);let y=g;a&&(y=ot(g,l));const x=xW(f,m,y,i);for(const C of p)i.disposeIntermediateTensorInfo(C);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=me(r,a.shape);let u=l;const c=Be(u,o);let h=a;c!=null&&(h=yt({inputs:{x:a},backend:t,attrs:{perm:c}}),u=Ue(u.length,a.shape.length)),lt("min",u,o);const[d,p]=nt(h.shape,u),f=B(p),g=Q({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),m=js(g,g.dtype,"min",t);let y;if(i){const x=ot(d,l);y=Q({inputs:{x:m},backend:t,attrs:{shape:x}})}else y=Q({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(m),c!=null&&t.disposeIntermediateTensorInfo(h),y}const CW={kernelName:Au,backendName:"webgl",kernelFunc:wW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IW=sp+`
  return min(a, b);
`,NW=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Hs+`
  return result;
`,vW=ct({opSnippet:IW,packedOpSnippet:NW,cpuKernelImpl:oP}),SW={kernelName:Wi,backendName:"webgl",kernelFunc:vW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TW{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((c,h)=>c[0]+e[h]+c[1]);const a=e.length,r=$e(a),i=t.map(c=>c[0]).join(","),o=t.map((c,h)=>c[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),u=s==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${i};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $W{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,g)=>f[0]+e[g]+f[1]);const a=e.length,r=$e(a),i=t.map(f=>f[0]).join(","),o=t.map((f,g)=>f[0]+e[g]).join(","),l=mt("rc",a),u=mt("source",a),c=`${l[a-1]} < ${this.outputShape[a-1]}`,h=a===1?"source":`vec2(${u.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(a===1){const f=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[a-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
      `}else{const f=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[a-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
        rc = outputLoc;
        ${l[a-2]} += 1;
        if(${l[a-2]} < ${this.outputShape[a-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${h});
          ${l[a-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kW=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:a,mode:r}=t,i=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $W(s.shape,a,r):new TW(s.shape,a,r);return e.runWebGLProgram(i,[s],s.dtype)},RW={kernelName:Du,backendName:"webgl",kernelFunc:kW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EW=`if (b == 0.0) return NAN;
  return mod(a, b);`,AW=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Hs+`
  return result;
`,DW=ct({opSnippet:EW,packedOpSnippet:AW}),OW={kernelName:Ui,backendName:"webgl",kernelFunc:DW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FW{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W=`
if (a == b) {
  return 1.0;
};
return a / b;`,LW=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,r0=ct({opSnippet:_W,packedOpSnippet:LW,checkOutOfBounds:!0}),PW={kernelName:ji,backendName:"webgl",kernelFunc:r0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ff="return a - b;",i0=ct({opSnippet:Ff,packedOpSnippet:Ff,supportsComplex:!0,cpuKernelImpl:kP}),zW={kernelName:lo,backendName:"webgl",kernelFunc:i0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o0(n){const{inputs:e,backend:t,attrs:s}=n,{logits:a}=e,{dim:r}=s,i=me([r],a.shape),o=a0({inputs:{x:a},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),l=ot(o.shape,i),u=Q({inputs:{x:o},backend:t,attrs:{shape:l}}),c=i0({inputs:{a,b:u},backend:t}),h=t0({inputs:{x:c},backend:t}),d=jo({inputs:{x:h},backend:t,attrs:{axis:i,keepDims:!1}}),p=Q({inputs:{x:d},backend:t,attrs:{shape:l}}),f=r0({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const VW={kernelName:Zu,backendName:"webgl",kernelFunc:o0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BW(n){const{inputs:e,backend:t,attrs:s}=n,{logits:a}=e,{numSamples:r,seed:i,normalized:o}=s,l=o?a:o0({inputs:{logits:a},backend:t,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new FW(u,c,r),d=[[i]],p=t.runWebGLProgram(h,[l],"int32",d);return o||t.disposeIntermediateTensorInfo(l),p}const MW={kernelName:qm,backendName:"webgl",kernelFunc:BW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WW=qt+`
  return -x;
`,UW=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function GW(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const r=t.texData.get(s.dataId),[i,o]=uP(r.values,s.shape,s.dtype);return t.makeTensorInfo(o,s.dtype,i)}let a;return O().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new qn(s.shape,UW):a=new yn(s.shape,WW),t.runWebGLProgram(a,[s],s.dtype)}const HW={kernelName:Fu,backendName:"webgl",kernelFunc:GW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jW=Xl;function XW(n){ua("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=t.readSync(a.dataId),c=t.readSync(r.dataId),{selectedIndices:h}=jW(u,c,i,o,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const qW={kernelName:Km,backendName:"webgl",kernelFunc:XW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KW=ql;function YW(n){ua("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=t.readSync(a.dataId),h=t.readSync(r.dataId),{selectedIndices:d,validOutputs:p}=KW(c,h,i,o,l,u);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const QW={kernelName:Ym,backendName:"webgl",kernelFunc:YW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZW=Kl;function JW(n){ua("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:a,scores:r}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=t.readSync(a.dataId),h=t.readSync(r.dataId),d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:y}=ZW(c,h,d,p,f,g);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const eU={kernelName:Qm,backendName:"webgl",kernelFunc:JW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tU{constructor(e,t,s,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nU=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:a}=e,{dtype:r,depth:i,onValue:o,offValue:l}=s,u=B(a.shape),c=new tU(u,i,o,l),h=Q({inputs:{x:a},backend:t,attrs:{shape:[u]}}),d=t.runWebGLProgram(c,[h],r);t.disposeIntermediateTensorInfo(h);const p=[...a.shape,i],f=Q({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f},sU={kernelName:_u,backendName:"webgl",kernelFunc:nU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const a=Cr({inputs:{input:s},backend:t}),r=pi({inputs:{x:a},backend:t}),i=Xo({inputs:{input:s},backend:t}),o=pi({inputs:{x:i},backend:t}),l=cs({inputs:{real:r,imag:o},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),l}else return Ir({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const aU={kernelName:lc,backendName:"webgl",kernelFunc:pi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l0(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const a=Cr({inputs:{input:s},backend:t}),r=l0({inputs:{x:a},backend:t}),i=Xo({inputs:{input:s},backend:t}),o=pi({inputs:{x:i},backend:t}),l=cs({inputs:{real:r,imag:o},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),l}else return Ir({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const rU={kernelName:Lu,backendName:"webgl",kernelFunc:l0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iU(n){const{inputs:e,backend:t,attrs:s}=n,{axis:a}=s;if(e.length===1)return jl({inputs:{input:e[0]},backend:t,attrs:{dim:a}});const r=e[0].shape,i=e[0].dtype;e.forEach(c=>{Zm(r,c.shape,"All tensors passed to stack must have matching shapes"),M(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(c=>{const h=jl({inputs:{input:c},backend:t,attrs:{dim:a}});return o.push(h),h}),u=Xw({inputs:l,backend:t,attrs:{axis:a}});return o.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const oU={kernelName:Pu,backendName:"webgl",kernelFunc:iU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lU{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);const a=e.length,r=$e(a),i=t.map(u=>u[0]).join(","),o=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${i};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uU{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((g,m)=>g[0]+e[m]+g[1]);const a=e.length,r=$e(a),i=t.map(g=>g[0]).join(","),o=t.map((g,m)=>g[0]+e[m]).join(","),l=mt("rc",a),u=mt("source",a),c=`${l[a-1]} < ${this.outputShape[a-1]}`,h=a===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[a-1]} += 1;
       if(${c}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${l[a-2]} += 1;
       if(${l[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${l[a-1]} += 1;
         if(${c}) {`],p=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let g=0,m=a===1?2:4;g<m;g++)f+=`
        ${d[g]}
        if (${p}) {
          result[${g}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${g}] = getChannel(getX(${u.join()}), ${h});
        }
      `;f+=a===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u0=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{paddings:r,constantValue:i}=s;if(B(a.shape)===0){const u=r.map((c,h)=>c[0]+a.shape[h]+c[1]);return Ir({backend:t,attrs:{shape:u,value:i,dtype:a.dtype}})}const o=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uU(a.shape,r,i):new lU(a.shape,r,i),l=[[i]];return t.runWebGLProgram(o,[a],a.dtype,l)},cU={kernelName:zu,backendName:"webgl",kernelFunc:u0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hU=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,dU=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Hs+`
  return result;
`,pU=ct({opSnippet:hU,packedOpSnippet:dU}),fU={kernelName:Hi,backendName:"webgl",kernelFunc:pU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mU(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{axis:r,keepDims:i}=s,o=a.shape.length,l=[],u=me(r,a.shape);let c=u;const h=Be(c,o);let d=a;h!=null&&(d=yt({inputs:{x:a},backend:t,attrs:{perm:h}}),c=Ue(c.length,o),l.push(d)),lt("prod",c,o);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:g,outShape:m,outDtype:y}=hP(d.shape,d.dtype,f,c);p=t.makeTensorInfo(m,y,g)}else{const[f,g]=nt(d.shape,c),m=B(g),y=Q({inputs:{x:d},backend:t,attrs:{shape:[-1,m]}}),x=Rc(a.dtype),C=js(y,x,"prod",t);p=Q({inputs:{x:C},backend:t,attrs:{shape:f}}),l.push(y),l.push(C)}if(i){l.push(p);const f=ot(p.shape,u);p=Q({inputs:{x:p},backend:t,attrs:{shape:f}})}return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const gU={kernelName:Mu,backendName:"webgl",kernelFunc:mU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=e,{outputRaggedRank:o}=s,l=a.map(y=>t.readSync(y.dataId)),u=a.map(y=>y.shape),c=t.readSync(r.dataId),h=t.readSync(i.dataId),[d,p,f]=dP(l,u,c,r.shape,r.dtype,h,i.shape,o),g=d.map(y=>t.makeTensorInfo([y.length],"int32",y)),m=t.makeTensorInfo(f,r.dtype,p);return g.concat([m])}const xU={kernelName:Jm,backendName:"webgl",kernelFunc:yU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bU(n){const{inputs:e,backend:t}=n,{starts:s,limits:a,deltas:r}=e,i=t.readSync(s.dataId),o=t.readSync(a.dataId),l=t.readSync(r.dataId),[u,c]=pP(i,s.shape,s.dtype,o,a.shape,l,r.shape),h=t.makeTensorInfo([u.length],"int32",u),d=t.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const wU={kernelName:eg,backendName:"webgl",kernelFunc:bU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n){const{inputs:e,backend:t,attrs:s}=n,{shape:a,values:r,defaultValue:i,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=s,u=t.readSync(a.dataId),c=t.readSync(r.dataId),h=t.readSync(i.dataId),d=o.map(m=>t.readSync(m.dataId)),p=o.map(m=>m.shape),[f,g]=fP(u,a.shape,c,r.shape,r.dtype,h,i.shape,d,p,l);return t.makeTensorInfo(f,r.dtype,g)}const IU={kernelName:tg,backendName:"webgl",kernelFunc:CU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c0=n=>{const{backend:e,attrs:t}=n,{start:s,stop:a,step:r,dtype:i}=t,o=mP(s,a,r,i);return e.makeTensorInfo([o.length],i,o)},NU={kernelName:ng,backendName:"webgl",kernelFunc:c0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vU="return 1.0 / x;",SU=ye({opSnippet:vU}),TU={kernelName:Xi,backendName:"webgl",kernelFunc:SU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $U=qt+`
  return (x < 0.0) ? 0.0 : x;
`,kU=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,RU=ye({opSnippet:$U,packedOpSnippet:kU}),EU={kernelName:Ki,backendName:"webgl",kernelFunc:RU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AU=qt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,DU=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,OU=ye({opSnippet:AU,packedOpSnippet:DU}),FU={kernelName:qi,backendName:"webgl",kernelFunc:OU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _U{constructor(e,t,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,t,s,u];const c=[a&&t>1?o-1:o,a&&s>1?l-1:l],h=[a&&t>1?t-1:t,a&&s>1?s-1:s];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LU{constructor(e,t,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,t,s,u];const c=[a&&t>1?o-1:o,a&&s>1?l-1:l],h=[a&&t>1?t-1:t,a&&s>1?s-1:s];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(n){const{inputs:e,backend:t,attrs:s}=n,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s,[l,u]=o,c=O().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new LU(a.shape,l,u,r,i):new _U(a.shape,l,u,r,i);return t.runWebGLProgram(c,[a],"float32")}const zU={kernelName:Uu,backendName:"webgl",kernelFunc:PU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VU{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,i,o]=e,l=[s&&i>1?a-1:a,s&&o>1?r-1:r],u=[s&&i>1?i-1:i,s&&o>1?o-1:o],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,g=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(n){const{inputs:e,backend:t,attrs:s}=n,{images:a,dy:r}=e,{alignCorners:i}=s,o=new VU(r.shape,a.shape,i);return t.runWebGLProgram(o,[r],r.dtype)}const MU={kernelName:Gu,backendName:"webgl",kernelFunc:BU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WU{constructor(e,t,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,t,s,u];const c=[a&&t>1?o-1:o,a&&s>1?l-1:l],h=[a&&t>1?t-1:t,a&&s>1?s-1:s],d=a?"0.5":"0.0";let p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UU{constructor(e,t,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,l,u]=e;this.outputShape=[i,t,s,u];const c=[a&&t>1?o-1:o,a&&s>1?l-1:l],h=[a&&t>1?t-1:t,a&&s>1?s-1:s],d=a?"0.5":"0.0";let p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(n){const{inputs:e,backend:t,attrs:s}=n,{images:a}=e,{alignCorners:r,halfPixelCenters:i,size:o}=s,[l,u]=o,c=O().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new UU(a.shape,l,u,r,i):new WU(a.shape,l,u,r,i);return t.runWebGLProgram(c,[a],a.dtype)}const HU={kernelName:Hu,backendName:"webgl",kernelFunc:GU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jU{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,i,o]=e,l=[s&&i>1?a-1:a,s&&o>1?r-1:r],u=[s&&i>1?i-1:i,s&&o>1?o-1:o],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,g=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XU(n){const{inputs:e,backend:t,attrs:s}=n,{images:a,dy:r}=e,{alignCorners:i}=s,o=new jU(r.shape,a.shape,i);return t.runWebGLProgram(o,[r],r.dtype)}const qU={kernelName:ju,backendName:"webgl",kernelFunc:XU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KU{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const a=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,l)=>a(l)).join(","),i=$e(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YU{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const a=mt("rc",s),r=`${a[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${a[s-2]} + 1 < ${this.outputShape[s-2]}`,o=$e(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(a.slice())};
          if(${r}){
            result.g = ${u(a.slice())};
          }
          if(${i}) {
            result.b = ${c(a.slice())};
            if(${r}) {
              result.a = ${h(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const g=e.map((x,C)=>p(C,f)),m=g.join(","),y=g.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${y}))`}function p(f,g){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${g[f]} - 1`:`${g[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QU(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{dims:r}=s,i=a.shape.length,o=me(r,a.shape);if(i===0)return Dt({inputs:{x:a},backend:t});const l=O().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YU(a.shape,o):new KU(a.shape,o);return t.runWebGLProgram(l,[a],a.dtype)}const ZU={kernelName:Xu,backendName:"webgl",kernelFunc:QU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JU{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],a=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG={kernelName:sg,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:a,fillValue:r,center:i}=e,o=t,l=new JU(s.shape,r),[u,c]=Vc(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tG=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,nG=ye({opSnippet:tG}),sG={kernelName:Yi,backendName:"webgl",kernelFunc:nG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aG="return inversesqrt(x);",rG=ye({opSnippet:aG,cpuKernelImpl:gP}),iG={kernelName:Qi,backendName:"webgl",kernelFunc:rG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ip{constructor(e,t,s,a,r,i,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=$e(r.length),c=$e(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";a===1?p="i":a===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let g="";l&&(g="coords[0], coords[1]");const m=`getDefaultValue(${g})`,y=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oG{constructor(e,t,s,a,r,i,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const u=$e(r.length),c=$e(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";a===1?p="i":a===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let g="";l&&(g="coords[0], coords[1]");const m=`getDefaultValue(${g})`,y=t>1?"strides[j]":"strides",x=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(n){const{inputs:e,backend:t,attrs:s}=n,{indices:a,updates:r}=e,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Fs(r,a,i),d=[h/u,u];if(h===0)return t.makeTensorInfo(i,a.dtype);const p=Q({inputs:{x:a},backend:t,attrs:{shape:[l,o]}}),f=Q({inputs:{x:r},backend:t,attrs:{shape:[l,u]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0]));let m;O().getBool("WEBGL_PACK")?m=new oG(l,o,p.shape.length,f.shape.length,c,d):m=new ip(l,o,p.shape.length,f.shape.length,c,d);const y=t.runWebGLProgram(m,[f,p,g],f.dtype),x=Q({inputs:{x:y},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),x}const uG={kernelName:ag,backendName:"webgl",kernelFunc:lG};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cG{constructor(e,t,s,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=O().getNumber("WEBGL_VERSION")===2?r:i,l=a==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hG(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:a,values:r}=e,{side:i}=s,o=new cG(a.shape[0],a.shape[1],r.shape[1],i),l=[[a.shape[1]]];return t.runWebGLProgram(o,[a,r],"int32",l)}const dG={kernelName:rg,backendName:"webgl",kernelFunc:hG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pG{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let a,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",a="resRC";else{const o=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${o[c]}`),c<e&&l.push(`${o[c]}`);a=l.join(),r=u.join()}const i=$e(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fG(n){const{inputs:e,backend:t}=n,{condition:s,t:a,e:r}=e,i=new pG(s.shape.length,a.shape,a.shape.length);return t.runWebGLProgram(i,[s,a,r],Ht(a.dtype,r.dtype))}const mG={kernelName:qu,backendName:"webgl",kernelFunc:fG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gG=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${bo};
  float scale = ${wo};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,yG=ye({opSnippet:gG}),xG={kernelName:Zi,backendName:"webgl",kernelFunc:yG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bG=ka+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,wG=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CG=ye({opSnippet:bG,packedOpSnippet:wG,cpuKernelImpl:xP}),IG={kernelName:Ji,backendName:"webgl",kernelFunc:CG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NG=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,vG=ye({opSnippet:NG}),SG={kernelName:eo,backendName:"webgl",kernelFunc:vG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TG=ka+`
  return sin(x);
`,$G=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Hs}
  return result;
`,kG=ye({opSnippet:TG,packedOpSnippet:$G}),RG={kernelName:to,backendName:"webgl",kernelFunc:kG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EG=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,AG=ye({opSnippet:EG}),DG={kernelName:no,backendName:"webgl",kernelFunc:AG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,FG=ye({opSnippet:OG}),_G={kernelName:so,backendName:"webgl",kernelFunc:FG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{blockShape:r,paddings:i}=s;M(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=r.reduce((y,x)=>y*x),l=[[0,0]];l.push(...i);for(let y=1+r.length;y<a.shape.length;++y)l.push([0,0]);const u=[],c=u0({inputs:{x:a},backend:t,attrs:{paddings:l,constantValue:0}}),h=ir(c.shape,r,o,!1),d=or(h.length,r.length,!1),p=lr(c.shape,r,o,!1),f=Q({inputs:{x:c},backend:t,attrs:{shape:h}}),g=yt({inputs:{x:f},backend:t,attrs:{perm:d}}),m=Q({inputs:{x:g},backend:t,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach(y=>t.disposeIntermediateTensorInfo(y)),m},PG={kernelName:Ju,backendName:"webgl",kernelFunc:LG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zG(n){const{inputs:e,backend:t}=n,{indices:s,values:a,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const o=t.readSync(s.dataId),l=t.readSync(a.dataId),u=t.readSync(r.dataId),c=t.readSync(i.dataId)[0],[h,d,p,f,g]=wP(o,s.shape,s.dtype,l,a.dtype,u,c);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],a.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(m=>Number(m)))),t.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const VG={kernelName:ig,backendName:"webgl",kernelFunc:zG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BG(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:a,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(t.readSync(a.dataId)),o=t.readSync(s.dataId),l=Array.from(t.readSync(r.dataId)),[u,c,h]=CP(o,s.shape,s.dtype,i,l);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const MG={kernelName:og,backendName:"webgl",kernelFunc:BG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(n){const{inputs:e,backend:t}=n,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const i=t.readSync(s.dataId),o=t.readSync(a.dataId),l=t.readSync(r.dataId),[u,c]=Fw(i,s.shape,s.dtype,o,l,!0);return t.makeTensorInfo(c,s.dtype,u)}const UG={kernelName:lg,backendName:"webgl",kernelFunc:WG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(n){const{inputs:e,backend:t}=n,{data:s,indices:a,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const i=t.readSync(s.dataId),o=t.readSync(a.dataId),l=t.readSync(r.dataId),[u,c]=Fw(i,s.shape,s.dtype,o,l);return t.makeTensorInfo(c,s.dtype,u)}const HG={kernelName:ug,backendName:"webgl",kernelFunc:GG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jG(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:a,sparseValues:r,defaultValue:i}=e,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Fs(r,a,o),p=!1;if(r.dtype==="string"){const y=t.bufferSync(a),x=t.bufferSync(r),C=la(t.readSync(i.dataId)[0]),w=yP(y,x,o,d,c,u,l,h,C,p);return t.makeTensorInfo(o,w.dtype,w.values)}const f=new ip(u,l,a.shape.length,r.shape.length,h,[d,1],p),g=t.runWebGLProgram(f,[r,a,i],r.dtype),m=Q({inputs:{x:g},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(g),m}const XG={kernelName:cg,backendName:"webgl",kernelFunc:jG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qG(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{numOrSizeSplits:r,axis:i}=s,o=me(i,a.shape)[0],l=eh(a,r,o),u=a.shape.length,c=new Array(u).fill(0),h=a.shape.slice();return l.map(d=>{const p=[...h];p[o]=d;const f=Ra({inputs:{x:a},backend:t,attrs:{begin:c,size:p}});return c[o]+=d,f})}const KG={kernelName:ec,backendName:"webgl",kernelFunc:qG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _f="return sqrt(x);",YG=ye({opSnippet:_f,packedOpSnippet:_f,cpuKernelImpl:IP}),QG={kernelName:ro,backendName:"webgl",kernelFunc:YG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG="return x * x;",JG=ye({opSnippet:ZG}),e4={kernelName:tc,backendName:"webgl",kernelFunc:JG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lf="return (a - b) * (a - b);",t4=ct({opSnippet:Lf,packedOpSnippet:Lf}),n4={kernelName:io,backendName:"webgl",kernelFunc:t4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e;if(a.dtype!=="string")throw new Error("Input must be of datatype string");const r=t.readSync(a.dataId),i=Pn(r),o=NP(i,"string",s);return t.makeTensorInfo(a.shape,"string",o)}const a4={kernelName:vc,backendName:"webgl",kernelFunc:s4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4({inputs:n,attrs:e,backend:t}){const{x:s}=n,a=qt+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,r=new yn(s.shape,a);return t.runWebGLProgram(r,[s],s.dtype)}const i4={kernelName:oo,backendName:"webgl",kernelFunc:r4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o4{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const a=s.length,r=$e(s.length),i=$e(s.length);let o="";if(a===1)o="coords * strides + begin";else{let l=0;o=s.map((u,c)=>(l++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:x,end:C,strides:w}=Lc(a.shape,r,i,o,l,u,c,h,d);let I;if(g)I=Q({inputs:{x:a},backend:t,attrs:{shape:f}});else if(m||y){M(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const v=Oc(x,C,w),S=Ra({inputs:{x:a},backend:t,attrs:{begin:x,size:v}});I=Q({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(S)}else if(t.shouldExecuteOnCPU([a])){const S=t.readSync(a.dataId),$=we(a.shape,a.dtype,S),k=vP(p,$,w,x);I=t.makeTensorInfo(f,a.dtype,k.values)}else{const S=new o4(x,w,p);I=t.runWebGLProgram(S,[a],a.dtype)}const N=Q({inputs:{x:I},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(I),N}const u4={kernelName:hg,backendName:"webgl",kernelFunc:l4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(n){const{inputs:e,backend:t,attrs:s}=n,{separator:a,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.readSync(c.dataId),p=t.readSync(h.dataId),[f,g]=SP(d,p,a,r,i,o,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",g)]}const h4={kernelName:dg,backendName:"webgl",kernelFunc:c4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:a}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=t.readSync(r.dataId),l=t.readSync(i.dataId)[0],[u,c,h]=TP(o,l,a),d=c.length;return[t.makeTensorInfo([d,2],"int32",u),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const p4={kernelName:pg,backendName:"webgl",kernelFunc:d4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:a}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=t.readSync(r.dataId),o=$P(i,a);return t.makeTensorInfo(r.shape,"int32",o)}const m4={kernelName:fg,backendName:"webgl",kernelFunc:f4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g4="return tan(x);",y4=ye({opSnippet:g4}),x4={kernelName:uo,backendName:"webgl",kernelFunc:y4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b4=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,w4=ye({opSnippet:b4}),C4={kernelName:co,backendName:"webgl",kernelFunc:w4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:a,indices:r,updates:i}=e,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Fs(i,r,a.shape),d=[h/u,u];if(h===0)return t.makeTensorInfo(a.shape,r.dtype);const p=Q({inputs:{x:r},backend:t,attrs:{shape:[l,o]}}),f=Q({inputs:{x:i},backend:t,attrs:{shape:[l,u]}}),g=Q({inputs:{x:a},backend:t,attrs:{shape:d}}),m=new ip(l,o,p.shape.length,f.shape.length,c,d,!1,!0),y=t.runWebGLProgram(m,[f,p,g],g.dtype),x=Q({inputs:{x:y},backend:t,attrs:{shape:a.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),x}const N4={kernelName:mg,backendName:"webgl",kernelFunc:I4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v4{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*t[i];this.outputShape=s,this.rank=s.length;const a=$e(this.rank),r=S4(e);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function S4(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let a=0;a<n.length;a++)s.push(`imod(${t[a]}, ${n[a]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h0(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{reps:r}=s;if(a.dtype==="string"||a.shape.length>5){const l=t.readSync(a.dataId),u=a.dtype==="string"?l.map(d=>la(d)):l,c=we(a.shape,a.dtype,u),h=RP(c,r);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new v4(a.shape,r);return t.runWebGLProgram(i,[a],a.dtype)}const T4={kernelName:sc,backendName:"webgl",kernelFunc:h0};class $4{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class k4{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ps(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function Pf(n){let e=1;for(;e<n;)e*=2;return e}function R4(n){const{inputs:e,backend:t,attrs:s}=n,{x:a}=e,{k:r,sorted:i}=s,o=O().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=O().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,c=u[u.length-1];if(t.shouldExecuteOnCPU([a])||c<o||r>l){const k=t.readSync(a.dataId),[E,P]=EP(k,u,a.dtype,r,i);return[t.makeTensorInfo(E.shape,E.dtype,E.values),t.makeTensorInfo(P.shape,P.dtype,P.values)]}if(r===0)return u[u.length-1]=0,[t.makeTensorInfo(u,a.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(c===1)return[a,Ir({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const h=t.texData.get(a.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(a):a,g=B(u)/c,m=Q({inputs:{x:p},attrs:{shape:[g,c]},backend:t});d&&ps(t,p);const y=Pf(r),x=Pf(c);let C=null;const w=()=>C===null?[m,m]:[m,C],I=(k,E,P)=>{const z=w(),V=new $4(P),L=[[c],[C===null?1:0],[Number.NEGATIVE_INFINITY],[k],[E]],W=C;C=t.runWebGLProgram(V,z,"int32",L),ps(t,W)};for(let k=1;k<y;k*=2){const E=k*2;for(let P=k;P>=1;P/=2)I(E,P,[g,x])}for(let k=x;k>y;k/=2){const E=w(),P=new k4([g,k/2]),V=[[c],[C===null?1:0],[y]],F=C;C=t.runWebGLProgram(P,E,"int32",V),ps(t,F);const L=y/2,W=L*2;for(let _=L;_>=1;_/=2)I(W,_,C.shape)}let N=C;C=Ra({inputs:{x:C},backend:t,attrs:{begin:0,size:[g,r]}}),ps(t,N);let v=s0({inputs:{x:m,indices:C},backend:t,attrs:{axis:1,batchDims:1}});ps(t,m);const S=u.slice(0,-1);S.push(r),N=C,C=Q({inputs:{x:C},attrs:{shape:S},backend:t}),ps(t,N);const $=v;return v=Q({inputs:{x:v},attrs:{shape:S},backend:t}),ps(t,$),[v,C]}const E4={kernelName:gg,backendName:"webgl",kernelFunc:R4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A4{constructor(e,t,s,a,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const o=s==="nearest"?1:2;let l;switch(a){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(n){const{inputs:e,backend:t,attrs:s}=n,{image:a,transforms:r}=e,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=a.shape,[f,g]=u??[h,d],m=[c,f,g,p],y=new A4(h,d,i,o,l,m);return t.runWebGLProgram(y,[a,r],"float32")}const O4={kernelName:yg,backendName:"webgl",kernelFunc:D4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F4(n){const{inputs:e,attrs:t,backend:s}=n,{axis:a}=t,{x:r}=e;Ia(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:o,outputShape:l,indices:u}=AP(i,a,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const _4={kernelName:xg,backendName:"webgl",kernelFunc:F4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(n){const{inputs:e,backend:t,attrs:s}=n,{value:a}=e;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a,o=i.shape.length,l=a.shape[r],u=new Array(o-1);let c=0;for(let g=0;g<o;g++)g!==r&&(u[c++]=i.shape[g]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[r]=1;const f=new Array(l);for(let g=0;g<f.length;g++){d[r]=g;const m=Ra({inputs:{x:i},backend:t,attrs:{begin:d,size:p}}),y=Q({inputs:{x:m},backend:t,attrs:{shape:u}});f[g]=y,h.push(m)}return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),f}const P4={kernelName:rc,backendName:"webgl",kernelFunc:L4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z4{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,a=e.batchSize,r=e.inSize,i=e.numSegments,o=i*Math.ceil(r/s);this.outputShape=[a,o];const l="0.0",u="sumValue",c=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";r%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n){const{inputs:e,backend:t,attrs:s}=n,{x:a,segmentIds:r}=e,{numSegments:i}=s,o=a.shape.length,l=[];let u=0;const c=Be([u],o);let h=a;c!=null&&(h=yt({inputs:{x:a},backend:t,attrs:{perm:c}}),l.push(h),u=Ue(1,o)[0]);const d=sy(h.shape,u,i),p=B([h.shape[u]]),f=Q({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});l.push(f);const g=Rc(a.dtype),m=(w,I,N,v,S)=>{const $=w.shape[0],k=w.shape[1],E=ny(k,S),P={windowSize:E,inSize:k,batchSize:$,numSegments:S},z=new z4(P,I),V=t.compileAndRun(z,[w,N],v);if(l.push(V),V.shape[1]===S)return V;const F=c0({backend:t,attrs:{start:0,stop:S,step:1,dtype:"float32"}}),L=h0({inputs:{x:F},backend:t,attrs:{reps:[k/E]}});return l.push(F),l.push(L),m(V,I,L,v,S)},y=m(f,"unsortedSegmentSum",r,g,i),x=Q({inputs:{x:y},backend:t,attrs:{shape:d}});let C=x;if(c!=null){l.push(x);const w=is(c);C=yt({inputs:{x:C},backend:t,attrs:{perm:w}})}return l.forEach(w=>t.disposeIntermediateTensorInfo(w)),C}const B4={kernelName:ic,backendName:"webgl",kernelFunc:V4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M4=[vz,Tz,Rz,Dz,Fz,Pz,Vz,Mz,Hz,Xz,Yz,Jz,nV,iV,uV,hV,pV,yV,bV,CV,SV,DV,FV,zV,BV,jV,qV,ZV,oz,tB,iB,cB,gB,bB,CB,NB,SB,RB,DB,_B,PB,VB,MB,GB,jB,YB,ZB,tM,aM,iM,cM,fM,xM,CM,vM,SM,$M,RM,AM,OM,_M,VM,WM,HM,XM,YM,JM,s3,o3,iz,u3,aB,d3,m3,x3,uz,I3,T3,k3,D3,_3,V3,W3,j3,Y3,J3,tW,rW,oW,uW,pW,mW,yW,bW,CW,SW,RW,OW,MW,dz,HW,qW,QW,eU,WV,sU,rU,oU,cU,fU,hz,gU,xU,wU,IU,NU,UV,PW,TU,EU,FU,fz,zU,MU,HU,qU,ZU,eG,sG,iG,uG,dG,mG,xG,IG,SG,RG,DG,EV,VW,_G,PG,VG,MG,UG,HG,XG,KG,QG,e4,n4,a4,i4,u4,h4,p4,m4,zW,Cz,x4,C4,N4,T4,E4,O4,Iz,_4,P4,B4,aU];for(const n of M4)bg(n);/** @license See the LICENSE file. */const W4="4.6.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bH={"tfjs-core":W1,"tfjs-backend-cpu":mE,"tfjs-backend-webgl":az,"tfjs-data":Ex,"tfjs-layers":Nh,"tfjs-converter":b2,tfjs:W4};export{Ql as Abs,gi as Acos,yi as Acosh,C0 as AdadeltaOptimizer,N0 as AdagradOptimizer,w0 as AdamOptimizer,I0 as AdamaxOptimizer,xi as Add,Zl as AddN,Im as All,Nm as Any,Jl as ArgMax,eu as ArgMin,bi as Asin,wi as Asinh,Ii as Atan,Ci as Atan2,Ni as Atanh,au as AvgPool,nu as AvgPool3D,tu as AvgPool3DGrad,su as AvgPoolGrad,ru as BatchMatMul,iu as BatchToSpaceND,vm as Bincount,xc as BitwiseAnd,Sm as BroadcastArgs,_0 as BroadcastTo,G$ as Callback,tS as CallbackList,ou as Cast,vi as Ceil,Si as ClipByValue,gm as Complex,lu as ComplexAbs,uu as Concat,cu as Conv2D,$m as Conv2DBackpropFilter,hu as Conv2DBackpropInput,pu as Conv3D,du as Conv3DBackpropFilterV2,km as Conv3DBackpropInputV2,$i as Cos,ki as Cosh,Rm as CropAndResize,Em as Cumprod,fu as Cumsum,aS as CustomCallback,mm as DataStorage,Am as DenseBincount,Dm as DepthToSpace,mu as DepthwiseConv2dNative,Om as DepthwiseConv2dNativeBackpropFilter,Fm as DepthwiseConv2dNativeBackpropInput,_m as Diag,gu as Dilation2D,cl as Dilation2DBackpropFilter,ul as Dilation2DBackpropInput,zf as Draw,IH as ENV,H$ as EarlyStopping,Pm as Einsum,Ri as Elu,yu as EluGrad,NH as Environment,bc as Equal,Ei as Erf,Ai as Exp,xu as ExpandDims,Di as Expm1,zm as FFT,Vm as Fill,Mm as FlipLeftRight,Oi as Floor,Fi as FloorDiv,ol as FromPixels,bu as FusedBatchNorm,Wm as FusedConv2D,Um as FusedDepthwiseConv2D,rl as GPGPUContext,Gm as GatherNd,wu as GatherV2,fx as GraphModel,wc as Greater,_i as GreaterEqual,sS as History,Hm as IFFT,Cu as Identity,Tm as Imag,qe as InputSpec,Li as IsFinite,Pi as IsInf,zi as IsNan,fm as KernelBackend,vu as LRN,Nu as LRNGrad,Nv as LayerVariable,Qn as LayersModel,Iu as LeakyRelu,Cc as Less,Ic as LessEqual,jm as LinSpace,Bi as Log,Vi as Log1p,B0 as LogSoftmax,Sc as LogicalAnd,Tc as LogicalNot,$c as LogicalOr,vH as LogicalXor,SH as LowerBound,Mo as MathBackendCPU,Go as MathBackendWebGL,TH as MatrixBandPart,Su as Max,Ru as MaxPool,$u as MaxPool3D,Tu as MaxPool3DGrad,ku as MaxPoolGrad,Xm as MaxPoolWithArgmax,Mi as Maximum,Eu as Mean,Au as Min,Wi as Minimum,Du as MirrorPad,Ui as Mod,x0 as MomentumOptimizer,qm as Multinomial,Gi as Multiply,Fu as Neg,Km as NonMaxSuppressionV3,Ym as NonMaxSuppressionV4,Qm as NonMaxSuppressionV5,Nc as NotEqual,$H as OP_SCOPE_SUFFIX,_u as OneHot,Lu as OnesLike,HC as Optimizer,U1 as OptimizerConstructors,Pu as Pack,zu as PadV2,kH as Pool,Hi as Pow,Bu as Prelu,Mu as Prod,b0 as RMSPropOptimizer,Sn as RNN,Jm as RaggedGather,eg as RaggedRange,tg as RaggedTensorToTensor,ng as Range,RH as Rank,ym as Real,ji as RealDiv,Xi as Reciprocal,EH as Reduction,Ki as Relu,qi as Relu6,Wu as Reshape,Uu as ResizeBilinear,Gu as ResizeBilinearGrad,Hu as ResizeNearestNeighbor,ju as ResizeNearestNeighborGrad,Xu as Reverse,sg as RotateWithOffset,Yi as Round,Qi as Rsqrt,y0 as SGDOptimizer,ag as ScatterNd,rg as SearchSorted,qu as Select,Zi as Selu,sa as Sequential,Ji as Sigmoid,eo as Sign,to as Sin,no as Sinh,Yu as Slice,Zu as Softmax,so as Softplus,Ju as SpaceToBatchND,ig as SparseFillEmptyRows,og as SparseReshape,lg as SparseSegmentMean,ug as SparseSegmentSum,cg as SparseToDense,ec as SplitV,ro as Sqrt,tc as Square,io as SquaredDifference,vc as StaticRegexReplace,oo as Step,hg as StridedSlice,dg as StringNGrams,pg as StringSplit,fg as StringToHashBucketFast,lo as Sub,nc as Sum,gn as SymbolicTensor,uo as Tan,co as Tanh,gt as Tensor,dt as TensorBuffer,mg as TensorScatterUpdate,sc as Tile,gg as TopK,yg as Transform,ac as Transpose,xg as Unique,rc as Unpack,ic as UnsortedSegmentSum,AH as UpperBound,DH as Variable,lc as ZerosLike,Cm as _FusedMatMul,Ss as abs,W0 as acos,U0 as acosh,re as add,OH as addN,Yf as all,dl as any,Ha as argMax,G0 as argMin,H0 as asin,j0 as asinh,X0 as atan,q0 as atan2,K0 as atanh,Qf as avgPool,i1 as avgPool3d,FC as backend,q1 as backend_util,FH as basicLSTMCell,Y0 as batchNorm,n1 as batchNorm2d,s1 as batchNorm3d,a1 as batchNorm4d,Kf as batchToSpaceND,_H as bincount,LH as bitwiseAnd,PH as booleanMaskAsync,zH as broadcastArgs,Zf as broadcastTo,VH as broadcast_util,j4 as browser,we as buffer,cH as callbacks,te as cast,Q0 as ceil,zt as clipByValue,dm as clone,BH as complex,Ps as concat,VC as concat1d,zC as concat2d,PC as concat3d,LC as concat4d,K4 as constraints,Jf as conv1d,Hr as conv2d,em as conv2dTranspose,t1 as conv3d,JC as conv3dTranspose,MH as copyRegisteredKernels,Ku as cos,qf as cosh,WH as cosineWindow,hl as cumprod,Uf as cumsum,UH as customGrad,mH as data,hp as denseBincount,GH as deprecationWarn,Z0 as depthToSpace,tm as depthwiseConv2d,dH as deregisterOp,HH as device_util,jH as diag,J0 as dilation2d,XH as disableDeprecationWarnings,Ce as dispose,qH as disposeVariables,ge as div,eC as divNoNan,tC as dot,BC as dropout,KH as einsum,uc as elu,YH as enableDebugMode,QH as enableProdMode,ZH as enclosingPowerOfTwo,hn as engine,JH as ensureShape,O as env,sn as equal,nC as erf,sC as euclideanNorm,ha as exp,_n as expandDims,aC as expm1,MC as eye,rC as fft,GC as fill,ej as findBackend,tj as findBackendFactory,Ou as floor,iC as floorDiv,rz as forceHalfFloat,nj as fused,oc as gather,sj as gatherND,X4 as gather_util,aj as getBackend,rj as getGradient,m0 as getKernel,ij as getKernelsForBackend,yH as gpgpu_util,oj as grad,lj as grads,un as greater,ca as greaterEqual,oC as ifft,uj as imag,mn as image,cj as inTopKAsync,Y4 as initializers,jS as input,pm as io,lC as irfft,uC as isFinite,cC as isInf,hC as isNaN,it as keep,q4 as kernel_impls,iH as layers,nm as leakyRelu,jf as less,Ti as lessEqual,WC as linalg,hj as linspace,pH as loadGraphModel,fH as loadGraphModelSync,Q4 as loadLayersModel,dC as localResponseNormalization,Zn as log,am as log1p,pC as logSigmoid,sm as logSoftmax,fC as logSumExp,Ls as logicalAnd,Xf as logicalNot,mC as logicalOr,gC as logicalXor,dj as losses,pj as lowerBound,Zt as matMul,H4 as math,Js as max,rm as maxPool,r1 as maxPool3d,fj as maxPoolWithArgmax,zs as maximum,Ze as mean,pl as memory,mj as meshgrid,oH as metrics,im as min,cc as minimum,yC as mirrorPad,xC as mod,Z4 as model,lH as models,mc as moments,gj as movingAverage,A as mul,yj as multiRNNCell,xj as multinomial,xt as neg,Fg as nextFrame,bC as norm,jr as notEqual,Gr as oneHot,da as ones,jt as onesLike,as as op,bj as outerProduct,Qu as pad,wj as pad1d,Cj as pad2d,Ij as pad3d,Nj as pad4d,wC as pool,Vu as pow,om as prelu,vj as print,CC as prod,Sj as profile,Tj as raggedGather,$j as raggedRange,kj as raggedTensorToTensor,Rj as rand,Ej as randomGamma,_C as randomNormal,Aj as randomStandardNormal,fo as randomUniform,Dj as randomUniformInt,o1 as range,Oj as ready,Fj as real,IC as reciprocal,bm as registerBackend,eH as registerCallbackConstructor,M0 as registerGradient,bg as registerKernel,hH as registerOp,uH as regularizers,pa as relu,NC as relu6,_j as removeBackend,G as reshape,Ga as reverse,Lj as reverse1d,Pj as reverse2d,zj as reverse3d,Vj as reverse4d,TC as rfft,$C as round,Gf as rsqrt,ke as scalar,Bj as scatterND,Mj as scatter_util,Wj as searchSorted,lm as selu,um as separableConv2d,J4 as sequential,Uj as serialization,Gj as setBackend,Hj as setPlatform,D_ as setWebGLContext,jj as setdiff1dAsync,fE as shared,ao as sigmoid,kC as sign,Xj as signal,Mf as sin,Wf as sinh,en as slice,fc as slice1d,cm as slice2d,pc as slice3d,Xr as slice4d,M1 as slice_util,hc as softmax,ho as softplus,Vf as spaceToBatchND,qj as sparse,Kj as sparseToDense,Yj as spectral,Dn as split,os as sqrt,ht as square,RC as squaredDifference,po as squeeze,Fn as stack,mi as step,EC as stridedSlice,Qj as string,Te as sub,fe as sum,Rc as sumOutType,AC as tan,dc as tanh,Ts as tensor,ja as tensor1d,pp as tensor2d,g0 as tensor3d,Zj as tensor4d,Jj as tensor5d,eX as tensor6d,tX as tensorScatterUpdate,nX as tensor_util,G4 as test_util,R as tidy,xs as tile,sX as time,DC as topk,Xs as train,xe as transpose,hm as truncatedNormal,OC as unique,aX as unregisterGradient,rX as unregisterKernel,Hf as unsortedSegmentSum,On as unstack,Ht as upcastType,iX as upperBound,oX as util,lX as valueAndGrad,uX as valueAndGrads,UC as variable,cX as variableGrads,bH as version,b2 as version_converter,W1 as version_core,mE as version_cpu,Nh as version_layers,az as version_webgl,xH as webgl,gH as webgl_util,In as where,hX as whereAsync,kt as zeros,We as zerosLike};
